Program: UVMAP - make images from uv data
Programmer: T.J. Cornwell
Date: 6 Mar 1988
Purpose: UVMAP will make 2D and 3D images from uv data, by use of the
FFT and DFT. The output images can be deconvolved using CLEAN, VM or
VM3D.

Details:

IMSIZE: Size of image in pixels. First two must be powers of 2 since an
FFT is used. The last (Z-axis) number may be any number if SLOWZ is TRUE,
i.e. a DFT in Z is used, but otherwise it must also be a power of 2,
or 1, of course.

CELLSIZE: Size of cell in arcseconds. HINT: for a 3-D transform, make the
third number comparable to the other two values.

UVLIMITS: Range of u,v data to be gridded in WAVELENGTHS

FILTER: Apply a Gaussian taper to select source of this size:
Major axis, Minor Axis, and Position angle. FWHM in arcseconds.

SHIFT: Shift to be applied to the data before gridding (in arcseconds).
+,+ moves the image towards the north-east.

FOV: This determines the type of weighting to be applied to data: if
FOV = 0 then no weighting is used, otherwise the weighting is such that the
sidelobe level is optimized over a fraction FOV of the image. UNIFORM
weighting corresponds to FOV = 1.0. SUPERUNIFORM corresponds to FOV < 1.
FOV = 0.5 is the default: it suppresses sidelobes over the inner quarter
of the image.

NICEPSF: Reweighting of the visibilities so as to achieve the most
Gaussian PSF possible.

STOKES: Polarization to be imaged: I,Q,U, or V. One at a time please.

TIMERANGE: Range of data to be imaged: d,h,m,s format from first day.

CONVTYPE: Type of gridding convolution function:
	SF => Prolate Spheroidal Wave Function (AIPS default)
	SZE => Sze Tan special
	BOX => BoxCar: poor but fast
I recommend that SF be used.


SLOWZ: Use slow DFT in Z-direction. UVMAP can make 3-D images in two
ways: FFT in all three coordinates u,v,w or FFT in u,v preceded by
a DFT in w. The latter is nearly always better since it avoids aliasing
in the z-direction. (SLOWZ = T)

DFT: Do a slow DFT on all axes.

GEOMETRY: For 3-D images, the final image can be either a cube in
(x,y,z) or a plane in (x,y). The deconvolution programs accept either
but the latter is better since it saves space and also forces the
deconvolved brightness to lie on the celestial sphere. VM3D will
deconvolve the latter type of image (Use GEOMETRY = SPHERE). CLEAN
will only take cube images (GEOMETRY = CUBE).

VIS: Name of visibility data file e.g. D2/3C10UV.FTS

DIRTY,PSF: Names of output Dirty Image and Point Spread Function.
You can leave either blank if you wish no output.

.INFO
Imsize, I, 3, Image size
Cellsize, R, 3, Cellsizes in arc-seconds
Uvlimits, R, 2, UV limits in wavelengths
Filter, R, 3, Filter for sources of this size: BMAJ, BMIN, BPA (asec)
Shift, R, 3, Shift in arcseconds
FOV, R, 1, Field of view for reweighting: 0 => NATURAL, 1=> UNIFORM
NicePSF, L, 1, Reweight for NICE (Gaussian) PSF?
Stokes, C, 1, Stokes type I,Q,U, or V
Timerange, I, 8, Timerange (d,h,m,s)
ConvType, C, 1, Convolution function SF, SZE or BOX
SlowZ, L, 1, Slow transform in Z?, T or F
DFT, L, 1, Slow transform?, T or F
Vis, C, 1, Visibility data
Dirty, C, 1, Output dirty image
PSF, C, 1, Output point spread function
/Debug, L, 1, Debug? T or F
.DEFAULTS
Imsize = 128, 128, 1
Cellsize = 1, 1, 1
Uvlimits = 0.0, 1E10
Filter = 0.0, 0.0, 0.0
Shift = 0.0, 0.0, 0.0
FOV = 1.0
NicePSF = F
Stokes = I
Timerange = 0, 0, 0, 0, 0, 0, 0, 0
ConvType = SF
SlowZ = T
DFT = F
Vis = 
Dirty = 
PSF = 
/Debug = F
.END
