Needed enhancements

	Send calc comments, suggestions, bug fixes, enhancements and
	interesting calc scripts that you would like you see included in
	future distributions to:

		dbell@pdact.pd.necisa.oz.au  and  chongo@toad.com

	The following items are in the calc wish list.  Programs like
	this can be extended and improved forever.  The following is a 
	list of changes which might be done someday.

	*  Use faster multiply and divide algorithms for large numbers.

	*  Add error handling statements, so that QUITs, errors from the 
	   'eval' function, division by zeroes, and so on can be caught.
	   This should be done using syntax similar to:

		    ONERROR statement DO statement;

	   Something like signal isn't versatile enough.

	*  Add a debugging capability so that functions can be single stepped,
	   breakpoints inserted, variables displayed, and so on.

	*  Figure out how to write all variables out to a file, including
	   deeply nested arrays, lists, and objects.

	*  Make the command history useful:

		    allowing editing of old commands
		    enable history to also re-fetch the results of old 
		        commands, not just re-executing them
		    allow the inclusion of old commands or values of old
		       commands inside expressions.

	*  Add a "ksh-like" history editor (both vi and emacs mode).

	*  Implement pointers.

	*  Add initializers for matrices.  Perhaps allow something line:

		mat yummo[] = {2, 3, 5, 7, 13, 17, 19, 31, 61, 89, 107};

	*  Eliminate the need for the define keyword by doing smarter parsing.

	*  Allow results of a command (or all commands) to be re-directed to a 
	   file or piped into a unix command.

	*  Add some kind of #include and #define facility.  Perhaps use
	   the C pre-processor itself?

	*  Implement an autoload feature.  Associate a calc library filename
	   with a function, object, matrix or variable.  On the 1st reference
	   of such item, perform an automatic load of that file.

	*  Allow one to undefine anything.  Allow one to test of anything
	   is defined.

	*  Support a more general input and output base mode and just dec, 
	   hex or octal.

	*  Allow support of POSIX bc via a translator reads bc commands, 
	   converts it to calc and pipes it into calc.

	*  Implement symbolic algebra, such as polynomial manipulation.
