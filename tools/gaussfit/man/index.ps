%!PS-Adobe-3.0
%%Title: (index)
%%Creator: (Microsoft Word: LaserWriter 8 8.1.1)
%%CreationDate: (2:36 PM Thursday, January 13, 1994)
%%For: (Malmaison)
%%Pages: 2
%%DocumentFonts: Times-Roman Times-Bold
%%DocumentNeededFonts: Times-Roman Times-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -30 761 582
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 151 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Malmaison)setjob
/pT[1 0 0 -1 30 761]def/mT[1 0 0 -1 30 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
/f0_1/Times-Roman :mre
/f0_12 f0_1 12 scf
/f1_1/Times-Bold :mre
/f1_12 f1_1 12 scf
/f2_1 f1_1 :v def
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Malmaison; page: 1 of 2)setjob
%%EndPageSetup
gS 0 0 552 730 rC
72 14 :M
f0_12 sf
(74)S
361 14 :M
-.045(Gaussfit User\325s Manual)A
42 62 :M
f1_12 sf
12 f2_1 :p
43 :m
1.47 .147(13.      )J
65 62 :M
4 :m
1 .1( )J
78 62 :M
32 :m
.666(Index)A
42 98 :M
f0_12 sf
(! 24)S
42 110 :M
-.167(&& 24)A
42 122 :M
(* 24)S
42 134 :M
.179 .018(+ 24)J
42 146 :M
(- 24)S
42 158 :M
-.111(/ 24)A
42 170 :M
.286 .029(^ 24)J
42 182 :M
-.2(|| 24)A
42 206 :M
(abs 30)S
42 218 :M
-.053(acos 30)A
42 230 :M
-.115(additive operators 51)A
42 242 :M
-.048(arguments,by value 30)A
42 254 :M
-.088(arithmetic operators 23, 50)A
42 266 :M
-.124(arithmetic operators, precedence 24)A
42 278 :M
-.038(arrays 19)A
42 290 :M
-.055(asin 30)A
42 302 :M
-.082(assignment 23)A
42 314 :M
-.074(assignment operators 52)A
42 326 :M
-.115(assignment statements 23)A
42 338 :M
-.175(asymptotic relative efficiency 11)A
42 350 :M
-.164(atan 30)A
42 374 :M
.114 .011(break 28, 54)J
42 386 :M
-.099(built-in functions 57)A
42 410 :M
(C 17)S
42 422 :M
-.154(cepheid model 43)A
42 434 :M
-.023(comments 17, 49)A
42 446 :M
-.11(compound statements 53)A
42 458 :M
-.071(condition, equation of 2)A
42 470 :M
-.151(conditional statements 53)A
42 482 :M
.099 .01(constants 22, 50)J
42 494 :M
-.068(constraint, equation of 4)A
42 506 :M
-.173(correlation matrix 8)A
42 518 :M
(cos 30)S
42 530 :M
-.163(covariance 14)A
42 554 :M
.23 .023(data 14, 22, 36)J
42 566 :M
-.109(data, file format 9)A
42 578 :M
.146 .015(data, types 17, 50)J
42 590 :M
-.06(debugging 32)A
42 602 :M
-.054(declarations 17, 50)A
42 614 :M
-.137(derivatives 4)A
42 626 :M
.571 .057(do..until 28, 54)J
42 638 :M
.669 .067(do..while 27, 54)J
42 650 :M
-.083(double 12)A
42 674 :M
-.109(else 24)A
42 686 :M
-.109(else if 25)A
274 98 :M
-.127(environment 35)A
274 110 :M
.055 .006(environment, file 9, 10, 13)J
274 122 :M
-.115(equality operators 52)A
274 134 :M
-.12(equation of condition 2)A
274 146 :M
-.114(equation of constraint 4)A
274 158 :M
-.049(error messages, compiler 66)A
274 170 :M
-.037(error messages, general 58)A
274 182 :M
-.083(error messages, internal compiler 68)A
274 194 :M
-.138(estimation, correlation matrix 8)A
274 206 :M
-.112(estimation, Marquardt-Levenburg 8)A
274 218 :M
-.128(estimation, parameter 11)A
274 230 :M
-.14(estimation,parameter 8)A
274 242 :M
-.041(estimators, Huber-type 6)A
274 254 :M
-.094(EXCEL 14)A
274 266 :M
-.065(exp 30)A
274 278 :M
.108 .011(export 26, 32)J
274 290 :M
-.109(exportconstraint 32)A
274 302 :M
-.085(expression statements 52)A
274 326 :M
(factor 8, 11)S
274 338 :M
.322 .032(fair 6, 7, 11)J
274 350 :M
-.092(false 24)A
274 362 :M
.171 .017(file, data 12, 14, 36)J
274 374 :M
-.109(file, data format 9)A
274 386 :M
.17 .017(file, environment 9, 10, 13, 35)J
274 398 :M
-.081(file, name 12)A
274 410 :M
.008 .001(file, parameter 12, 15, 36)J
274 422 :M
.141 .014(file, results 12, 37)J
274 434 :M
-.022(file,results 34)A
274 446 :M
-.015(files, FITS header 9)A
274 458 :M
-.098(files,table format 14)A
274 470 :M
-.072(FITS header files 9)A
274 482 :M
.35 .035(for 26, 53)J
274 494 :M
-.098(function arguments 30)A
274 506 :M
-.039(function, user-defined 30)A
274 518 :M
-.069(function,built-in 30)A
274 530 :M
.099 .01(functions 29, 56)J
274 554 :M
.169 .017(GaussFit 17)J
274 566 :M
.266 .027(GaussFit, running 6)J
274 578 :M
-.082(gaussian model 43)A
274 590 :M
-.164(global parameter 16)A
274 602 :M
-.081(global parameters. 20)A
274 614 :M
-.128(global variables 18)A
274 638 :M
.391 .039(huber 6, 7, 11)J
274 650 :M
-.089(Huber-type estimators 6)A
274 674 :M
-.146(identifier names 49)A
274 686 :M
-.082(if 24)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Malmaison; page: 2 of 2)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 45 :M
f0_12 sf
-.045(Gaussfit User\325s Manual)A
480 45 :M
(75)S
90 81 :M
-.124(import 26)A
90 93 :M
-.025(include 32, 55)A
90 105 :M
-.131(indexed parameters 20)A
90 117 :M
-.095(input 31)A
90 129 :M
(IRLS 11)S
90 141 :M
-.065(iteration 10, 12)A
90 153 :M
-.129(iteratively reweighted least squares 11)A
90 165 :M
-.093(iters 10)A
90 189 :M
(keyword 9)S
90 201 :M
.175 .018(keywords 49)J
90 225 :M
-.029(lambda 8, 11)A
90 237 :M
-.141(lexical conventions 49)A
90 249 :M
-.165(linear model 35)A
90 261 :M
-.067(log 30)A
90 273 :M
-.048(log10 30)A
90 285 :M
-.056(logical operators 24, 52)A
90 297 :M
.45 .045(loop..until 28, 54)J
90 309 :M
.543 .054(loop..while 27, 54)J
90 321 :M
-.116(looping statements 25)A
90 345 :M
-.074(M-estimates, orthogonal regression 8)A
90 357 :M
-.148(Marquardt-Levenburg Estimation 8)A
90 369 :M
-.114(matrix, correlation 8)A
90 381 :M
.107 .011(minsum 7, 11)J
90 393 :M
-.116(model structure 56)A
90 405 :M
-.165(multiplicative operators 51)A
90 429 :M
.323 .032(Newton's method 11)J
90 441 :M
-.111(null 55)A
90 465 :M
-.046(observations 19)A
90 477 :M
-.099(operators, arithmetic 23)A
90 489 :M
-.065(operators, logical 24)A
90 501 :M
-.085(operators, relational 24)A
90 513 :M
-.159(orbit determination model 44)A
90 525 :M
-.082(orm 8)A
90 537 :M
-.106(orthogonal regression M-estimates 8)A
90 549 :M
-.084(output 31)A
90 561 :M
-.145(overlapping plate model 46)A
90 585 :M
-.178(parameter 36)A
90 597 :M
-.118(parameter estimation 8, 11)A
90 609 :M
-.131(parameter, multi-dimensional 16)A
90 621 :M
.075 .007(parameters 15, 19, 20)J
90 633 :M
-.119(parameters, explicit 21)A
90 645 :M
-.081(parameter,s global 20)A
90 657 :M
-.134(parameters, implicit 21)A
90 669 :M
-.077(parameters, indexed 20)A
90 681 :M
.11 .011(params 12, 15)J
90 693 :M
-.116(plate constants 20)A
90 705 :M
-.163(precedence 51)A
90 717 :M
-.128(precedence,arithmetic operators 24)A
322 81 :M
-.1(printing 10)A
322 93 :M
-.141(prmat 11)A
322 105 :M
-.065(programming language, C 17)A
322 117 :M
-.042(programming language, GaussFit 5)A
322 129 :M
.229 .023(prvar 8, 11)J
322 153 :M
-.119(reduction 11)A
322 165 :M
-.137(reduction method chart 12)A
322 177 :M
-.041(REFLEX 14)A
322 189 :M
-.075(relational operators 24, 51)A
322 201 :M
.357 .036(results 12, 34, 37)J
322 213 :M
.11 .011(return 30, 55)J
322 225 :M
-.049(robust  estimation, 6)A
322 249 :M
(scale 7, 12)S
322 261 :M
-.049(scope rules 18)A
322 273 :M
-.111(SDAS 14)A
322 285 :M
-.094(sigma 12)A
322 297 :M
-.047(sigmas 8)A
322 309 :M
(sin 30)S
322 321 :M
-.143(Space Telescope 1)A
322 333 :M
(sqrt 30)S
322 345 :M
-.121(standard deviation 8)A
322 357 :M
-.115(statement, include 32)A
322 369 :M
-.041(statements 23, 52)A
322 381 :M
-.068(statements, assignment 23)A
322 393 :M
-.069(syntax, statement 23)A
322 417 :M
-.189(table 14)A
322 429 :M
-.132(tan 30)A
322 441 :M
-.134(tol 10)A
322 453 :M
-.179(tolerance 10)A
322 465 :M
-.187(trace 33)A
322 477 :M
(triang 10, 31)S
322 489 :M
-.086(triangularize 10, 31)A
322 501 :M
-.109(true 24)A
322 513 :M
.311 .031(tukey 6, 7, 11)J
322 525 :M
-.024(types, data 17)A
322 549 :M
-.056(unary operators 51)A
322 561 :M
-.067(user defined functions 56)A
322 585 :M
-.119(variables 18)A
322 597 :M
-.068(variables, global 18)A
322 609 :M
-.163(variance 14)A
322 633 :M
.111 .011(while 26, 53)J
endp
%%Trailer
end		% md
%%EOF
