%!PS-Adobe-3.0
%%Title: (Part one)
%%Creator: (Microsoft Word: LaserWriter 8 8.1.1)
%%CreationDate: (2:01 PM Thursday, January 13, 1994)
%%For: (Malmaison)
%%Pages: 34
%%DocumentFonts: Times-Roman Symbol Times-Bold Times-Italic Times-BoldItalic Courier Courier-Bold Courier-Oblique Helvetica
%%DocumentNeededFonts: Times-Roman Symbol Times-Bold Times-Italic Times-BoldItalic Courier Courier-Bold Courier-Oblique Helvetica
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -30 761 582
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 218 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Malmaison)setjob
/pT[1 0 0 -1 30 761]def/mT[1 0 0 -1 30 761]def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Courier
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier-Oblique
%%IncludeFont: Helvetica
/f0_1/Times-Roman :mre
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f0_7 f0_1 7 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_18 f1_1 18 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Times-Bold :mre
/f2_12 f2_1 12 scf
/f3_1 f1_1 def
/f3_12 f3_1 12 scf
/f4_1/Times-Italic :mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f5_1 f1_1 :mi
/f5_12 f5_1 12 scf
/f6_1 f2_1 :v def
/f7_1/Times-BoldItalic :mre
/f7_12 f7_1 12 scf
/f8_1/Courier :mre
/f8_12 f8_1 12 scf
/f9_1/Courier-Bold :mre
/f9_12 f9_1 12 scf
/f11_1/Courier-Oblique :mre
/f11_12 f11_1 12 scf
/f12_1/Helvetica :mre
/f12_24 f12_1 24 scf
/f12_14 f12_1 14 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Malmaison; page: 1 of 34)setjob
%%EndPageSetup
gS 0 0 552 730 rC
96 26 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
453 26 :M
(1)S
60 62 :M
f2_12 sf
3(1.)A
96 62 :M
.425(Introduction)A
60 86 :M
f0_12 sf
-.109(In preparing for astrometric data reduction with data from the NASA Hubble Space Telescope,)A
60 98 :M
-.135(it became evident that a very flexible least squares package was required so that astrometric)A
60 110 :M
-.081(models could easily and quickly be written, tested and modified. Such a system should take)A
60 122 :M
-.132(care of the nitty-gritty details so that the user can be confident that they had been handled)A
60 134 :M
-.042(correctly. The program GaussFit is the result.)A
60 158 :M
-.083(GaussFit is designed to facilitate the solution of least squares and robust estimation problems.)A
60 170 :M
-.084(A great deal of attention has been paid to making GaussFit easy to use. GaussFit is capable of)A
60 182 :M
-.086(taking care of many of the details that formerly had to be specified by the user, who is now)A
60 194 :M
-.078(freed to concentrate on the broader aspects of his problem. The user of GaussFit will find it)A
60 206 :M
-.11(easy to create reduction models of great complexity with only a few statements, and to try)A
60 218 :M
-.079(variations on a given reduction model with only minor changes to the input. GaussFit is also)A
60 230 :M
-.112(capable of handling situations that arise often enough to be of practical interest, but which have)A
60 242 :M
-.068(usually been ignored because they are not well understood by many users. It provides an easy)A
60 254 :M
-.114(and natural way to formulate general nonlinear problems; problems where the observation)A
60 266 :M
-.113(equations \(equations of condition\) contain more than one observation; problems with correlated)A
60 278 :M
-.105(observations; problems where exact constraints among parameters must be enforced; and)A
60 290 :M
-.137(certain robust estimation methods that generalize least squares to non-euclidian metrics and)A
60 302 :M
-.115(provide greater immunity against \322outliers\323 than does the classical least squares method.)A
60 326 :M
-.085(A unique feature of GaussFit is that although it is a special-purpose system designed for)A
60 338 :M
-.104(estimation problems, it includes a full-featured programing language which has all the power of)A
60 350 :M
-.06(traditional languages such as C, Pascal, and FORTRAN. This language possesses a complete)A
60 362 :M
-.104(set of looping and conditional statements as well as a modern nested-statement structure.)A
60 374 :M
-.107(Variables and arrays may be freely created and used by the programmer. There is therefore no)A
60 386 :M
-.135(theoretical limit to the complexity of model that can be expressed in the GaussFit programming)A
60 398 :M
-.039(language.)A
60 424 :M
-.013(The present version of GaussFit runs under Berkeley UNIX)A
f0_10 sf
0 -3 rm
(\250)S
0 3 rm
f0_12 sf
-.013( v. 4.3, on Digital VAX)A
f0_10 sf
0 -3 rm
(\250)S
0 3 rm
60 438 :M
f0_12 sf
-.068(computers under VMS)A
f0_10 sf
0 -3 rm
-.09(\250)A
0 3 rm
f0_12 sf
-.059(, and on the Apple Macintosh Plus)A
f0_10 sf
0 -3 rm
-.06(\250 )A
0 3 rm
f0_12 sf
-.06(and Macintosh II)A
f0_10 sf
0 -3 rm
-.09(\250)A
0 3 rm
f0_12 sf
-.066( computers.)A
60 450 :M
-.094(We are studying the possibility of porting it to other machines.)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Malmaison; page: 2 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(2)S
388 57 :M
-.03(GaussFit User\325s Manual)A
72 93 :M
f2_12 sf
3(2.)A
108 93 :M
3.513 .351(Overview of GaussFit)J
90 117 :M
2(2.1)A
144 117 :M
2.718 .272(Least Squares Estimation)J
90 141 :M
f0_12 sf
.926 .093(The method of least squares, invented by Gauss nearly two centuries ago, is a reliable)J
90 153 :M
.419 .042(workhorse for estimating parameters from noisy data. A number of improvements to the)J
90 165 :M
.042 .004(basic method have been made [Br55], [Br73], [Je80], [Je81], [Fu87] and are implemented)J
90 177 :M
.569 .057(in this program, but the fundamental idea of the method of least squares is very simple:)J
90 189 :M
-.009(given a mathematical description which specifies the dependence of observed \(noisy\) data)A
90 201 :M
.01 .001(on certain parameters, find the value of the parameters that minimizes the overall error. In)J
90 213 :M
1.193 .119(the classical method of least squares, the overall error is estimated by the sum of the)J
90 225 :M
.441 .044(\(weighted\) squares of the residuals \(i.e., differences between the values predicted by the)J
90 237 :M
.218 .022(model and the values observed\). The method is extended straightforwardly to include the)J
90 249 :M
.474 .047(case where observations are correlated, and with more difficulty to the case where more)J
90 261 :M
2.405 .241(than one observation may appear in the mathematical relationship connecting the)J
90 273 :M
.411 .041(observations and the parameters. Nonlinear equations can also be solved by a method of)J
90 285 :M
.01 .001(successive approximations. The program GaussFit implements a generalized least squares)J
90 297 :M
-.104(algorithm that handles all of these cases.)A
108 321 :M
f2_12 sf
1.75(2.1.1)A
144 321 :M
3.447 .345(Condition Equations)J
108 345 :M
f0_12 sf
.322 .032(In least squares, an )J
f4_12 sf
.522 .052(equation of condition)J
f0_12 sf
.418 .042( is a relationship that connects observations)J
108 357 :M
.109 .011(and parameters. The observations are, of course, the observed data. The parameters in)J
108 369 :M
.798 .08(a problem may represent quantities of physical interest \(e.g., the speed of light, the)J
108 381 :M
1.206 .121(parallax of a star\) or they may be \322nuisance parameters\323 which are included only)J
108 393 :M
.953 .095(because they are required by the mathematical model \(e.g., an oscillator frequency)J
108 405 :M
-.078(correction, a plate constant\).)A
108 429 :M
-.125(The simplest example of an equation of condition is the one associated with fitting a)A
108 441 :M
-.178(straight line:)A
126 465 :M
f4_12 sf
.09(y)A
f0_12 sf
.094 .009( = )J
f4_12 sf
.101(a)A
f0_12 sf
.094 .009( + )J
f4_12 sf
.191(bx)A
108 489 :M
f0_12 sf
1.404 .14(where )J
f4_12 sf
.37(x)A
f0_12 sf
.847 .085(  takes on the values )J
f4_12 sf
.37(x)A
f0_7 sf
0 2 rm
.243(1)A
0 -2 rm
f0_12 sf
.348 .035(, )J
f4_12 sf
.37(x)A
f0_7 sf
0 2 rm
.243(2)A
0 -2 rm
f0_12 sf
.987 .099(,\311 and )J
f4_12 sf
.37(y)A
f0_12 sf
1.125 .113(  takes on the corresponding values )J
f4_12 sf
.37(y)A
f0_7 sf
0 2 rm
.243(1)A
0 -2 rm
(,)S
108 501 :M
f4_12 sf
(y)S
f0_7 sf
0 2 rm
(2)S
0 -2 rm
f0_12 sf
.089 .009(,\311. In this example the values of )J
f4_12 sf
(x)S
f0_12 sf
.088 .009( are assumed to be without error. The )J
f4_12 sf
(a)S
f0_12 sf
.053 .005( and )J
f4_12 sf
(b)S
f0_12 sf
.077 .008( are)J
108 513 :M
.167 .017(parameters. They are to be adjusted until the resulting straight line fits the data \322best\323)J
108 525 :M
-.029(\(in the sense of least squares\). Each pair \()A
f4_12 sf
(x)S
f4_10 sf
0 2 rm
(i)S
0 -2 rm
f0_12 sf
(,)S
f4_12 sf
(y)S
f4_10 sf
0 2 rm
(i)S
0 -2 rm
f0_12 sf
-.031(\) gives rise to an equation of condition of)A
108 537 :M
-.14(the form)A
126 561 :M
f4_12 sf
.212(y)A
f4_10 sf
0 2 rm
.11(i)A
0 -2 rm
f0_12 sf
.221 .022( = )J
f4_12 sf
.238(a)A
f0_12 sf
.221 .022( + )J
f4_12 sf
.225(bx)A
f4_10 sf
0 2 rm
.11(i)A
0 -2 rm
f0_12 sf
(.)S
108 585 :M
-.059(In GaussFit, the equations of condition are given )A
f4_12 sf
-.057(implicitly)A
f0_12 sf
-.066(. We express the)A
108 597 :M
-.102(relationship between the observations and the parameters as a formula which would)A
108 609 :M
-.081(equal zero if there were no errors. For example, the equation of condition for our linear)A
108 621 :M
-.137(problem could be written symbolically)A
126 645 :M
f4_12 sf
.146(y)A
f4_10 sf
0 2 rm
.076(i)A
0 -2 rm
f0_12 sf
.143 .014( \320 )J
f4_12 sf
.164(a)A
f0_12 sf
.143 .014( \320 )J
f4_12 sf
.155(bx)A
f4_10 sf
0 2 rm
.076(i)A
0 -2 rm
f0_12 sf
.248 .025( = 0,)J
108 669 :M
-.046(which would be satisfied exactly if there were no errors in the quantities )A
f4_12 sf
-.053(x)A
f4_10 sf
0 2 rm
(i)S
0 -2 rm
f0_12 sf
-.03(, )A
f4_12 sf
-.053(y)A
f4_10 sf
0 2 rm
(i)S
0 -2 rm
f0_12 sf
(.)S
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Malmaison; page: 3 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
483 57 :M
(3)S
126 81 :M
-.04(In the GaussFit programming language, we may omit the subscripts. GaussFit)A
126 93 :M
-.121(automatically obtains the subscripts from the data file as the lines in the file are scanned.)A
126 105 :M
-.081(Thus we would write the above equation as)A
144 130 :M
f8_12 sf
-.211(u = y - a - b*x;)A
126 154 :M
f0_12 sf
-.09(where the variable)A
f8_12 sf
-.132( u )A
f0_12 sf
-.087(would be equal to zero if there were no errors. This is the)A
126 166 :M
-.12(implicit equation of condition we require.)A
126 190 :M
-.088(In general, we can write equations of condition that are linear or nonlinear, or which)A
126 202 :M
-.082(contain one observation or many observations. Each equation of condition is expressed)A
126 214 :M
-.109(implicitly. It is possible for the same data point to give rise to more than one equation of)A
126 226 :M
-.084(condition, as for example when data )A
f4_12 sf
-.091(x)A
f0_12 sf
-.08( and )A
f4_12 sf
-.091(y)A
f0_12 sf
-.084( are taken simultaneously and there are two)A
126 239 :M
-.12(independent relationships that connect the data to the parameters.)A
f0_9 sf
0 -3 rm
(1)S
0 3 rm
126 263 :M
f0_12 sf
-.102(These first two examples \(for a periodic function and a polynomial, respectively\))A
126 275 :M
-.096(represent the most commonly encountered types of equations of condition, those that)A
126 287 :M
-.072(can be expressed by a simple formula.)A
144 312 :M
f8_12 sf
.032 .003(u = y - a*)J
f9_12 sf
(sin)S
f8_12 sf
.046 .005(\(x\) - b*)J
f9_12 sf
(cos)S
f8_12 sf
.021(\(x\);)A
144 336 :M
-.206(u = y - a*x - b*x^2 - c*x^3;)A
126 360 :M
f0_12 sf
-.093(The third example expresses an affine relationship among four observed quantities)A
f8_12 sf
-.137( x)A
f0_12 sf
(,)S
126 373 :M
f8_12 sf
(y)S
f0_12 sf
(,)S
f8_12 sf
-.027( p)A
f0_12 sf
-.017(, and)A
f8_12 sf
-.027( q )A
f0_12 sf
-.019(by two simultaneous equations.)A
144 398 :M
f8_12 sf
-.208(u = a*x - b*y + c - p;)A
144 422 :M
-.208(v = b*x + a*y + d - q;)A
126 445 :M
f0_12 sf
-.117(The final example assumes the user has specified the equation of condition)A
126 457 :M
f4_12 sf
-.093(algorithmically,)A
f0_12 sf
-.09( that is, it may not be possible to express the equation in closed form,)A
126 469 :M
-.09(but it may be possible to express it as the result of a sequence of calculations.)A
144 494 :M
f8_12 sf
-.211(u = userfn\(x,y\);)A
126 517 :M
f0_12 sf
-.104(An example is the solution of Kepler\325s equation, which can be calculated by successive)A
126 529 :M
-.082(approximations, but is not easily expressed in closed form \(see the sample problem of)A
126 541 :M
-.104(\2447.3\). Another example would be if the equation of condition were calculated as the)A
126 553 :M
-.132(result of a numerical integration from some initial conditions. The initial conditions)A
126 566 :M
-.126(might be the parameters of the problem, and the function )A
f8_12 sf
-.187(userfn)A
f0_12 sf
-.136( might be a numerical)A
126 578 :M
-.117(integration program written in the GaussFit programming language. Yet a third example)A
126 590 :M
-.11(might be if the equation of condition is too long to be expressed conveniently in closed)A
126 602 :M
-.023(form \(e.g., if the expression is very long and is conveniently broken into steps\).)A
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 676.24 -.24 .24 233.24 676 .24 90 676 @a
90 701 :M
f0_9 sf
(1)S
108 704 :M
f0_12 sf
-.118(A monospaced typewriter-style font has been used for all data that are either input or output)A
108 717 :M
.233 .023(to the computer. GaussFit reserved words have been written )J
f9_12 sf
.086(boldface)A
f0_12 sf
(.)S
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Malmaison; page: 4 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(4)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
-.094(For example, to fit a Gaussian plus straight line we might write for convenience:)A
126 106 :M
f8_12 sf
-.215(userfn\(x,y\) {)A
144 118 :M
f9_12 sf
.529(variable)A
f8_12 sf
1.323 .132( w;)J
144 142 :M
-.211(w = y - a + b*x;)A
144 154 :M
-.091(w = w + )A
f9_12 sf
-.091(exp)A
f8_12 sf
-.097(\(-\(x-c\)^2/\(2*s\)\);)A
144 166 :M
f9_12 sf
.468(return)A
f8_12 sf
1.171 .117( w;)J
126 178 :M
(})S
108 201 :M
f2_12 sf
1.75(2.1.2)A
144 201 :M
2.99 .299(Constraint Equations)J
108 225 :M
f0_12 sf
-.118(Sometimes it is convenient to express the model being fitted in terms of redundant)A
108 237 :M
-.056(parameters, i.e., there may be exact relationships involving only parameters. For)A
108 249 :M
-.1(example, we may wish to force a  parameter to have a particular value. Thus we can)A
108 261 :M
-.102(force a straight line to go through the origin by requiring)A
126 285 :M
f4_12 sf
-.186(a)A
f0_12 sf
-.194( = 0)A
108 309 :M
-.132(Another example \(discussed by Deming[De38]\) might arise if the model involves the)A
108 321 :M
-.122(three angles of a triangle. While the third angle can always be expressed explicitly in)A
108 333 :M
-.112(terms of the other two, it may be simpler for the programmer to treat all three angles on)A
108 345 :M
-.078(the same footing by introducing a variable for each, say )A
f4_12 sf
-.099(a)A
f0_12 sf
-.05(, )A
f4_12 sf
-.099(b)A
f0_12 sf
-.077( and )A
f4_12 sf
-.088(c)A
f0_12 sf
-.084(, and then enforcing)A
108 357 :M
-.175(the condition that)A
126 381 :M
f4_12 sf
-.151(a)A
f0_12 sf
-.107( + )A
f4_12 sf
-.151(b)A
f0_12 sf
-.107( + )A
f4_12 sf
-.134(c)A
f0_12 sf
-.135( \320 180)A
cF f1_12 sf
-.135(\260)A
sf
-.135( = 0)A
108 405 :M
-.084(This may result in cleaner, easier-to-maintain code. GaussFit provides a simple way to)A
108 417 :M
-.075(specify an arbitrary number of constraints of this type, both linear and nonlinear.See \244)A
108 429 :M
.667(4.7.)A
108 453 :M
f2_12 sf
1.75(2.1.3)A
144 453 :M
.603(Derivatives)A
108 477 :M
f0_12 sf
-.1(One of the onerous tasks that faces the implementer of a least squares problem,)A
108 489 :M
-.134(particularly if the problem is nonlinear, is the calculation of the partial derivatives with)A
108 501 :M
-.114(respect to the parameters and observations that are required in order to form the)A
108 513 :M
-.07(equations of condition and the constraint equations. GaussFit solves this problem)A
108 525 :M
-.175(automatically using a built-in algebraic manipulator to calculate all of the required partial)A
108 537 :M
-.097(derivatives. Every expression that the user\325s model computes will carry all of the)A
108 549 :M
-.117(required derivative information along with it.)A
108 573 :M
-.102(This is very convenient, especially when a condition or a constraint equation involves a)A
108 585 :M
-.117(complex calculation. For example, if the calculation can only be expressed)A
108 597 :M
-.147(algorithmically, GaussFit will automatically carry along all derivative information at)A
108 609 :M
-.176(each step of the calculation. Notice that the derivatives are calculated )A
f4_12 sf
-.181(analytically)A
f0_12 sf
-.201( at each)A
108 621 :M
-.054(step. No numerical approximations are used.)A
108 645 :M
-.157(Because the required derivatives are all calculated automatically, the user is completely)A
108 657 :M
-.108(relieved of the burden of worrying about them and can concentrate on the task of)A
108 669 :M
-.105(specifying the correct equations of condition and constraints. If the model to be fitted)A
108 681 :M
-.122(changes, the derivative information will automatically be changed as well. This feature)A
108 693 :M
-.089(of GaussFit is a real time-saver, particularly when fitting complex nonlinear models.)A
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Malmaison; page: 5 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
483 57 :M
(5)S
108 81 :M
f2_12 sf
2(2.2)A
162 81 :M
2.177 .218(Structure of GaussFit as a Program)J
108 105 :M
f0_12 sf
-.05(The program GaussFit consists of a number of parts \(see Figure 1\). It has a compiler)A
108 117 :M
-.063(which takes the user\325s model, written in the GaussFit programming language, and converts)A
108 129 :M
-.101(it into an assembly language program for an abstract machine. This program is then)A
108 141 :M
-.118(interpreted. Data are obtained from the user\325s data and parameter files and used to form the)A
108 153 :M
-.114(equations of condition and constraint. To do this the interpreter relies on a built-in algebraic)A
108 165 :M
-.166(manipulator called the \322cotangent bundle machine\323 to calculate not only the value of every)A
108 177 :M
-.125(arithmetic operation, but also all of the required derivative information \(which is therefore)A
108 189 :M
-.129(computed analytically, not numerically\). After the condition and constraint equations have)A
108 201 :M
-.093(been formed, the resulting matrix is sent to the solution algorithm which has been chosen)A
108 213 :M
-.06(by the user. For least squares estimation, it is a Householder orthogonal transformation)A
108 225 :M
-.096(method; for median-type estimators, it is based on the Barrodale and Roberts)A
108 237 :M
-.097(implementation of the Simplex algorithm; and for other robust methods, Householder)A
108 249 :M
-.107(transformations are used together with either Newton\325s method or the method of Iteratively)A
108 261 :M
-.099(Reweighted Least Squares \(IRLS\). The data files are then updated to reflect the results of)A
108 273 :M
-.115(the calculation, and the process is iterated until some iteration criterion has been satisfied.)A
108 297 :M
-.045(To set up a problem for GaussFit, the user must provide several things. The first is a)A
108 309 :M
-.115(mathematical description of the model to be used to reduce the data. This is a short program)A
108 321 :M
-.093(in the GaussFit programming language that describes how the equations of condition and)A
108 333 :M
-.11(the constraints \(if any\) are to be calculated. This calculation can be in the form of equations,)A
108 345 :M
-.125(or it can be algorithmic in nature.)A
108 369 :M
-.078(Next, the user must provide an \322environment\323 file. This file specifies such things as the)A
108 381 :M
-.124(names of data and parameter files, iteration and convergence criteria, the size of array that)A
108 393 :M
-.102(will be reserved for the data, what matrices and other data will be printed, and the method)A
108 405 :M
-.075(of reduction to be used \(particularly if the user chooses a robust method\).)A
.938 G
108 420 405 234 rC
108 477 404 176 rF
:a
40 <E070381C0E0783C1
><E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1
>fg bk :b
108.5 477.5 403 175 rS
:e
1 G
120 420 83 45 rF
0 G
120.5 420.5 82 44 rS
1 G
120 489 203 528 9 @q
0 G
120.5 489.5 202.5 527.5 8.5 @s
gS
.649 .65 scale
247.767 673.56 :T
-247.767 -673.56 :T
198.767 661.56 :M
f12_14 sf
-.203(MODEL IN THE )A
224.961 676.945 :M
-.38(GAUSS )A
211.093 692.33 :M
-.113(LANGUAGE)A
212.634 783.103 :M
-.016(COMPILER)A
gR
1 G
120 545 83 45 rF
0 G
120.5 545.5 82 44 rS
gS
.649 .65 scale
248.093 874.413 :T
-248.093 -874.413 :T
211.093 855.413 :M
f12_14 sf
-.295(ASSEMBLY )A
191.063 870.798 :M
-.278(LANGUAGE   FOR )A
211.093 884.644 :M
-.195(ABSTRACT )A
215.716 900.03 :M
-.091(MACHINE)A
gR
1 G
219 545 302 584 9 @q
0 G
219.5 545.5 301.5 583.5 8.5 @s
gS
.649 .65 scale
401.849 859.798 :T
-401.849 -859.798 :T
352.849 870.798 :M
f12_14 sf
-.077(INTERPRETER)A
gR
1 G
219 608 302 647 9 @q
0 G
219.5 608.5 301.5 646.5 8.5 @s
gS
.649 .65 scale
403.013 962.8 :T
-403.013 -962.8 :T
359.013 950.8 :M
f12_14 sf
-.085(COTANGENT )A
374.421 966.186 :M
-.278(BUNDLE )A
369.798 981.571 :M
-.091(MACHINE)A
gR
1 G
219 420 83 45 rF
0 G
219.5 420.5 82 44 rS
gS
.649 .65 scale
402.635 665.945 :T
-402.635 -665.945 :T
363.635 676.945 :M
f12_14 sf
-.125(DATA FILES)A
gR
-114 -66 20 19 162 489.5 @l
-1 -1 162 481 1 1 161 464 @b
10 -114 -66 162 546 @k
-1 -1 162 538 1 1 161 527 @b
156 204 19 20 220.5 571 @l
201 571 -1 1 212 570 1 201 570 @a
10 -114 -66 261 546 @k
-1 -1 261 538 1 1 260 464 @b
-114 -66 20 19 261 608.5 @l
10 66 114 261 584 @k
-1 -1 261 600 1 1 260 592 @b
1 G
318 545 83 45 rF
0 G
318.5 545.5 82 44 rS
gS
.649 .65 scale
555.85 857.028 :T
-555.85 -857.028 :T
503.85 860.028 :M
f12_14 sf
-.139(EQUATIONS OF )A
517.718 875.413 :M
.058(CONDITION)A
gR
1 G
418 545 501 584 9 @q
0 G
418.5 545.5 500.5 583.5 8.5 @s
gS
.649 .65 scale
707.801 857.028 :T
-707.801 -857.028 :T
671.801 860.028 :M
f12_14 sf
-.056(SOLUTION )A
667.178 875.413 :M
.098(ALGORITHM)A
gR
156 204 19 20 319.5 565 @l
301 565 -1 1 311 564 1 301 564 @a
10 58 20 19 302 439.5 @l
308 444 -1 1 459 545 1 308 443 @a
10 156 204 419 565 @k
400 565 -1 1 410 564 1 400 564 @a
1 G
418 420 83 45 rF
0 G
418.5 420.5 82 44 rS
gS
.649 .65 scale
708.423 665.945 :T
-708.423 -665.945 :T
676.423 676.945 :M
f12_14 sf
-.094(RESULTS)A
gR
10 66 114 460 465 @k
-1 -1 459 546 1 1 458 473 @b
1 G
376 607 478 648 9 @q
0 G
3 lw
377.5 608.5 476.5 646.5 7.5 @s
gS
.649 .65 scale
660.382 963.801 :T
-660.382 -963.801 :T
599.382 970.801 :M
f12_24 sf
.142(GAUSSFIT)A
gR
1 lw
0 284 46 50 319.5 508.5 @n
6.5 66 114 342.5 500.5 @k
-1 -1 343 514 1 1 342 506 @b
gR
gS 30 31 552 730 rC
217 675 :M
f0_12 sf
-.029(Figure 1: Structure of the Program GaussFit.)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Malmaison; page: 6 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(6)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 81 :M
-.094(Third, the user must provide the input data in a form acceptable to the program. In this)A
90 95 :M
-.095(version of the program, a file in the format of a Macintosh EXCEL)A
f0_10 sf
0 -3 rm
-.146(\250)A
0 3 rm
f0_12 sf
-.088( text file is needed.)A
90 107 :M
-.076(This output format is provided as an option by many programs for personal computers and)A
90 119 :M
-.105(is also easily implemented on any computer that provides ASCII text files as output. \(The)A
90 131 :M
-.126(format is described in greater detail later.\))A
90 155 :M
-.112(Finally, the user must provide a file with initial approximations of the parameters to be)A
90 167 :M
-.049(fitted. A weakness of GaussFit \(one which is common to most least squares programs\) is)A
90 179 :M
-.115(that it does not have an effective way to guess initial values for the parameters, except in)A
90 191 :M
-.093(strictly linear cases.)A
90 215 :M
f2_12 sf
2(2.3)A
144 215 :M
3.73 .373(Running GaussFit)J
90 239 :M
f0_12 sf
-.09(The present user interface to GaussFit is very primitive. After preparing the model,)A
90 251 :M
-.104(environment and data files, the execution of the program should be initiated. The program)A
90 263 :M
-.068(prompts for the model and environment file names, and then runs to completion. Progress)A
90 275 :M
-.103(reports are printed to the screen periodically, and the results will be found in the result file)A
90 287 :M
-.109(and in the modified data files.)A
90 311 :M
-.088(Users of UNIX may also type the names of the model and environment files directly onto)A
90 323 :M
-.084(the command line, in that order.)A
90 347 :M
-.104(Users of the Macintosh version may also type the names of the model and environment)A
90 359 :M
-.064(files, in that order, when the prompt, \322Enter Unix command line:\323 is printed.)A
90 383 :M
f2_12 sf
2(2.4)A
144 383 :M
3.21 .321(Robust Estimation)J
90 407 :M
f0_12 sf
-.096(GaussFit provides an experimental capability for robust estimation    It is based on a)A
90 419 :M
-.084(generalization of the methods pioneered by Huber[Hu81] and others, and reduces to them)A
90 431 :M
-.087(under the conditions he discussed. Robust estimation greatly improves the resistance of the)A
90 443 :M
-.084(estimator to \322outliers,\323 that is, bad observations which are not known )A
f4_12 sf
-.083(a priori)A
f0_12 sf
-.089( to be bad.)A
90 455 :M
-.131(Since this capability is at the present time experimental, no assurances can be made that)A
90 467 :M
-.083(reasonable results will be obtained in any particular instance. However, we have found that)A
90 479 :M
-.098(when it does converge \(and convergence is sometimes quite slow\) the algorithms)A
90 491 :M
-.127(implemented do indeed exhibit desirable resistance to outliers.)A
108 515 :M
f2_12 sf
1.75(2.4.1)A
144 515 :M
2.489 .249(Huber-type Estimators \(fair, huber and tukey\))J
108 539 :M
f0_12 sf
-.11(Huber-type estimators minimize a non-euclidean metric in the residuals. \(Indeed, the)A
108 551 :M
-.136(median-type estimators are a special case of them.\) Our method is intended to generalize)A
108 563 :M
-.122(the methods described in the literature to the case of more than one observation per)A
108 575 :M
-.097(equation of condition and to nonlinear equations. It is  experimental. We have chosen)A
108 587 :M
-.164(three particular metric functions)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Malmaison; page: 7 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
483 57 :M
(7)S
126 81 :M
f4_12 sf
-.11(fair)A
f0_12 sf
-.133(  \(Rey [Re83]\):)A
216 114 :M
f5_12 sf
.152 .015(r )J
f1_12 sf
.076(\()A
f4_12 sf
.132 .013(x )J
f0_12 sf
.133 .013(\) = )J
f4_12 sf
.101(c)A
f0_12 sf
0 -3 rm
.114(2)A
0 3 rm
f1_12 sf
0 8 rm
.057 .006( )J
0 -8 rm
267 122 :M
(\350)S
267 112 :M
(\346)S
354 122 :M
( )S
354 122 :M
(\370)S
354 112 :M
(\366)S
272 107 :M
f0_12 sf
(|)S
f4_12 sf
-.066(x)A
f0_12 sf
(|)S
274 120 :M
f4_12 sf
(c)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
272 110.24 -.24 .24 282.24 110 .24 272 110 @a
282 114 :M
f0_12 sf
.931(\312\320\312)A
f4_12 sf
1.087(ln)A
f1_12 sf
0 8 rm
.699 .07( )J
0 -8 rm
309 122 :M
(\350)S
309 112 :M
(\346)S
349 122 :M
( )S
349 122 :M
(\370)S
349 112 :M
(\366)S
314 114 :M
f0_12 sf
.992(1\312+\312)A
0 -7 rm
.507(|)A
0 7 rm
f4_12 sf
0 -7 rm
1.126(x)A
0 7 rm
f0_12 sf
0 -7 rm
(|)S
0 7 rm
341 120 :M
f4_12 sf
(c)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
339 110.24 -.24 .24 349.24 110 .24 339 110 @a
126 147 :M
-.096(huber)A
f0_12 sf
-.095( \(Rey [Re83]\))A
216 181 :M
f5_12 sf
.407 .041(r )J
f1_12 sf
.203(\()A
f4_12 sf
.353 .035(x )J
f0_12 sf
.356 .036(\) = )J
f1_9 sf
0 8 rm
.115 .011( )J
0 -8 rm
256 189 :M
(\356)S
256 181 :M
(\355)S
256 173 :M
1.117(\354)A
f4_12 sf
0 2 rm
1.338(x)A
0 -2 rm
f0_12 sf
0 -1 rm
1.508(2)A
0 1 rm
0 2 rm
.784(,\312if\312|)A
0 -2 rm
f4_12 sf
0 2 rm
1.338(x)A
0 -2 rm
f0_12 sf
0 2 rm
1.172(|\312)A
cF f1_12 sf
1.172(\243)A
sf
1.172(\312c\312)A
0 -2 rm
260 187 :M
.633(c\(2|)A
f4_12 sf
.761(x)A
f0_12 sf
.492(|-c\),\312if\312|)A
f4_12 sf
.761(x)A
f0_12 sf
.726(|\312)A
cF f1_12 sf
.726(\263)A
sf
.726(\312c)A
126 213 :M
f4_12 sf
.056(tukey)A
f0_12 sf
.234 .023(, \(Rey [Re83]\))J
216 268 :M
f5_12 sf
.339 .034(r )J
f1_12 sf
.17(\()A
f4_12 sf
.295 .029(x )J
f0_12 sf
.297 .03(\) = )J
f1_18 sf
0 26 rm
.191 .019( )J
0 -26 rm
256 294 :M
(\356)S
256 285 :M
(\357)S
256 270 :M
(\355)S
256 255 :M
(\357)S
256 247 :M
.082(\354)A
f1_12 sf
0 13 rm
( )S
0 -13 rm
265 260 :M
(\350)S
265 250 :M
(\346)S
281 260 :M
( )S
281 260 :M
(\370)S
281 250 :M
(\366)S
270 246 :M
f0_12 sf
-.153(c)A
0 -3 rm
(2)S
0 3 rm
272 259 :M
(3)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
270 249.24 -.24 .24 281.24 249 .24 270 249 @a
286 266 :M
f1_12 sf
( )S
286 266 :M
(\350)S
286 256 :M
(\347)S
286 244 :M
(\346)S
349 266 :M
( )S
349 266 :M
(\370)S
349 256 :M
(\367)S
349 244 :M
(\366)S
291 253 :M
f0_12 sf
(1-)S
f1_12 sf
0 10 rm
( )S
0 -10 rm
301 263 :M
(\353)S
301 254 :M
(\352)S
301 245 :M
(\351)S
338 263 :M
( )S
338 263 :M
(\373)S
338 254 :M
(\372)S
338 245 :M
(\371)S
306 253 :M
f0_12 sf
(1-)S
f1_12 sf
0 8 rm
( )S
0 -8 rm
316 261 :M
(\350)S
316 251 :M
(\346)S
327 261 :M
( )S
327 261 :M
(\370)S
327 251 :M
(\366)S
321 246 :M
f4_12 sf
(x)S
321 259 :M
f0_12 sf
(c)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
321 249.24 -.24 .24 327.24 249 .24 321 249 @a
332 241 :M
(2)S
343 238 :M
(3)S
354 253 :M
1.03(,\312if\312|)A
f4_12 sf
1.758(x)A
f0_12 sf
1.539(|\312)A
cF f1_12 sf
1.539(\243)A
sf
1.539(\312c\312)A
265 296 :M
f1_12 sf
( )S
265 296 :M
(\350)S
265 286 :M
(\346)S
281 296 :M
( )S
281 296 :M
(\370)S
281 286 :M
(\366)S
270 282 :M
f0_12 sf
-.153(c)A
0 -3 rm
(2)S
0 3 rm
272 295 :M
(3)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
270 285.24 -.24 .24 281.24 285 .24 270 285 @a
286 289 :M
1.025(\312,\312if\312|)A
f4_12 sf
1.758(x)A
f0_12 sf
1.676(|\312)A
cF f1_12 sf
1.676(\263)A
sf
1.676(\312c)A
126 321 :M
-.121(These functions depend \(as do all robust metrics\) on a parameter )A
f4_12 sf
-.133(c)A
f0_12 sf
-.12( that estimates the)A
126 333 :M
-.089(scale at which \322large\323 residuals become separated from \322small\323 ones. For residuals )A
f4_12 sf
(x)S
126 345 :M
f0_12 sf
-.142(larger than )A
f4_12 sf
-.166(c)A
f0_12 sf
-.137(, the metric )A
f4_12 sf
-.121(fair  )A
f0_12 sf
-.158(and )A
f4_12 sf
-.174(huber)A
f0_12 sf
-.153(  approximate the absolute value metric of)A
126 357 :M
f4_12 sf
-.07(minsum,)A
f0_12 sf
-.056( and the )A
f4_12 sf
-.055(tukey  )A
f0_12 sf
-.058(metric is constant, whereas for smaller residuals the metric)A
126 369 :M
-.078(approximates the standard euclidean metric of least squares. In this way, the robust)A
126 381 :M
-.109(metric allows those observations that have smaller residuals to dominate the result. The)A
126 393 :M
-.141(function )A
f4_12 sf
-.128(fair)A
f0_12 sf
-.135( has particularly nice properties. It is not critically dependent on the exact)A
126 405 :M
-.041(value of )A
f4_12 sf
(c)S
f0_12 sf
-.044( chosen. Rey discusses this subject, and Holland and Welsch [Ho77] have)A
126 417 :M
-.079(tested )A
f4_12 sf
-.077(fair)A
f0_12 sf
-.085( as well as various other robust metrics.)A
126 442 :M
.485 .049(To use this method, set the parameter)J
f8_12 sf
.171 .017( )J
f9_12 sf
.708 .071(fair, huber )J
f0_12 sf
.131(or)A
f9_12 sf
.708 .071( tukey)J
f8_12 sf
.171 .017( )J
f0_12 sf
.472 .047(in the)J
126 454 :M
-.034(environment file is set to a number between 0.8 and 0.95; we suggest that 0.9 or 0.95)A
126 466 :M
-.082(should be used at first. This number is the )A
f4_12 sf
-.083(asymptotic relative efficiency)A
f0_12 sf
-.099( \(ARE\) to be)A
126 478 :M
-.101(used by the algorithm. The ARE is a measure of the loss of efficiency \(increase in)A
126 490 :M
-.081(variance\) that is expected on )A
f4_12 sf
-.093(normally)A
f0_12 sf
-.082( distributed data. For example, if the ARE is 0.9,)A
126 502 :M
-.131(then the variance of the result will be about 10% higher if the data are normally)A
126 514 :M
-.077(distributed than it would have been had least squares been used. On the other hand, if)A
126 526 :M
-.104(the data are )A
f4_12 sf
-.118(not)A
f0_12 sf
-.107( normally distributed, and especially if there are outliers, the robust)A
126 538 :M
-.135(method can be expected to retain its accuracy whereas the least squares estimator)A
126 550 :M
-.131(rapidly becomes inefficient as the amount of contamination in the data increases. Even)A
126 562 :M
-.14(small departures from strict normality can completely overwhelm the method of least)A
126 574 :M
.146(squares.)A
126 598 :M
-.128(GaussFit automatically estimates the value of )A
f4_12 sf
-.142(c)A
f0_12 sf
-.125( from the actual distribution of residuals)A
126 610 :M
-.121(in the data. The value it estimates will be found in the environment file, named)A
126 623 :M
f9_12 sf
.925(scale)A
f0_12 sf
(.)S
126 648 :M
.365 .036(Note that if)J
f8_12 sf
.14 .014( )J
f9_12 sf
.513 .051(fair )J
f0_12 sf
.107(or)A
f9_12 sf
.399 .04( huber )J
f0_12 sf
.338 .034(~ 0.8, they approach the )J
f4_12 sf
.133(minsum)A
f0_12 sf
.343 .034(  method.)J
126 672 :M
f2_12 sf
1.75(2.4.2)A
162 672 :M
3.079 .308(Median-type Estimators \(minsum\))J
126 696 :M
f0_12 sf
-.115(Estimators of this type minimize the \(weighted\) sum of the absolute values of the)A
126 708 :M
-.126(residuals. They are called median-type estimators because the median is the simplest)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Malmaison; page: 8 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(8)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
-.094(example of such an estimator. Median-type estimators are very robust\321up to 50% of)A
108 93 :M
-.13(the data points can be contaminating outliers\321but they are not very efficient. The)A
108 105 :M
-.118(variance of the median is 30% larger than that of the mean, when each is applied to the)A
108 117 :M
-.109(same normally distributed data.)A
108 141 :M
-.113(In GaussFit, the median estimators are implemented with the algorithm of Barrodale)A
108 153 :M
-.093(and Roberts[Ba78]. The modification of the algorithm that we have used probably is)A
108 165 :M
-.085(not valid when more than one observation per equation of condition is in error.  Since)A
108 177 :M
-.113(this is the most experimental and least well-tested of the algorithms, no guarantees can)A
108 189 :M
-.052(be given as to the results of using it.)A
108 214 :M
-.007(To use it, set the value of)A
f8_12 sf
( )S
f9_12 sf
-.012(minsum)A
f8_12 sf
( )S
f0_12 sf
-.008(in the environment file to 1.)A
90 238 :M
f2_12 sf
2(2.5)A
144 238 :M
3.101 .31(Orthogonal Regression M-Estimates \(orm\))J
90 263 :M
f0_12 sf
-.039(By default )A
f9_12 sf
-.059(orm )A
f0_12 sf
-.04(is set equal to one, and when there is more than one observation per)A
90 275 :M
-.092(equation of condition, then the metric for the goodness-of-fit is measured orthogonally to)A
90 287 :M
-.155(the fitted function\(in suitable coordinates relative to the covariance matrix of the)A
90 299 :M
-.091(observations\).  M-estimates are in most cases, the most relevant for parameter estimation.)A
90 311 :M
-.101(This method has been recommended by Zamar [Za85], [Za87] for the robust estimation)A
90 323 :M
-.063(case, and we concur with his recommendation.   To turn off the orthogonal resgression M-)A
90 336 :M
.146 .015(estimate method, set )J
f9_12 sf
.122 .012(orm = -1 )J
f0_12 sf
.152 .015(in the environment file)J
f9_12 sf
(.)S
90 360 :M
f2_12 sf
2(2.6)A
144 360 :M
2.203 .22(Parameter Estimation)J
108 384 :M
1.75(2.6.1)A
144 384 :M
2.229 .223(Marquardt-Levenburg  Estimation \(lambda\))J
108 408 :M
f0_12 sf
-.127(The Marquardt-Levenberg [Pr88] parameter estimation technique involves continuous)A
108 420 :M
-.105(variation between the steepest descent method and the inverse Hessian method.  The)A
108 432 :M
-.092(steepest descent method is used far from the minimum, switching continuously to the)A
108 444 :M
-.078(inverse Hessian as the minimum is approached.  It is invoked by setting  both the)A
108 457 :M
.884 .088(keyword )J
f9_12 sf
.255(lambda)A
f0_12 sf
.33 .033( and )J
f9_12 sf
.255(factor)A
f0_12 sf
.6 .06( to nozero values. The keyword )J
f9_12 sf
.255(lambda)A
f0_12 sf
.324 .032( is)J
108 470 :M
.353 .035(typically set to 0.0001 and the keyword )J
f9_12 sf
.145(factor)A
f0_12 sf
.167 .017( is set to 0.1.   \()J
f9_12 sf
.145(lambda)A
f0_12 sf
.222 .022( is the)J
108 486 :M
.05 .005(same as the parameter )J
f1_12 sf
(l)S
f0_12 sf
.034 .003( in  \24414.4 of [Pr88]; )J
f9_12 sf
.021(factor)A
f0_12 sf
.038 .004( is the factor by which )J
f1_12 sf
(l)S
f0_12 sf
( is)S
108 503 :M
-.083(descreased when the new )A
f1_12 sf
-.077(c\215)A
f1_10 sf
0 -3 rm
-.08(2)A
0 3 rm
f0_12 sf
-.072( is less than the old.\))A
90 528 :M
f2_12 sf
2(2.7)A
144 528 :M
2.044 .204(Correlation  Matrix Estimation)J
108 553 :M
f0_12 sf
-.057(By setting the value of)A
f8_12 sf
-.087( )A
f9_12 sf
-.087(prvar)A
f8_12 sf
-.087( )A
f0_12 sf
-.057(in the environment file to 1,  the user can obtain the)A
108 565 :M
-.115(correlation matrix and standard deviations\(sigmas\) of the parameters.  The correlation)A
108 577 :M
-.093(matrix is found at the end of the  result file.)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Malmaison; page: 9 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
483 57 :M
(9)S
90 93 :M
f2_12 sf
3(3.)A
126 93 :M
2.141 .214(Data File Formats)J
90 117 :M
f0_12 sf
-.077(GaussFit assumes that the data are supplied to it in one of two different kinds of files: FITS)A
90 129 :M
-.11(header files and Table formatted files. FITS header files are a standard file type for the)A
90 141 :M
-.089(interchange of astronomical information. Only a very simple kind of FITS header file is used.)A
90 153 :M
-.166(The Table formatted files are modelled after the MIDAS tables that were until recently used at)A
90 165 :M
-.115(the Space Telescope Science Institute, in their Science Data Analysis System \(SDAS\). This)A
90 177 :M
-.097(system is undergoing modification and the format of these tables may change somewhat.)A
90 189 :M
-.073(However, it will probably end up being very similar to what it is now, and we do not anticipate)A
90 201 :M
-.117(major changes in the Table formatted files as they are described in this document.)A
108 225 :M
f2_12 sf
2(3.1)A
162 225 :M
2.876 .288(FITS Header Files)J
108 249 :M
f0_12 sf
-.075(Every GaussFit reduction has an )A
f4_12 sf
-.082(environment)A
f0_12 sf
-.072(  file, which supplies the system with certain)A
108 261 :M
-.08(basic information about the reduction \(e.g., its expected size, convergence criteria, and type)A
108 273 :M
-.092(of reduction desired\). This file is formatted as a FITS \(Flexible Image Transportation)A
108 285 :M
-.063(Standard\) header file \(see Wells, Griesen and Harten [We80]\).)A
108 309 :M
-.109(The format of a FITS header file is as follows: Each line contains in the first 8 characters a)A
108 322 :M
f4_12 sf
-.047(keyword)A
f0_12 sf
-.04(. Following the keyword is an)A
f8_12 sf
-.058( = )A
f0_12 sf
-.038(character, and following that is a value. In the)A
108 334 :M
-.114(current implementation, the value is either a number \(which can be expressed in any of the)A
108 346 :M
-.09(usual formats provided it does not extend beyond column 30\) or a character string of not)A
108 359 :M
-.068(more than 20 characters, enclosed in single quote marks \()A
f8_12 sf
-.101(')A
f0_12 sf
-.098(\).)A
108 384 :M
-.076(The last line of the FITS header file contains only the keyword )A
f9_12 sf
-.114(END)A
f0_12 sf
-.07( in the first three)A
108 396 :M
.048(columns.)A
108 420 :M
-.097(When a keyword appears more than one time in an environment file \(usually by error\), the)A
108 432 :M
-.076(first appearing value will be used.)A
108 456 :M
-.097(Figure 2 shows a sample FITS header file containing several data values:)A
-1 -1 196 472 1 1 195 471 @b
-1 -1 196 472 1 1 195 471 @b
196 472 -1 1 434 471 1 196 471 @a
-1 -1 435 472 1 1 434 471 @b
-1 -1 435 472 1 1 434 471 @b
-1 -1 196 484 1 1 195 472 @b
-1 -1 435 484 1 1 434 472 @b
198 494 :M
f9_12 sf
1.002(data1)A
288 494 :M
f8_12 sf
(=)S
306 494 :M
-.22('MoreData')A
-1 -1 196 496 1 1 195 484 @b
-1 -1 435 496 1 1 434 484 @b
198 506 :M
f9_12 sf
1.002(iters)A
288 506 :M
f8_12 sf
(=)S
306 506 :M
(5)S
-1 -1 196 508 1 1 195 496 @b
-1 -1 435 508 1 1 434 496 @b
198 518 :M
f9_12 sf
1.069(fair)A
288 518 :M
f8_12 sf
(=)S
306 518 :M
-.297(0.9)A
-1 -1 196 520 1 1 195 508 @b
-1 -1 435 520 1 1 434 508 @b
198 530 :M
f9_12 sf
1.203(END)A
-1 -1 196 532 1 1 195 520 @b
-1 -1 435 532 1 1 434 520 @b
-1 -1 196 545 1 1 195 544 @b
-1 -1 196 545 1 1 195 544 @b
196 545 -1 1 434 544 1 196 544 @a
-1 -1 435 545 1 1 434 544 @b
-1 -1 435 545 1 1 434 544 @b
-1 -1 196 544 1 1 195 532 @b
-1 -1 435 544 1 1 434 532 @b
225 566 :M
f0_12 sf
-.082(Figure 2: Sample FITS Header File)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Malmaison; page: 10 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(10)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
f2_12 sf
1.75(3.1.1)A
144 81 :M
3.075 .307(Environment File)J
108 105 :M
f0_12 sf
-.085(The )A
f4_12 sf
-.08(environment  )A
f0_12 sf
-.075(file contains information required for the reduction.  Figure 3 shows)A
108 117 :M
-.165(a sample environment file)A
108 141 :M
-.075(A description of the meaning of each keyword follows.)A
-1 -1 178 157 1 1 177 156 @b
-1 -1 178 157 1 1 177 156 @b
178 157 -1 1 416 156 1 178 156 @a
-1 -1 417 157 1 1 416 156 @b
-1 -1 417 157 1 1 416 156 @b
-1 -1 178 169 1 1 177 157 @b
-1 -1 417 169 1 1 416 157 @b
180 179 :M
f9_12 sf
.935(results)A
270 179 :M
f8_12 sf
(=)S
288 179 :M
-.218('MyResults')A
-1 -1 178 181 1 1 177 169 @b
-1 -1 417 181 1 1 416 169 @b
180 191 :M
f9_12 sf
1.002(data3)A
270 191 :M
f8_12 sf
(=)S
288 191 :M
-.227('MyData')A
-1 -1 178 193 1 1 177 181 @b
-1 -1 417 193 1 1 416 181 @b
180 203 :M
f9_12 sf
.962(param1)A
270 203 :M
f8_12 sf
(=)S
288 203 :M
-.215('MyParamFile')A
-1 -1 178 205 1 1 177 193 @b
-1 -1 417 205 1 1 416 193 @b
180 215 :M
f9_12 sf
1.002(data1)A
270 215 :M
f8_12 sf
(=)S
288 215 :M
-.22('MoreData')A
-1 -1 178 217 1 1 177 205 @b
-1 -1 417 217 1 1 416 205 @b
180 227 :M
f9_12 sf
1.002(iters)A
270 227 :M
f8_12 sf
(=)S
288 227 :M
(5)S
-1 -1 178 229 1 1 177 217 @b
-1 -1 417 229 1 1 416 217 @b
180 239 :M
f9_12 sf
1.203(tol)A
270 239 :M
f8_12 sf
(=)S
288 239 :M
-.238(0.0001)A
-1 -1 178 241 1 1 177 229 @b
-1 -1 417 241 1 1 416 229 @b
180 251 :M
f9_12 sf
.962(triang)A
270 251 :M
f8_12 sf
(=)S
288 251 :M
(1)S
-1 -1 178 253 1 1 177 241 @b
-1 -1 417 253 1 1 416 241 @b
180 263 :M
f9_12 sf
1.069(fair)A
270 263 :M
f8_12 sf
(=)S
288 263 :M
-.297(0.9)A
-1 -1 178 265 1 1 177 253 @b
-1 -1 417 265 1 1 416 253 @b
180 275 :M
f9_12 sf
1.203(END)A
-1 -1 178 277 1 1 177 265 @b
-1 -1 417 277 1 1 416 265 @b
-1 -1 178 290 1 1 177 289 @b
-1 -1 178 290 1 1 177 289 @b
178 290 -1 1 416 289 1 178 289 @a
-1 -1 417 290 1 1 416 289 @b
-1 -1 417 290 1 1 416 289 @b
-1 -1 178 289 1 1 177 277 @b
-1 -1 417 289 1 1 416 277 @b
207 311 :M
f0_12 sf
-.124(Figure 3: Sample Environment File)A
108 335 :M
.409 .041(See also \2446.2.)J
126 359 :M
f2_12 sf
1.667(3.1.1.1)A
180 359 :M
2.151 .215(Iteration and Tolerance)J
126 383 :M
f0_12 sf
-.138(The maximum number of iterations allowed before the program terminates)A
126 396 :M
-.039(automatically is specified by the keyword)A
f8_12 sf
-.057( )A
f9_12 sf
-.057(iters)A
f0_12 sf
-.037(. The )A
f4_12 sf
-.036(relative)A
f0_12 sf
-.037( tolerance \(e.g.,)A
126 408 :M
-.132(maximum change in computed values from one iteration to the next\) is specified by)A
126 421 :M
-.075(the)A
f8_12 sf
-.111( )A
f9_12 sf
-.111(tol)A
f8_12 sf
-.111( )A
f0_12 sf
-.075(keyword. The actual application of this parameter is complex; roughly, it)A
126 433 :M
-.162(corresponds the the maximum )A
f4_12 sf
-.157(proportional)A
f0_12 sf
-.151( change in any parameter that will be)A
126 445 :M
-.091(allowed from iteration to iteration. However, the changes in the residuals are also)A
126 457 :M
-.133(taken into account in making this determination.)A
126 481 :M
f2_12 sf
1.667(3.1.1.2)A
180 481 :M
2.907 .291(Triangularization Flag)J
126 505 :M
f0_12 sf
-.132(Triangularization is used to reduce compaction of the matrix of condition equations)A
126 517 :M
-.102(during their formation. This allows the size of the matrix of the condition equations)A
126 529 :M
-.123(to be kept smaller. More importantly, it can considerably reduce the total amount of)A
126 541 :M
-.082(processing time required for this, the most time-consuming part of the reduction.)A
126 554 :M
.317 .032(There is a built-in function,)J
f8_12 sf
.109 .011( )J
f9_12 sf
.12(triangularize)A
f8_12 sf
.12(\(\))A
f0_12 sf
.252 .025(, that can be used from)J
126 566 :M
-.091(within the user\325s program to initiate triangularization. However, it is usually more)A
126 578 :M
-.108(convenient to set the triangularization flag, which is controlled by the keyword)A
126 591 :M
f9_12 sf
-.062(triang)A
f0_12 sf
-.04(. When this is set equal to 1, the program will attempt to triangularize the)A
126 603 :M
-.133(matrix after each data file has been read in.)A
126 627 :M
f4_12 sf
-.07(Triangularization does not work when the minsum)A
f0_12 sf
( )S
f4_12 sf
-.069(method is chosen to solve the)A
126 639 :M
-.11(estimation problem.)A
126 663 :M
f2_12 sf
1.667(3.1.1.3)A
180 663 :M
3.78 .378(Print Switches)J
126 687 :M
f0_12 sf
-.075(GaussFit provides switches to control the printing of certain results. They have the)A
126 699 :M
-.061(value 1 when enabled and 0 when disabled, and default to 0.)A
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Malmaison; page: 11 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(11)S
144 82 :M
-.098(The)A
f8_12 sf
-.113( )A
f9_12 sf
-.113(prmat)A
f8_12 sf
-.113( )A
f0_12 sf
-.076(keyword specifies that certain intermediate matrices will be printed.)A
144 95 :M
.027 .003(Usually this should be set off \(value = 0\). The)J
f8_12 sf
( )S
f9_12 sf
.012(prvar)A
f8_12 sf
( )S
f0_12 sf
.043 .004(keyword controls the)J
144 107 :M
-.087(printing of the variances. Again this should normally be set to 0 unless the program)A
144 119 :M
-.125(has converged and these data are required, since the calculation of the covariance)A
144 131 :M
-.091(matrix that this keyword will invoke is fairly lengthy.)A
144 155 :M
f2_12 sf
1.667(3.1.1.4)A
198 155 :M
2.203 .22(Parameter Estimation)J
144 179 :M
f0_12 sf
-.148(The Marquardt -Levenburg method of nonlinear parameter estimation is available by)A
144 192 :M
.258 .026(setting  both the keyword )J
f9_12 sf
.113(lambda)A
f0_12 sf
.146 .015( and )J
f9_12 sf
.113(factor)A
f0_12 sf
.3 .03( to nozero values. The keyword)J
144 205 :M
f9_12 sf
.157(lambda)A
f0_12 sf
.326 .033( is set to typically to 0.0001 and the keyword )J
f9_12 sf
.157(factor)A
f0_12 sf
.246 .025( is set to 0.1.)J
144 229 :M
f2_12 sf
1.667(3.1.1.5)A
198 229 :M
2.943 .294(Reduction Method)J
144 254 :M
f0_12 sf
.565 .057(For standard least squares reduction these \()J
f9_12 sf
.204(huber)A
f0_12 sf
.142 .014(, )J
f9_12 sf
.204(tukey)A
f0_12 sf
.142 .014(, )J
f9_12 sf
.204(fair)A
f0_12 sf
.444 .044( and)J
144 267 :M
f9_12 sf
-.033(minsum)A
f0_12 sf
-.022(\) are off and do not need to be included.  A robust estimation method is)A
144 280 :M
.569 .057(invoked by setting the keyword)J
f8_12 sf
.172 .017( )J
f9_12 sf
.632 .063(fair )J
f0_12 sf
.132(or)A
f9_12 sf
.491 .049( tukey )J
f0_12 sf
.132(or)A
f9_12 sf
.71 .071( huber)J
f8_12 sf
.172 .017( )J
f0_12 sf
.475 .048(equal to the)J
144 292 :M
-.102(desired asymptotic relative efficiency \(ARE\). This is a number between 0.8 and)A
144 304 :M
.333(0.95)A
144 329 :M
(The keyword)S
f9_12 sf
( orm, )S
f0_12 sf
(which measures the metric for the goodness-of-fit)S
144 341 :M
-.072(orthogonally to the fitted function, is set equal to 1.0 by default. This method is)A
144 354 :M
-.029(recommended for the robust estimation case, and should be used whenever  )A
f9_12 sf
-.056(fair)A
144 367 :M
f0_12 sf
.269(or)A
f9_12 sf
1.005 .1( tukey )J
f0_12 sf
cF f1_12 sf
.046(\271)A
sf
.461 .046( 0.  If)J
f9_12 sf
1.005 .1( huber )J
f0_12 sf
cF f1_12 sf
.061(\271)A
sf
.609 .061( 0, then )J
f9_12 sf
1.107 .111(orm )J
f4_12 sf
.594 .059(must  )J
f0_12 sf
.858 .086(be used. To disable )J
f9_12 sf
.388(orm)A
f0_12 sf
(,)S
144 379 :M
-.11(set it to -1 in the environment file.)A
144 404 :M
-.04(The)A
f8_12 sf
( )S
f9_12 sf
-.046(minsum)A
f8_12 sf
( )S
f0_12 sf
-.033(keyword controls  another reduction method, that of minimizing)A
144 416 :M
-.055(the sum of the absolute values of the residuals. This is a very robust method,)A
144 429 :M
-.026(although it is less efficient than )A
f4_12 sf
-.024(fair.)A
f0_12 sf
-.027( To use it, set the keyword )A
f9_12 sf
-.042(minsum)A
f8_12 sf
( )S
f0_12 sf
-.032(equal to)A
144 442 :M
.227 .023(1.  It is an error to have  more than one of the four keywords )J
f9_12 sf
.124(fair)A
f0_12 sf
.086 .009(, )J
f9_12 sf
.124(tukey)A
f0_12 sf
(,)S
144 455 :M
f9_12 sf
.737(huber)A
f0_12 sf
.512 .051(, )J
f9_12 sf
.737(minsum)A
f0_12 sf
.719 .072(  )J
cF f1_12 sf
.072(\271)A
sf
.719 .072( 0.)J
144 503 :M
-.087(Two different methods are provided for iteration, Newton\325s method and the method)A
144 515 :M
-.097(of Iteratively Reweighted Least Squares \(IRLS\). These are controlled by the)A
144 528 :M
f9_12 sf
.015(irls)A
f8_12 sf
( )S
f0_12 sf
.037 .004(keyword. If this keyword is omitted or set equal to 0, Newton\325s method)J
144 540 :M
-.048(will be employed. If the keyword is set to 1, the IRLS method will be used. \(These)A
144 552 :M
-.113(two methods are identical in the case of standard least squares.\) One caution: The)A
144 564 :M
-.149(variances and the covariance matrix cannot be calculated if the IRLS method is)A
144 576 :M
-.072(employed. If you have used the IRLS method to solve your problem \(which may be)A
144 588 :M
-.084(needed since sometimes Newton\325s method diverges when begun too far from the)A
144 600 :M
-.108(final solution\) then a final iteration using Newton\325s method will be required to)A
144 612 :M
-.156(calculate the variances.)A
144 636 :M
-.095(Two different styles of iteration through the equations of condition are provided. A)A
144 648 :M
-.102(single iteration through the forming of the equations of condition and solving of the)A
144 660 :M
-.099(matrix,  or a double iteration through the equations of condition before the solving)A
144 673 :M
.023 .002(of the matrix.  These are controlled by the)J
f8_12 sf
( )S
f9_12 sf
.01(double)A
f8_12 sf
( )S
f0_12 sf
.028 .003(keyword. If this keyword is)J
144 685 :M
-.093(omitted or set equal to 0, single iterations of the condition equations will occur. If)A
144 697 :M
-.068(the keyword is set to 1, the double iteration method will be used.  It is)A
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Malmaison; page: 12 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(12)S
388 57 :M
-.03(GaussFit User\325s Manual)A
126 81 :M
-.13(recommended that double iterations be used if the Marquardt-Levenburg method is)A
126 93 :M
-.04(employed.)A
126 117 :M
-.071(GaussFit provides switches to control other aspects of the reduction algorithm.)A
126 129 :M
-.077(They have the value 1 when enabled and 0 when disabled, and default to 0.)A
207 178 :M
f2_12 sf
.378(iteration)A
279 178 :M
.34(orm)A
319 178 :M
.335(triang)A
369 178 :M
.521(covariance)A
441 178 :M
.13(parameter)A
-1 -1 124 169 1 1 123 168 @b
-1 -1 124 169 1 1 123 168 @b
124 169 -1 1 524 168 1 124 168 @a
-1 -1 525 169 1 1 524 168 @b
-1 -1 525 169 1 1 524 168 @b
-1 -1 124 181 1 1 123 169 @b
-1 -1 525 181 1 1 524 169 @b
-1 -1 199 181 1 1 198 168 @b
-1 -1 271 181 1 1 270 168 @b
-1 -1 311 181 1 1 310 168 @b
-1 -1 361 181 1 1 360 168 @b
-1 -1 433 181 1 1 432 168 @b
207 190 :M
.469(method)A
369 190 :M
.271(matrix)A
441 190 :M
.521(estimation)A
-1 -1 124 193 1 1 123 181 @b
-1 -1 525 193 1 1 524 181 @b
-1 -1 199 193 1 1 198 180 @b
-1 -1 271 193 1 1 270 180 @b
-1 -1 311 193 1 1 310 180 @b
-1 -1 361 193 1 1 360 180 @b
-1 -1 433 193 1 1 432 180 @b
135 215 :M
.449(fair)A
207 215 :M
f0_12 sf
-.109(irls)A
279 215 :M
(yes)S
319 215 :M
(yes)S
369 215 :M
(no)S
441 215 :M
(yes)S
-1 -1 124 194 1 1 123 193 @b
124 194 -1 1 524 193 1 124 193 @a
-1 -1 525 194 1 1 524 193 @b
-1 -1 124 218 1 1 123 194 @b
-1 -1 525 218 1 1 524 194 @b
-1 -1 199 218 1 1 198 205 @b
-1 -1 271 218 1 1 270 205 @b
-1 -1 311 218 1 1 310 205 @b
-1 -1 361 218 1 1 360 205 @b
-1 -1 433 218 1 1 432 205 @b
207 227 :M
-.065(newton)A
279 227 :M
(yes)S
319 227 :M
(yes)S
369 227 :M
(yes)S
441 227 :M
(yes)S
-1 -1 124 230 1 1 123 218 @b
-1 -1 525 230 1 1 524 218 @b
-1 -1 199 230 1 1 198 217 @b
-1 -1 271 230 1 1 270 217 @b
-1 -1 311 230 1 1 310 217 @b
-1 -1 361 230 1 1 360 217 @b
-1 -1 433 230 1 1 432 217 @b
135 252 :M
f2_12 sf
.334(huber)A
207 252 :M
f0_12 sf
-.109(irls)A
279 252 :M
(yes)S
319 252 :M
(yes)S
369 252 :M
(no)S
441 252 :M
(yes)S
-1 -1 124 231 1 1 123 230 @b
124 231 -1 1 524 230 1 124 230 @a
-1 -1 525 231 1 1 524 230 @b
-1 -1 124 255 1 1 123 231 @b
-1 -1 525 255 1 1 524 231 @b
-1 -1 199 255 1 1 198 242 @b
-1 -1 271 255 1 1 270 242 @b
-1 -1 311 255 1 1 310 242 @b
-1 -1 361 255 1 1 360 242 @b
-1 -1 433 255 1 1 432 242 @b
207 264 :M
-.065(newton)A
279 264 :M
(yes)S
319 264 :M
(yes)S
369 264 :M
(yes)S
441 264 :M
(yes)S
-1 -1 124 267 1 1 123 255 @b
-1 -1 525 267 1 1 524 255 @b
-1 -1 199 267 1 1 198 254 @b
-1 -1 271 267 1 1 270 254 @b
-1 -1 311 267 1 1 310 254 @b
-1 -1 361 267 1 1 360 254 @b
-1 -1 433 267 1 1 432 254 @b
135 289 :M
f2_12 sf
.585(tukey)A
207 289 :M
f0_12 sf
-.109(irls)A
279 289 :M
(yes)S
319 289 :M
(yes)S
369 289 :M
(no)S
441 289 :M
(no)S
-1 -1 124 268 1 1 123 267 @b
124 268 -1 1 524 267 1 124 267 @a
-1 -1 525 268 1 1 524 267 @b
-1 -1 124 292 1 1 123 268 @b
-1 -1 525 292 1 1 524 268 @b
-1 -1 199 292 1 1 198 279 @b
-1 -1 271 292 1 1 270 279 @b
-1 -1 311 292 1 1 310 279 @b
-1 -1 361 292 1 1 360 279 @b
-1 -1 433 292 1 1 432 279 @b
135 314 :M
f2_12 sf
.534(minsum)A
319 314 :M
f0_12 sf
(no)S
369 314 :M
(no)S
441 314 :M
(no)S
-1 -1 124 293 1 1 123 292 @b
124 293 -1 1 524 292 1 124 292 @a
-1 -1 525 293 1 1 524 292 @b
-1 -1 124 317 1 1 123 293 @b
-1 -1 525 317 1 1 524 293 @b
-1 -1 199 317 1 1 198 304 @b
-1 -1 271 317 1 1 270 304 @b
-1 -1 311 317 1 1 310 304 @b
-1 -1 361 317 1 1 360 304 @b
-1 -1 433 317 1 1 432 304 @b
135 339 :M
f2_12 sf
.286(standard)A
319 339 :M
f0_12 sf
(yes)S
369 339 :M
(yes)S
441 339 :M
(yes)S
-1 -1 124 318 1 1 123 317 @b
124 318 -1 1 524 317 1 124 317 @a
-1 -1 525 318 1 1 524 317 @b
-1 -1 124 342 1 1 123 318 @b
-1 -1 525 342 1 1 524 318 @b
-1 -1 199 342 1 1 198 329 @b
-1 -1 271 342 1 1 270 329 @b
-1 -1 311 342 1 1 310 329 @b
-1 -1 361 342 1 1 360 329 @b
-1 -1 433 342 1 1 432 329 @b
-1 -1 124 355 1 1 123 354 @b
-1 -1 124 355 1 1 123 354 @b
124 355 -1 1 524 354 1 124 354 @a
-1 -1 525 355 1 1 524 354 @b
-1 -1 525 355 1 1 524 354 @b
-1 -1 124 354 1 1 123 342 @b
-1 -1 525 354 1 1 524 342 @b
-1 -1 199 355 1 1 198 341 @b
-1 -1 271 355 1 1 270 341 @b
-1 -1 311 355 1 1 310 341 @b
-1 -1 361 355 1 1 360 341 @b
-1 -1 433 355 1 1 432 341 @b
200 370 :M
-.178(Table 1:  Reduction method compatibility)A
126 418 :M
f2_12 sf
1.667(3.1.1.6)A
180 418 :M
3.698 .37(File Names)J
126 442 :M
f0_12 sf
-.104(The user will have to supply the names of input and output files in the environment)A
126 455 :M
-.02(file. There can up 10 parameter files, specified by the keyword)A
f8_12 sf
( )S
f9_12 sf
-.03(params)A
f8_12 sf
-.03(  )A
f0_12 sf
-.023(or the)A
126 468 :M
.88 .088(keywords )J
f9_12 sf
.242(param1)A
f8_12 sf
.242(,)A
f9_12 sf
.242(param2)A
f8_12 sf
.242(,...)A
f9_12 sf
.242(param10)A
f8_12 sf
.559 .056(. The )J
f0_12 sf
.897 .09(keyword provides the)J
126 481 :M
-.033(name of the parameter file. The)A
f8_12 sf
( )S
f9_12 sf
-.049(results)A
f8_12 sf
( )S
f0_12 sf
-.035(keyword gives the name of the file)A
126 493 :M
-.092(which will receive the results. Finally there can be up to 99 data files, specified by)A
126 506 :M
.976 .098(the keywords)J
f8_12 sf
.218 .022( )J
f9_12 sf
.24(data1)A
f0_12 sf
.167 .017(, )J
f9_12 sf
.24(data2)A
f0_12 sf
.501 .05(, \311,)J
f9_12 sf
.24(data99)A
f0_12 sf
.464 .046(. The data files do not have to be)J
126 518 :M
-.092(specified in any particular order, and any of them may be omitted. For example, the)A
126 530 :M
-.11(environment file of Figure 3 declares a parameter file and two data files, as well as a)A
126 542 :M
.163 .016(result file..)J
126 566 :M
f2_12 sf
1.667(3.1.1.7)A
180 566 :M
2.056 .206(Other Environment File Parameters)J
126 590 :M
f0_12 sf
-.086(After running GaussFit, the environment file will be found to contain other data.)A
126 602 :M
-.061(Some of these are there for debugging purposes and should be ignored. Others are)A
126 615 :M
-.06(relevant to the solution. The parameter)A
f8_12 sf
-.091( )A
f9_12 sf
-.091(sigma)A
f8_12 sf
-.091( )A
f0_12 sf
-.06(is the variance of unit weight of)A
126 628 :M
-.05(the solution. The parameter)A
f8_12 sf
-.073( )A
f9_12 sf
-.073(scale)A
f8_12 sf
-.073( )A
f0_12 sf
-.049(is the scale parameter that GaussFit)A
126 640 :M
-.111(computed if a robust estimation method was employed. The exact meaning of this)A
126 652 :M
-.097(parameter will be published elsewhere.)A
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Malmaison; page: 13 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(13)S
144 93 :M
f2_12 sf
1.667(3.1.1.8)A
198 93 :M
2.156 .216(Environment File Parameters Quick Reference Chart)J
99 142 :M
12 f6_1 :p
92 :m
1.265 .127(Keyword          )J
151 142 :M
4 :m
1 .1( )J
184 142 :M
111 :m
1.18 .118(Value Range          )J
255 142 :M
4 :m
1 .1( )J
288 142 :M
65 :m
1.253 .125(Default      )J
329 142 :M
4 :m
1 .1( )J
346 142 :M
39 :m
1.761 .176(Req.   )J
373 142 :M
4 :m
1 .1( )J
378 142 :M
162 :m
1.147 .115(Definition                         .)J
-1 -1 97 121 1 1 96 120 @b
-1 -1 97 121 1 1 96 120 @b
97 121 -1 1 542 120 1 97 120 @a
-1 -1 543 121 1 1 542 120 @b
-1 -1 543 121 1 1 542 120 @b
-1 -1 97 145 1 1 96 121 @b
-1 -1 543 145 1 1 542 121 @b
-1 -1 181 145 1 1 180 120 @b
-1 -1 284 145 1 1 283 120 @b
-1 -1 338 145 1 1 337 120 @b
-1 -1 374 145 1 1 373 120 @b
99 161 :M
f9_12 sf
.916(data1..n)A
184 161 :M
f0_12 sf
-.215(char)A
288 161 :M
-.109(none)A
346 161 :M
(yes)S
378 161 :M
-.127(names of data files)A
-1 -1 97 146 1 1 96 145 @b
97 146 -1 1 542 145 1 97 145 @a
-1 -1 543 146 1 1 542 145 @b
-1 -1 97 164 1 1 96 146 @b
-1 -1 543 164 1 1 542 146 @b
-1 -1 181 164 1 1 180 145 @b
-1 -1 284 164 1 1 283 145 @b
-1 -1 338 164 1 1 337 145 @b
-1 -1 374 164 1 1 373 145 @b
99 180 :M
f9_12 sf
1.203(env)A
184 180 :M
f0_12 sf
-.215(char)A
288 180 :M
-.109(none)A
346 180 :M
(yes)S
378 180 :M
-.157(name of environment file)A
-1 -1 97 165 1 1 96 164 @b
97 165 -1 1 542 164 1 97 164 @a
-1 -1 543 165 1 1 542 164 @b
-1 -1 97 183 1 1 96 165 @b
-1 -1 543 183 1 1 542 165 @b
-1 -1 181 183 1 1 180 164 @b
-1 -1 284 183 1 1 283 164 @b
-1 -1 338 183 1 1 337 164 @b
-1 -1 374 183 1 1 373 164 @b
99 199 :M
f9_12 sf
.902(param1..n)A
184 199 :M
f0_12 sf
-.215(char)A
288 199 :M
-.109(none)A
346 199 :M
(yes)S
378 199 :M
-.142(names of parameter files)A
-1 -1 97 184 1 1 96 183 @b
97 184 -1 1 542 183 1 97 183 @a
-1 -1 543 184 1 1 542 183 @b
-1 -1 97 202 1 1 96 184 @b
-1 -1 543 202 1 1 542 184 @b
-1 -1 181 202 1 1 180 183 @b
-1 -1 284 202 1 1 283 183 @b
-1 -1 338 202 1 1 337 183 @b
-1 -1 374 202 1 1 373 183 @b
99 218 :M
f9_12 sf
1.002(model)A
184 218 :M
f0_12 sf
-.215(char)A
288 218 :M
-.109(none)A
346 218 :M
(yes)S
378 218 :M
-.174(name of model file)A
-1 -1 97 203 1 1 96 202 @b
97 203 -1 1 542 202 1 97 202 @a
-1 -1 543 203 1 1 542 202 @b
-1 -1 97 221 1 1 96 203 @b
-1 -1 543 221 1 1 542 203 @b
-1 -1 181 221 1 1 180 202 @b
-1 -1 284 221 1 1 283 202 @b
-1 -1 338 221 1 1 337 202 @b
-1 -1 374 221 1 1 373 202 @b
99 237 :M
f9_12 sf
.935(results)A
184 237 :M
f0_12 sf
-.215(char)A
288 237 :M
-.109(none)A
346 237 :M
(yes)S
378 237 :M
-.12(name of results file)A
-1 -1 97 222 1 1 96 221 @b
97 222 -1 1 542 221 1 97 221 @a
-1 -1 543 222 1 1 542 221 @b
-1 -1 97 240 1 1 96 222 @b
-1 -1 543 240 1 1 542 222 @b
-1 -1 181 240 1 1 180 221 @b
-1 -1 284 240 1 1 283 221 @b
-1 -1 338 240 1 1 337 221 @b
-1 -1 374 240 1 1 373 221 @b
99 256 :M
f9_12 sf
1.069(fair)A
184 256 :M
f0_12 sf
.692 .069(0.8 - 0.95)J
288 256 :M
(off)S
346 256 :M
(no)S
378 256 :M
-.148(fair reduction method)A
-1 -1 97 241 1 1 96 240 @b
97 241 -1 1 542 240 1 97 240 @a
-1 -1 543 241 1 1 542 240 @b
-1 -1 97 259 1 1 96 241 @b
-1 -1 543 259 1 1 542 241 @b
-1 -1 181 259 1 1 180 240 @b
-1 -1 284 259 1 1 283 240 @b
-1 -1 338 259 1 1 337 240 @b
-1 -1 374 259 1 1 373 240 @b
99 275 :M
f9_12 sf
1.002(huber)A
184 275 :M
f0_12 sf
.692 .069(0.8 - 0.95)J
288 275 :M
(off)S
346 275 :M
(no)S
378 275 :M
-.125(huber reduction method)A
-1 -1 97 260 1 1 96 259 @b
97 260 -1 1 542 259 1 97 259 @a
-1 -1 543 260 1 1 542 259 @b
-1 -1 97 278 1 1 96 260 @b
-1 -1 543 278 1 1 542 260 @b
-1 -1 181 278 1 1 180 259 @b
-1 -1 284 278 1 1 283 259 @b
-1 -1 338 278 1 1 337 259 @b
-1 -1 374 278 1 1 373 259 @b
99 294 :M
f9_12 sf
1.002(tukey)A
184 294 :M
f0_12 sf
.692 .069(0.8 - 0.95)J
288 294 :M
(off)S
346 294 :M
(no)S
378 294 :M
-.141(tukey reduction method)A
-1 -1 97 279 1 1 96 278 @b
97 279 -1 1 542 278 1 97 278 @a
-1 -1 543 279 1 1 542 278 @b
-1 -1 97 297 1 1 96 279 @b
-1 -1 543 297 1 1 542 279 @b
-1 -1 181 297 1 1 180 278 @b
-1 -1 284 297 1 1 283 278 @b
-1 -1 338 297 1 1 337 278 @b
-1 -1 374 297 1 1 373 278 @b
99 313 :M
f9_12 sf
.962(minsum)A
184 313 :M
f0_12 sf
-.056(0  /  1)A
288 313 :M
(off)S
346 313 :M
(no)S
378 313 :M
-.135(minsum reduction method)A
-1 -1 97 298 1 1 96 297 @b
97 298 -1 1 542 297 1 97 297 @a
-1 -1 543 298 1 1 542 297 @b
-1 -1 97 316 1 1 96 298 @b
-1 -1 543 316 1 1 542 298 @b
-1 -1 181 316 1 1 180 297 @b
-1 -1 284 316 1 1 283 297 @b
-1 -1 338 316 1 1 337 297 @b
-1 -1 374 316 1 1 373 297 @b
99 332 :M
f9_12 sf
1.069(irls)A
184 332 :M
f0_12 sf
-.067(0  / 1)A
288 332 :M
(off)S
346 332 :M
(no)S
378 332 :M
-.12(iteratively reweighted lst sqrs)A
-1 -1 97 317 1 1 96 316 @b
97 317 -1 1 542 316 1 97 316 @a
-1 -1 543 317 1 1 542 316 @b
-1 -1 97 335 1 1 96 317 @b
-1 -1 543 335 1 1 542 317 @b
-1 -1 181 335 1 1 180 316 @b
-1 -1 284 335 1 1 283 316 @b
-1 -1 338 335 1 1 337 316 @b
-1 -1 374 335 1 1 373 316 @b
99 351 :M
f9_12 sf
1.203(orm)A
184 351 :M
f0_12 sf
-.055(-1 /  1)A
288 351 :M
(on)S
346 351 :M
(no)S
378 351 :M
-.127(orthogonal reduction method)A
-1 -1 97 336 1 1 96 335 @b
97 336 -1 1 542 335 1 97 335 @a
-1 -1 543 336 1 1 542 335 @b
-1 -1 97 354 1 1 96 336 @b
-1 -1 543 354 1 1 542 336 @b
-1 -1 181 354 1 1 180 335 @b
-1 -1 284 354 1 1 283 335 @b
-1 -1 338 354 1 1 337 335 @b
-1 -1 374 354 1 1 373 335 @b
99 370 :M
f9_12 sf
.962(double)A
184 370 :M
f0_12 sf
-.056(0  /  1)A
288 370 :M
(off)S
346 370 :M
(no)S
378 370 :M
-.061(double iter. of eqns of condition)A
-1 -1 97 355 1 1 96 354 @b
97 355 -1 1 542 354 1 97 354 @a
-1 -1 543 355 1 1 542 354 @b
-1 -1 97 373 1 1 96 355 @b
-1 -1 543 373 1 1 542 355 @b
-1 -1 181 373 1 1 180 354 @b
-1 -1 284 373 1 1 283 354 @b
-1 -1 338 373 1 1 337 354 @b
-1 -1 374 373 1 1 373 354 @b
99 389 :M
f9_12 sf
.962(triang)A
184 389 :M
f0_12 sf
-.056(0  /  1)A
288 389 :M
(off)S
346 389 :M
(no)S
378 389 :M
-.127(orthogonal reduction method)A
-1 -1 97 374 1 1 96 373 @b
97 374 -1 1 542 373 1 97 373 @a
-1 -1 543 374 1 1 542 373 @b
-1 -1 97 392 1 1 96 374 @b
-1 -1 543 392 1 1 542 374 @b
-1 -1 181 392 1 1 180 373 @b
-1 -1 284 392 1 1 283 373 @b
-1 -1 338 392 1 1 337 373 @b
-1 -1 374 392 1 1 373 373 @b
99 408 :M
f9_12 sf
.962(lambda)A
184 408 :M
f0_12 sf
.126 .013(1.0E-12  -  100)J
288 408 :M
.2(0.0001)A
346 408 :M
(no)S
378 408 :M
-.156(factor in Marq-Levenberg)A
-1 -1 97 393 1 1 96 392 @b
97 393 -1 1 542 392 1 97 392 @a
-1 -1 543 393 1 1 542 392 @b
-1 -1 97 411 1 1 96 393 @b
-1 -1 543 411 1 1 542 393 @b
-1 -1 181 411 1 1 180 392 @b
-1 -1 284 411 1 1 283 392 @b
-1 -1 338 411 1 1 337 392 @b
-1 -1 374 411 1 1 373 392 @b
99 427 :M
f9_12 sf
.962(factor)A
184 427 :M
f0_12 sf
.126 .013(1.0E-12  -  100)J
288 427 :M
.5(0.1)A
346 427 :M
(no)S
378 427 :M
-.156(factor in Marq-Levenberg)A
-1 -1 97 412 1 1 96 411 @b
97 412 -1 1 542 411 1 97 411 @a
-1 -1 543 412 1 1 542 411 @b
-1 -1 97 430 1 1 96 412 @b
-1 -1 543 430 1 1 542 412 @b
-1 -1 181 430 1 1 180 411 @b
-1 -1 284 430 1 1 283 411 @b
-1 -1 338 430 1 1 337 411 @b
-1 -1 374 430 1 1 373 411 @b
99 446 :M
f9_12 sf
1.002(iters)A
184 446 :M
f0_12 sf
(1 - 1000)S
288 446 :M
(10)S
346 446 :M
(no)S
378 446 :M
-.261(iteration limit)A
-1 -1 97 431 1 1 96 430 @b
97 431 -1 1 542 430 1 97 430 @a
-1 -1 543 431 1 1 542 430 @b
-1 -1 97 449 1 1 96 431 @b
-1 -1 543 449 1 1 542 431 @b
-1 -1 181 449 1 1 180 430 @b
-1 -1 284 449 1 1 283 430 @b
-1 -1 338 449 1 1 337 430 @b
-1 -1 374 449 1 1 373 430 @b
99 465 :M
f9_12 sf
1.203(tol)A
184 465 :M
f0_12 sf
.237 .024(1.0E13  -  1.0E-13)J
288 465 :M
.167(0.00001)A
346 465 :M
(no)S
378 465 :M
-.109(tolerance for stopping)A
-1 -1 97 450 1 1 96 449 @b
97 450 -1 1 542 449 1 97 449 @a
-1 -1 543 450 1 1 542 449 @b
-1 -1 97 468 1 1 96 450 @b
-1 -1 543 468 1 1 542 450 @b
-1 -1 181 468 1 1 180 449 @b
-1 -1 284 468 1 1 283 449 @b
-1 -1 338 468 1 1 337 449 @b
-1 -1 374 468 1 1 373 449 @b
99 484 :M
f9_12 sf
1.002(prmat)A
184 484 :M
f0_12 sf
-.056(0  /  1)A
288 484 :M
(off)S
346 484 :M
(no)S
378 484 :M
-.147(output matrix to result file)A
-1 -1 97 469 1 1 96 468 @b
97 469 -1 1 542 468 1 97 468 @a
-1 -1 543 469 1 1 542 468 @b
-1 -1 97 487 1 1 96 469 @b
-1 -1 543 487 1 1 542 469 @b
-1 -1 181 487 1 1 180 468 @b
-1 -1 284 487 1 1 283 468 @b
-1 -1 338 487 1 1 337 468 @b
-1 -1 374 487 1 1 373 468 @b
99 503 :M
f9_12 sf
1.002(prvar)A
184 503 :M
f0_12 sf
-.083(0 / 1)A
288 503 :M
(off)S
346 503 :M
(no)S
378 503 :M
-.16(output covariance mat to result file)A
-1 -1 97 488 1 1 96 487 @b
97 488 -1 1 542 487 1 97 487 @a
-1 -1 543 488 1 1 542 487 @b
-1 -1 97 506 1 1 96 488 @b
-1 -1 543 506 1 1 542 488 @b
-1 -1 181 506 1 1 180 487 @b
-1 -1 284 506 1 1 283 487 @b
-1 -1 338 506 1 1 337 487 @b
-1 -1 374 506 1 1 373 487 @b
99 522 :M
f9_12 sf
1.002(scale)A
346 522 :M
f0_12 sf
(no)S
378 522 :M
-.154(current scale factor)A
-1 -1 97 507 1 1 96 506 @b
97 507 -1 1 542 506 1 97 506 @a
-1 -1 543 507 1 1 542 506 @b
-1 -1 97 525 1 1 96 507 @b
-1 -1 543 525 1 1 542 507 @b
-1 -1 181 525 1 1 180 506 @b
-1 -1 284 525 1 1 283 506 @b
-1 -1 338 525 1 1 337 506 @b
-1 -1 374 525 1 1 373 506 @b
99 541 :M
f9_12 sf
.962(sigma1)A
346 541 :M
f0_12 sf
(no)S
378 541 :M
-.137(current sigma factor)A
-1 -1 97 526 1 1 96 525 @b
97 526 -1 1 542 525 1 97 525 @a
-1 -1 543 526 1 1 542 525 @b
-1 -1 97 545 1 1 96 544 @b
-1 -1 97 545 1 1 96 544 @b
97 545 -1 1 542 544 1 97 544 @a
-1 -1 543 545 1 1 542 544 @b
-1 -1 543 545 1 1 542 544 @b
-1 -1 97 544 1 1 96 526 @b
-1 -1 543 544 1 1 542 526 @b
-1 -1 181 545 1 1 180 525 @b
-1 -1 284 545 1 1 283 525 @b
-1 -1 338 545 1 1 337 525 @b
-1 -1 374 545 1 1 373 525 @b
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Malmaison; page: 14 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(14)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 93 :M
f2_12 sf
2(3.2)A
144 93 :M
2.51 .251(Table Formatted Files)J
90 117 :M
f0_12 sf
.584 .058(For this version of GaussFit, a simulation of SDAS \(formerly MIDAS\) Table formatted)J
90 129 :M
.328 .033(files has been implemented. The files are text files, with one row devoted to each unit of)J
90 141 :M
-.027(information. Each row of the table is terminated by a carriage return, and the items in each)A
90 153 :M
-.09(row are separated by an ASCII tab character. The first row of each table contains the names)A
90 165 :M
-.035(of each of the columns of the table, as ASCII text. The second row contains the type of the)A
90 177 :M
.188 .019(values in that column, which is usually \322double\323.  Each row after the second contains the)J
90 189 :M
.41 .041(tab-separated numerical values belonging to each column. This format is identical to the)J
90 201 :M
.037 .004(format that is written by the TEXT ONLY mode of programs for the Macintosh computer)J
90 215 :M
.645 .064(such as Microsoft EXCEL)J
f0_10 sf
0 -3 rm
.204(\250)A
0 3 rm
f0_12 sf
.61 .061(, Microsoft FILE)J
f0_10 sf
0 -3 rm
.204(\250)A
0 3 rm
f0_12 sf
.768 .077(, REFLEX)J
f0_10 sf
0 -3 rm
.204(\250)A
0 3 rm
f0_12 sf
.413 .041(, and so forth. It is supported)J
90 227 :M
-.114(by utility programs on other microcomputers as well and provides a simple data interchange)A
90 239 :M
-.069(format between GaussFit and microcomputers.)A
90 263 :M
-.124(The maximum number of rows and columns in a table file is dependent upon the available)A
90 275 :M
-.109(memory of the machine.)A
108 299 :M
f2_12 sf
1.75(3.2.1)A
144 299 :M
2.817 .282(Data Files)J
108 323 :M
f0_12 sf
-.097(The data files contain the observations. There is one column for each observed)A
108 335 :M
1.223 .122(quantity.  )J
f2_12 sf
1.855 .185(Important: The observations are never changed by the program.)J
108 347 :M
f0_12 sf
-.112(Other columns may contain additional information on each observation, such as)A
108 359 :M
-.077(identifying numbers, the time of the observation, etc. Furthermore, there are optional)A
108 371 :M
-.119(columns for the variances and covariances of the data, which are labelled in a special)A
108 383 :M
.337(way.)A
108 411 :M
-.062(Suppose that we have two data per observation, for example )A
f5_12 sf
-.074(x)A
f0_12 sf
-.055(  and )A
f5_12 sf
-.09(h)A
f0_12 sf
-.066(. Then we will)A
108 425 :M
-.077(have a column for each, for example)A
f8_12 sf
-.111( xi )A
f0_12 sf
-.089(and)A
f8_12 sf
-.111( eta)A
f0_12 sf
-.078(.   GaussFit will add a new column)A
108 437 :M
-.092(for each datum, labelled with the name of the datum preceded by an underscore. For)A
108 450 :M
-.088(example, in the problem we just discussed, there will be new columns labelled)A
f8_12 sf
-.174( _xi)A
108 463 :M
f0_12 sf
-.129(and)A
f8_12 sf
-.161( _eta)A
f0_12 sf
-.108(. The entries in these columns contain the residuals that the program)A
108 475 :M
-.152(calculated in the most recent iteration. Thus the estimated value of a particular)A
108 487 :M
-.098(observation is equal to the )A
f4_12 sf
-.137(sum)A
f0_12 sf
-.102(  of the value standing in the residual column and the)A
108 499 :M
-.079(value standing in the corresponding observation column.)A
108 523 :M
f4_12 sf
-.106(Weights)A
f0_12 sf
-.091(  are specified by supplying estimated )A
f4_12 sf
-.1(variances)A
f0_12 sf
-.086(  for the data.   By definition,)A
108 535 :M
-.104(the variances are the )A
f4_12 sf
-.121(squares)A
f0_12 sf
-.107(  of the standard deviations, and are inversely proportional)A
108 547 :M
-.023(to the weights.)A
108 575 :M
-.087(If it is desired to supply estimated variances for a datum, for example )A
f5_12 sf
-.11(x)A
f0_12 sf
-.099(, then a column)A
108 589 :M
-.115(with the name)A
f8_12 sf
-.158( xi_xi)A
f0_12 sf
-.106(  must be supplied. The variances of the individual)A
108 605 :M
-.094(measurements of )A
f5_12 sf
-.105(x)A
f0_12 sf
-.081(  go in this column. Similarly, the variances of the )A
f5_12 sf
-.128(h)A
f0_12 sf
-.102(  measurements)A
108 622 :M
-.118(stand in the column labelled)A
f8_12 sf
-.176( eta_eta)A
f0_12 sf
-.083(. If )A
f5_12 sf
-.145(x)A
f0_12 sf
-.114( and )A
f5_12 sf
-.177(h)A
f0_12 sf
-.118( are correlated, the covariance)A
108 639 :M
-.136(between the )A
f5_12 sf
-.159(x)A
f0_12 sf
-.125( and )A
f5_12 sf
-.194(h)A
f0_12 sf
-.13( measurements will stand in yet a third column labelled)A
f8_12 sf
-.225( xi_eta)A
108 653 :M
f0_12 sf
-.064(or, if preferred,)A
f8_12 sf
-.107( eta_xi)A
f0_12 sf
-.075( \(Either name will do, and only one column for each)A
108 665 :M
-.064(covariance should be provided.\))A
108 689 :M
-.067(If the  variances are not supplied they will be assumed equal to 1.0,  which is)A
108 701 :M
-.112(equivalent to making an unweighted solution; if the covariances are not supplied, they)A
108 713 :M
-.023(will be assumed equal to 0.0.)A
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Malmaison; page: 15 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(15)S
126 81 :M
-.101(If the variances and covariances are known only relatively \(that is, up to a constant)A
126 93 :M
-.104(factor\) then the relative values can be used instead of the true ones, and the program)A
126 105 :M
-.112(will calculate the unknown factor as the variance of unit weight.)A
126 129 :M
-.056(Figure 4 shows a portion of a sample data file.)A
139 155 :M
f8_12 sf
-.248(plate)A
207 155 :M
-.264(star)A
270 155 :M
-.397(xi)A
342 155 :M
-.297(eta)A
405 155 :M
-.248(xi_xi)A
468 155 :M
-.297(_xi)A
-1 -1 124 145 1 1 123 144 @b
-1 -1 124 145 1 1 123 144 @b
124 145 -1 1 524 144 1 124 144 @a
-1 -1 525 145 1 1 524 144 @b
-1 -1 525 145 1 1 524 144 @b
-1 -1 124 157 1 1 123 145 @b
-1 -1 525 157 1 1 524 145 @b
-1 -1 199 157 1 1 198 144 @b
-1 -1 262 157 1 1 261 144 @b
-1 -1 334 157 1 1 333 144 @b
-1 -1 397 157 1 1 396 144 @b
-1 -1 460 157 1 1 459 144 @b
139 167 :M
-.238(double)A
207 167 :M
-.238(double)A
270 167 :M
-.238(double)A
342 167 :M
-.238(double)A
405 167 :M
-.238(double)A
468 167 :M
-.238(double)A
-1 -1 124 169 1 1 123 157 @b
-1 -1 525 169 1 1 524 157 @b
-1 -1 199 169 1 1 198 156 @b
-1 -1 262 169 1 1 261 156 @b
-1 -1 334 169 1 1 333 156 @b
-1 -1 397 169 1 1 396 156 @b
-1 -1 460 169 1 1 459 156 @b
139 192 :M
(3)S
207 192 :M
(1)S
270 192 :M
-.238( 221.5)A
342 192 :M
-.238(-138.2)A
405 192 :M
-.297(0.1)A
468 192 :M
-.264(-0.2)A
-1 -1 124 170 1 1 123 169 @b
124 170 -1 1 524 169 1 124 169 @a
-1 -1 525 170 1 1 524 169 @b
-1 -1 124 194 1 1 123 170 @b
-1 -1 525 194 1 1 524 170 @b
-1 -1 199 194 1 1 198 181 @b
-1 -1 262 194 1 1 261 181 @b
-1 -1 334 194 1 1 333 181 @b
-1 -1 397 194 1 1 396 181 @b
-1 -1 460 194 1 1 459 181 @b
139 204 :M
(3)S
207 204 :M
(2)S
270 204 :M
-.238( 338.8)A
342 204 :M
-.238( 322.5)A
405 204 :M
-.297(0.1)A
468 204 :M
-.264(-0.3)A
-1 -1 124 206 1 1 123 194 @b
-1 -1 525 206 1 1 524 194 @b
-1 -1 199 206 1 1 198 193 @b
-1 -1 262 206 1 1 261 193 @b
-1 -1 334 206 1 1 333 193 @b
-1 -1 397 206 1 1 396 193 @b
-1 -1 460 206 1 1 459 193 @b
139 216 :M
(3)S
207 216 :M
(5)S
270 216 :M
-.238(-720.0)A
342 216 :M
-.238(-462.1)A
405 216 :M
-.297(0.2)A
468 216 :M
-.264( 0.2)A
-1 -1 124 218 1 1 123 206 @b
-1 -1 525 218 1 1 524 206 @b
-1 -1 199 218 1 1 198 205 @b
-1 -1 262 218 1 1 261 205 @b
-1 -1 334 218 1 1 333 205 @b
-1 -1 397 218 1 1 396 205 @b
-1 -1 460 218 1 1 459 205 @b
-1 -1 124 231 1 1 123 230 @b
-1 -1 124 231 1 1 123 230 @b
124 231 -1 1 524 230 1 124 230 @a
-1 -1 525 231 1 1 524 230 @b
-1 -1 525 231 1 1 524 230 @b
-1 -1 124 230 1 1 123 218 @b
-1 -1 525 230 1 1 524 218 @b
-1 -1 199 231 1 1 198 217 @b
-1 -1 262 231 1 1 261 217 @b
-1 -1 334 231 1 1 333 217 @b
-1 -1 397 231 1 1 396 217 @b
-1 -1 460 231 1 1 459 217 @b
261 252 :M
f0_12 sf
-.159(Figure 4: Sample Data File)A
126 276 :M
.409 .041(See also \2446.3.)J
126 300 :M
f2_12 sf
1.75(3.2.2)A
162 300 :M
1.906 .191(The Parameter File)J
126 324 :M
f0_12 sf
-.152(The parameters can be defined in a single parameter file \(named in the environment file)A
126 337 :M
-.056(by the keyword)A
f8_12 sf
-.075( )A
f9_12 sf
-.075(params)A
f0_12 sf
-.052(\) or by multiple parameter files \(named in the environment)A
126 350 :M
.296 .03(file by )J
f8_12 sf
.159 .016( )J
f9_12 sf
.175(param1...param10\))A
f0_12 sf
.44 .044(. The file\(s\) contains one column for each)J
126 362 :M
-.123(parameter defined in the program, plus additional columns that repeat columns in the)A
126 374 :M
-.081(data tables and can be used as indexes into the table. Figure 5 shows a sample)A
126 386 :M
-.02(parameter file.  See also \2446.4.)A
135 412 :M
f8_12 sf
-.248(plate)A
207 412 :M
(p)S
266 412 :M
(q)S
328 412 :M
-.264(star)A
410 412 :M
(x)S
482 412 :M
(y)S
-1 -1 124 402 1 1 123 401 @b
-1 -1 124 402 1 1 123 401 @b
124 402 -1 1 524 401 1 124 401 @a
-1 -1 525 402 1 1 524 401 @b
-1 -1 525 402 1 1 524 401 @b
-1 -1 124 414 1 1 123 402 @b
-1 -1 525 414 1 1 524 402 @b
-1 -1 181 414 1 1 180 401 @b
-1 -1 239 414 1 1 238 401 @b
-1 -1 307 414 1 1 306 401 @b
-1 -1 379 414 1 1 378 401 @b
-1 -1 451 414 1 1 450 401 @b
132 424 :M
-.238(double)A
190 424 :M
-.238(double)A
249 424 :M
-.238(double)A
321 424 :M
-.238(double)A
393 424 :M
-.238(double)A
465 424 :M
-.238(double)A
-1 -1 124 426 1 1 123 414 @b
-1 -1 525 426 1 1 524 414 @b
-1 -1 181 426 1 1 180 413 @b
-1 -1 239 426 1 1 238 413 @b
-1 -1 307 426 1 1 306 413 @b
-1 -1 379 426 1 1 378 413 @b
-1 -1 451 426 1 1 450 413 @b
149 449 :M
(1)S
193 449 :M
-.248(0.998)A
263 449 :M
-.248(0.001)A
335 449 :M
(1)S
393 449 :M
-.238(338.55)A
465 449 :M
-.238(451.28)A
-1 -1 124 427 1 1 123 426 @b
124 427 -1 1 524 426 1 124 426 @a
-1 -1 525 427 1 1 524 426 @b
-1 -1 124 451 1 1 123 427 @b
-1 -1 525 451 1 1 524 427 @b
-1 -1 181 451 1 1 180 438 @b
-1 -1 239 451 1 1 238 438 @b
-1 -1 307 451 1 1 306 438 @b
-1 -1 379 451 1 1 378 438 @b
-1 -1 451 451 1 1 450 438 @b
149 461 :M
(2)S
193 461 :M
-.248(1.002)A
256 461 :M
-.238(-0.003)A
335 461 :M
(2)S
386 461 :M
-.231(-729.42)A
465 461 :M
-.238(-83.30)A
-1 -1 124 463 1 1 123 451 @b
-1 -1 525 463 1 1 524 451 @b
-1 -1 181 463 1 1 180 450 @b
-1 -1 239 463 1 1 238 450 @b
-1 -1 307 463 1 1 306 450 @b
-1 -1 379 463 1 1 378 450 @b
-1 -1 451 463 1 1 450 450 @b
149 473 :M
(3)S
193 473 :M
f11_12 sf
-.248(1.005)A
256 473 :M
f8_12 sf
-.238(-0.003)A
335 473 :M
(4)S
400 473 :M
-.248(65.99)A
458 473 :M
-.231(-180.22)A
-1 -1 124 475 1 1 123 463 @b
-1 -1 525 475 1 1 524 463 @b
-1 -1 181 475 1 1 180 462 @b
-1 -1 239 475 1 1 238 462 @b
-1 -1 307 475 1 1 306 462 @b
-1 -1 379 475 1 1 378 462 @b
-1 -1 451 475 1 1 450 462 @b
149 485 :M
(4)S
193 485 :M
-.248(0.998)A
256 485 :M
-.238(-0.005)A
335 485 :M
(5)S
393 485 :M
-.238(433.67)A
465 485 :M
-.238(-23.31)A
-1 -1 124 487 1 1 123 475 @b
-1 -1 525 487 1 1 524 475 @b
-1 -1 181 487 1 1 180 474 @b
-1 -1 239 487 1 1 238 474 @b
-1 -1 307 487 1 1 306 474 @b
-1 -1 379 487 1 1 378 474 @b
-1 -1 451 487 1 1 450 474 @b
-1 -1 124 500 1 1 123 499 @b
-1 -1 124 500 1 1 123 499 @b
124 500 -1 1 524 499 1 124 499 @a
-1 -1 525 500 1 1 524 499 @b
-1 -1 525 500 1 1 524 499 @b
-1 -1 124 499 1 1 123 487 @b
-1 -1 525 499 1 1 524 487 @b
-1 -1 181 500 1 1 180 486 @b
-1 -1 239 500 1 1 238 486 @b
-1 -1 307 500 1 1 306 486 @b
-1 -1 379 500 1 1 378 486 @b
-1 -1 451 500 1 1 450 486 @b
257 521 :M
f0_12 sf
-.131(Figure 5: Sample Parameter File)A
126 546 :M
-.112(In the sample parameter file, the columns headed)A
f8_12 sf
-.165( p )A
f0_12 sf
-.132(and)A
f8_12 sf
-.165( q )A
f0_12 sf
-.111(are plate constants, and)A
126 559 :M
-.096(the program will index them through the numbers in the column headed)A
f8_12 sf
-.136( plate)A
f0_12 sf
-.107(. For)A
126 571 :M
-.089(example, if the program is forming the equations of condition for plate 3 \(which would)A
126 583 :M
-.106(be the case if the active data line were one of those shown in Figure 4\) then the value of)A
126 596 :M
f8_12 sf
-.104(p[3])A
f0_12 sf
-.067( that would be used is )A
f4_12 sf
-.078(1.005)A
f0_12 sf
-.069(; this is obtained by reading down the)A
f8_12 sf
-.125( plate)A
126 609 :M
f0_12 sf
-.103(column to the number 3, then reading across to the)A
f8_12 sf
-.152( p )A
f0_12 sf
-.107(column to get the desired)A
126 621 :M
.058(number.)A
126 646 :M
-.094(In a similar fashion, the columns headed)A
f8_12 sf
-.139( x )A
f0_12 sf
-.112(and)A
f8_12 sf
-.139( y )A
f0_12 sf
-.094(are the star positions the program)A
126 659 :M
-.05(has computed. For example, the value of)A
f8_12 sf
-.072( y )A
f0_12 sf
-.046(for star 5 is \32023.31. This is the value that)A
126 671 :M
-.101(would be used if the last line of Figure 4 were the active data line.)A
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Malmaison; page: 16 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(16)S
388 57 :M
-.03(GaussFit User\325s Manual)A
117 82 :M
f8_12 sf
-.248(plate)A
185 82 :M
(p)S
239 82 :M
(q)S
279 82 :M
-.248(alpha)A
337 82 :M
-.264(star)A
401 82 :M
(x)S
455 82 :M
(y)S
-1 -1 106 72 1 1 105 71 @b
-1 -1 106 72 1 1 105 71 @b
106 72 -1 1 506 71 1 106 71 @a
-1 -1 507 72 1 1 506 71 @b
-1 -1 507 72 1 1 506 71 @b
-1 -1 106 84 1 1 105 72 @b
-1 -1 507 84 1 1 506 72 @b
-1 -1 163 84 1 1 162 71 @b
-1 -1 217 84 1 1 216 71 @b
-1 -1 271 84 1 1 270 71 @b
-1 -1 325 84 1 1 324 71 @b
-1 -1 379 84 1 1 378 71 @b
-1 -1 433 84 1 1 432 71 @b
114 94 :M
-.238(double)A
168 94 :M
-.238(double)A
222 94 :M
-.238(double)A
276 94 :M
-.238(double)A
330 94 :M
-.238(double)A
384 94 :M
-.238(double)A
438 94 :M
-.238(double)A
-1 -1 106 96 1 1 105 84 @b
-1 -1 507 96 1 1 506 84 @b
-1 -1 163 96 1 1 162 83 @b
-1 -1 217 96 1 1 216 83 @b
-1 -1 271 96 1 1 270 83 @b
-1 -1 325 96 1 1 324 83 @b
-1 -1 379 96 1 1 378 83 @b
-1 -1 433 96 1 1 432 83 @b
128 119 :M
(1)S
168 119 :M
-.248(0.998)A
227 119 :M
-.248(0.001)A
285 119 :M
-.248(-85.3)A
347 119 :M
(1)S
384 119 :M
-.238(338.55)A
438 119 :M
-.238(451.28)A
-1 -1 106 97 1 1 105 96 @b
106 97 -1 1 506 96 1 106 96 @a
-1 -1 507 97 1 1 506 96 @b
-1 -1 106 121 1 1 105 97 @b
-1 -1 507 121 1 1 506 97 @b
-1 -1 163 121 1 1 162 108 @b
-1 -1 217 121 1 1 216 108 @b
-1 -1 271 121 1 1 270 108 @b
-1 -1 325 121 1 1 324 108 @b
-1 -1 379 121 1 1 378 108 @b
-1 -1 433 121 1 1 432 108 @b
128 131 :M
(2)S
168 131 :M
-.248(1.002)A
220 131 :M
-.238(-0.003)A
347 131 :M
(2)S
377 131 :M
-.231(-729.42)A
438 131 :M
-.238(-83.30)A
-1 -1 106 133 1 1 105 121 @b
-1 -1 507 133 1 1 506 121 @b
-1 -1 163 133 1 1 162 120 @b
-1 -1 217 133 1 1 216 120 @b
-1 -1 271 133 1 1 270 120 @b
-1 -1 325 133 1 1 324 120 @b
-1 -1 379 133 1 1 378 120 @b
-1 -1 433 133 1 1 432 120 @b
128 143 :M
(3)S
168 143 :M
f11_12 sf
-.248(1.005)A
220 143 :M
f8_12 sf
-.238(-0.003)A
347 143 :M
(4)S
391 143 :M
-.248(65.99)A
431 143 :M
-.231(-180.22)A
-1 -1 106 145 1 1 105 133 @b
-1 -1 507 145 1 1 506 133 @b
-1 -1 163 145 1 1 162 132 @b
-1 -1 217 145 1 1 216 132 @b
-1 -1 271 145 1 1 270 132 @b
-1 -1 325 145 1 1 324 132 @b
-1 -1 379 145 1 1 378 132 @b
-1 -1 433 145 1 1 432 132 @b
128 155 :M
(4)S
168 155 :M
-.248(0.998)A
220 155 :M
-.238(-0.005)A
347 155 :M
(5)S
384 155 :M
-.238(433.67)A
438 155 :M
-.238(-23.31)A
-1 -1 106 157 1 1 105 145 @b
-1 -1 507 157 1 1 506 145 @b
-1 -1 163 157 1 1 162 144 @b
-1 -1 217 157 1 1 216 144 @b
-1 -1 271 157 1 1 270 144 @b
-1 -1 325 157 1 1 324 144 @b
-1 -1 379 157 1 1 378 144 @b
-1 -1 433 157 1 1 432 144 @b
-1 -1 106 170 1 1 105 169 @b
-1 -1 106 170 1 1 105 169 @b
106 170 -1 1 506 169 1 106 169 @a
-1 -1 507 170 1 1 506 169 @b
-1 -1 507 170 1 1 506 169 @b
-1 -1 106 169 1 1 105 157 @b
-1 -1 507 169 1 1 506 157 @b
-1 -1 163 170 1 1 162 156 @b
-1 -1 217 170 1 1 216 156 @b
-1 -1 271 170 1 1 270 156 @b
-1 -1 325 170 1 1 324 156 @b
-1 -1 379 170 1 1 378 156 @b
-1 -1 433 170 1 1 432 156 @b
184 191 :M
f0_12 sf
-.126(Figure 6: Sample Parameter File with Global Parameter)A
108 216 :M
-.11(The column headed)A
f8_12 sf
-.142( alpha )A
f0_12 sf
-.091(is an unsubscripted, or )A
f4_12 sf
-.095(global,)A
f0_12 sf
-.101( parameter. Every time the)A
108 229 :M
-.05(program uses)A
f8_12 sf
-.067( alpha)A
f0_12 sf
-.042(, the value standing in the first row of the table, \32085.3, will be)A
108 241 :M
-.067(used.  In the alpha column below the global value -85.3, )A
f4_12 sf
-.067(tabs must be used  )A
f0_12 sf
-.077(to maintain)A
108 253 :M
-.121(the integrity of the table.  Alternatively, a second parameter file could be  used which)A
108 265 :M
-.097(contained only the global parameters.  Figures 5 and 7 would then be equivalent in)A
108 277 :M
-.032(function to Figure 6.)A
270 303 :M
f8_12 sf
-.248(alpha)A
-1 -1 250 293 1 1 249 292 @b
-1 -1 250 293 1 1 249 292 @b
250 293 -1 1 326 292 1 250 292 @a
-1 -1 327 293 1 1 326 292 @b
-1 -1 327 293 1 1 326 292 @b
-1 -1 250 305 1 1 249 293 @b
-1 -1 327 305 1 1 326 293 @b
267 315 :M
-.238(double)A
-1 -1 250 317 1 1 249 305 @b
-1 -1 327 317 1 1 326 305 @b
270 340 :M
-.248(-85.3)A
-1 -1 250 318 1 1 249 317 @b
250 318 -1 1 326 317 1 250 317 @a
-1 -1 327 318 1 1 326 317 @b
-1 -1 250 342 1 1 249 318 @b
-1 -1 327 342 1 1 326 318 @b
-1 -1 250 355 1 1 249 354 @b
-1 -1 250 355 1 1 249 354 @b
250 355 -1 1 326 354 1 250 354 @a
-1 -1 327 355 1 1 326 354 @b
-1 -1 327 355 1 1 326 354 @b
-1 -1 250 354 1 1 249 342 @b
-1 -1 327 354 1 1 326 342 @b
153 376 :M
f0_12 sf
-.126(Figure 7: Sample Parameter File Containing only a Global Parameter)A
195 402 :M
f8_12 sf
-.238(index1)A
267 402 :M
-.238(index2)A
356 402 :M
(q)S
-1 -1 178 392 1 1 177 391 @b
-1 -1 178 392 1 1 177 391 @b
178 392 -1 1 398 391 1 178 391 @a
-1 -1 399 392 1 1 398 391 @b
-1 -1 399 392 1 1 398 391 @b
-1 -1 178 404 1 1 177 392 @b
-1 -1 399 404 1 1 398 392 @b
-1 -1 253 404 1 1 252 391 @b
-1 -1 325 404 1 1 324 391 @b
195 414 :M
-.238(double)A
267 414 :M
-.238(double)A
339 414 :M
-.238(double)A
-1 -1 178 416 1 1 177 404 @b
-1 -1 399 416 1 1 398 404 @b
-1 -1 253 416 1 1 252 403 @b
-1 -1 325 416 1 1 324 403 @b
212 439 :M
(0)S
284 439 :M
(0)S
339 439 :M
-.238( 0.546)A
-1 -1 178 417 1 1 177 416 @b
178 417 -1 1 398 416 1 178 416 @a
-1 -1 399 417 1 1 398 416 @b
-1 -1 178 441 1 1 177 417 @b
-1 -1 399 441 1 1 398 417 @b
-1 -1 253 441 1 1 252 428 @b
-1 -1 325 441 1 1 324 428 @b
212 451 :M
(0)S
284 451 :M
(1)S
339 451 :M
-.238(-0.895)A
-1 -1 178 453 1 1 177 441 @b
-1 -1 399 453 1 1 398 441 @b
-1 -1 253 453 1 1 252 440 @b
-1 -1 325 453 1 1 324 440 @b
212 463 :M
(0)S
284 463 :M
(2)S
339 463 :M
-.238(-0.432)A
-1 -1 178 465 1 1 177 453 @b
-1 -1 399 465 1 1 398 453 @b
-1 -1 253 465 1 1 252 452 @b
-1 -1 325 465 1 1 324 452 @b
212 475 :M
(1)S
284 475 :M
(0)S
339 475 :M
-.238(-0.986)A
-1 -1 178 477 1 1 177 465 @b
-1 -1 399 477 1 1 398 465 @b
-1 -1 253 477 1 1 252 464 @b
-1 -1 325 477 1 1 324 464 @b
212 487 :M
(1)S
284 487 :M
(1)S
339 487 :M
-.238( 0.197)A
-1 -1 178 489 1 1 177 477 @b
-1 -1 399 489 1 1 398 477 @b
-1 -1 253 489 1 1 252 476 @b
-1 -1 325 489 1 1 324 476 @b
212 499 :M
(1)S
284 499 :M
(2)S
339 499 :M
-.238(-0.543)A
-1 -1 178 501 1 1 177 489 @b
-1 -1 399 501 1 1 398 489 @b
-1 -1 253 501 1 1 252 488 @b
-1 -1 325 501 1 1 324 488 @b
212 511 :M
(2)S
284 511 :M
(0)S
339 511 :M
-.238(-0.234)A
-1 -1 178 513 1 1 177 501 @b
-1 -1 399 513 1 1 398 501 @b
-1 -1 253 513 1 1 252 500 @b
-1 -1 325 513 1 1 324 500 @b
212 523 :M
(2)S
284 523 :M
(1)S
339 523 :M
-.238(-0.987)A
-1 -1 178 525 1 1 177 513 @b
-1 -1 399 525 1 1 398 513 @b
-1 -1 253 525 1 1 252 512 @b
-1 -1 325 525 1 1 324 512 @b
212 535 :M
(2)S
284 535 :M
(2)S
339 535 :M
-.238(-0.234)A
-1 -1 178 537 1 1 177 525 @b
-1 -1 399 537 1 1 398 525 @b
-1 -1 253 537 1 1 252 524 @b
-1 -1 325 537 1 1 324 524 @b
-1 -1 178 550 1 1 177 549 @b
-1 -1 178 550 1 1 177 549 @b
178 550 -1 1 398 549 1 178 549 @a
-1 -1 399 550 1 1 398 549 @b
-1 -1 399 550 1 1 398 549 @b
-1 -1 178 549 1 1 177 537 @b
-1 -1 399 549 1 1 398 537 @b
-1 -1 253 550 1 1 252 536 @b
-1 -1 325 550 1 1 324 536 @b
164 571 :M
f0_12 sf
-.132(Figure 8: Sample Parameter File with 2 Dimensional Parameters)A
108 596 :M
-.128(In the sample parameter file above, the column)A
f8_12 sf
-.188( q )A
f0_12 sf
-.132(is a two-dimensional plate)A
108 608 :M
-.105(parameter, and the program will index it through the numbers in the columns headed)A
108 621 :M
f8_12 sf
-.134(index1 )A
f0_12 sf
-.087( and )A
f8_12 sf
-.134(index2)A
f0_12 sf
-.088(. For example, if the program is using the parameter )A
f8_12 sf
-.16(q\(1,2\))A
108 633 :M
f0_12 sf
-.037(then the value of)A
f8_12 sf
-.056( )A
f0_12 sf
-.036( that would be used is )A
f4_12 sf
-.041(-0.543 .)A
108 657 :M
-.134(Please note that when using multiple parameter files, the indices must be in the same)A
108 669 :M
-.17(file as the parameter that they index.)A
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Malmaison; page: 17 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(17)S
90 93 :M
f2_12 sf
3(4.)A
126 93 :M
2.638 .264(The GaussFit Programming Language)J
90 117 :M
f0_12 sf
-.091(The GaussFit programming language is modelled loosely on the C programming language, and)A
90 129 :M
-.082(users of C should have no difficulty with it. This preliminary description of the language is)A
90 143 :M
-.106(abbreviated and assumes the user has some familiarity with C.)A
f0_10 sf
0 -3 rm
-.108(2)A
0 3 rm
f0_12 sf
-.102(  While the language itself is)A
90 155 :M
-.062(modeled after C, not all of the C constructs are included.  For example, GaussFit lacks some of)A
90 168 :M
-.024(the control structures of C. The)A
f8_12 sf
( )S
f9_12 sf
-.038(switch)A
f8_12 sf
( )S
f0_12 sf
-.027(statement of C has not been implemented.)A
90 180 :M
-.096(Parameters are always passed to functions by value.  Other departures from C include the lack)A
90 192 :M
-.065(of structures, pointers, standard variable types, and I/O handling. We have created instead new)A
90 204 :M
-.103(variable types and I/O functions to better accommodate GaussFit.  In the language is a set of)A
90 216 :M
-.082(control structures for describing single expression or algorithmic solutions to least squares)A
90 228 :M
-.134(problems.   The derivatives and algebraic manipulations are done automatically for the model)A
90 240 :M
-.1(and the equations of condition and constraints are sent to the user-selected solution algorithm.)A
90 264 :M
-.081(As with C, a program in GaussFit consists of a collection of functions which may call each)A
90 276 :M
-.079(other or other functions in the GaussFit library of built-in functions. The format of a function)A
90 288 :M
-.064(in GaussFit is similar to that of a C function.)A
90 312 :M
-.107(Since many examples will be given, and since there are no examples which cover all aspects of)A
90 324 :M
-.043(a problem, this document will use angle brackets, \324<\325 and \324>\325, to signify a generic expression.)A
90 337 :M
-.096(For example, )A
f8_12 sf
-.136( <statement>  )A
f0_12 sf
-.091(is understood to be any valid statement , including)A
90 350 :M
-.002(declarations, assignment statements, function calls, loops, )A
f9_12 sf
(if\(\) )S
f0_12 sf
-.003(statements, and compound)A
90 362 :M
-.067(statements \(i.e. those enclosed in curly braces\).   Expressions are defined to be statements)A
90 375 :M
.498 .05(using any of the arithmetic, logical or relational operators \()J
f9_12 sf
.193(+)A
f0_12 sf
.134 .013(, )J
f8_12 sf
.193(-)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(*)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(/)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(^)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(&&)A
f0_12 sf
.08(,)A
f9_12 sf
.193(||)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(!)A
f0_12 sf
.105 .01(,  )J
f9_12 sf
.193(<)A
f0_12 sf
.134 .013(, )J
f9_12 sf
.193(>)A
f0_12 sf
(,)S
90 388 :M
f9_12 sf
.055(<=)A
f0_12 sf
(, )S
f9_12 sf
.055(>=)A
f0_12 sf
(, )S
f9_12 sf
.055(==)A
f0_12 sf
.058 .006(, or )J
f9_12 sf
.055(!=)A
f0_12 sf
.191 .019(\). Similarly,)J
f8_12 sf
.288 .029(<file name>)J
f0_12 sf
.111 .011( is meant to be a generic file name.)J
90 413 :M
-.056(Comments for the examples are delimited by the GaussFit comment characters  \324)A
f9_12 sf
-.08(/*)A
f0_12 sf
-.055(\325 ...body)A
90 426 :M
-.032(of comment... \324)A
f9_12 sf
-.047(*/)A
f0_12 sf
-.032(\325.  Simple expressions  such as assignment statements must terminate with a)A
90 439 :M
-.086(semicolon. In the examples,)A
f8_12 sf
-.124( <statement> )A
f0_12 sf
-.085(may refer to any valid expression and so a)A
90 452 :M
-.108(semicolon is not used.  If in the context of a real model)A
f8_12 sf
-.168( <statement> )A
f0_12 sf
-.111(is meant to refer to)A
90 465 :M
-.123(something like \324)A
f8_12 sf
-.181(i\312=\3120;)A
f0_12 sf
-.123(\325 a semicolon must be written since the semicolon constitutes a token)A
90 477 :M
-.077(in the statement.  When a semicolon, parentheses, or braces are used in an example,t they must)A
90 489 :M
(be present.)S
90 513 :M
-.072(In general, bold-faced text is  used to signify a keyword or literal string in the program.)A
90 525 :M
-.05(Normal text is used for example purposes only.)A
108 549 :M
f2_12 sf
2(4.1)A
162 549 :M
2.139 .214(Data Types and Variable Declarations)J
108 573 :M
f0_12 sf
-.105(Although there are a number of data \322types\323 in GaussFit, they really refer to the same kind)A
108 585 :M
-.108(of data. The different data \322types\323 are distinguished by their different functions in the)A
108 597 :M
-.095(program. Some data types refer to observed data points; others to parameters; and still)A
108 609 :M
-.089(others to variables defined by the user to hold intermediate values. In actual fact, GaussFit)A
108 621 :M
-.137(is a typeless language in that all of these data types are represented internally by an identical)A
108 633 :M
-.087(data structure. Each is an object consisting of a )A
f4_12 sf
-.099(value)A
f0_12 sf
-.084(, which is a )A
f4_12 sf
-.099( double precision)A
108 645 :M
f0_12 sf
-.158(number, together with the )A
f4_12 sf
-.151(partial derivatives)A
f0_12 sf
-.152( of the particular datum with respect to all)A
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 676.24 -.24 .24 233.24 676 .24 90 676 @a
90 702 :M
f0_10 sf
(2)S
108 705 :M
f0_12 sf
-.062(See, for example, the Tutorial Introduction to  Kernighan and Ritchie\325s book, )A
f4_12 sf
-.094(The C)A
108 717 :M
-.166(Programming Language.)A
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(Malmaison; page: 18 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(18)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 83 :M
-.08(relevant parameters.)A
f0_10 sf
0 -3 rm
-.083(3)A
0 3 rm
f0_12 sf
-.08( For most practical purposes the user should think of them as)A
90 95 :M
-.096(representing a real number and not worry about the derivatives, which will take)A
90 107 :M
-.143(automatically care of themselves.)A
90 131 :M
-.124(All variables of whatever type are introduced to the program by an appropriate declaration.)A
90 143 :M
-.105(A variable cannot be used unless it has been declared.    In a standard model file)A
90 155 :M
-.136(declarations for variables may occur anywhere in a model file between actual function)A
90 167 :M
-.095(definitions and in include files.  In this case, all variables declared outside of a  function)A
90 179 :M
-.095(definition will be global.  There are no scope rules with regard to the order in which the)A
90 191 :M
-.123(variables are declared and then used save for the fact that a variable must be declared.   The)A
90 203 :M
-.123(abstract computer \(i.e. the interpreter\) is instructed to search the intermediate code for all)A
90 215 :M
-.116(global declarations before executing the program.)A
90 239 :M
-.124(A single file model may be written as follows:)A
108 264 :M
f9_12 sf
.068(variable)A
f8_12 sf
.212 .021( a, b, pi = 3.1415927;)J
108 276 :M
f9_12 sf
.552(parameter)A
f8_12 sf
1.379 .138( i;)J
108 288 :M
f9_12 sf
.449(observation)A
f8_12 sf
1.077 .108( x, y;)J
108 300 :M
f9_12 sf
.468(main)A
f8_12 sf
.937(\(\))A
108 312 :M
({)S
180 324 :M
-.205(/* Code for the main routine */)A
108 336 :M
(})S
108 360 :M
f9_12 sf
.098(variable)A
f8_12 sf
.388 .039( two_pi = 6.283185;)J
108 372 :M
-.227(subr_1\(\))A
108 384 :M
({)S
180 396 :M
-.204(/* Code for the subr_1 routine */)A
108 408 :M
(})S
90 431 :M
f0_12 sf
-.127(In this case the variable two_pi is declared globally as if it were declared at the top of the)A
90 444 :M
-.101(file and may be used by the )A
f8_12 sf
-.15(main\(\) )A
f0_12 sf
-.104(routine if needed.)A
108 468 :M
f2_12 sf
1.75(4.1.1)A
144 468 :M
.46(Variables)A
108 492 :M
f0_12 sf
-.211(The declaration)A
126 517 :M
f9_12 sf
.272(variable)A
f8_12 sf
.645 .065( r, s, t;)J
108 540 :M
f0_12 sf
-.114(declares a list of variables that can be used by the declaring function. These play the)A
108 552 :M
-.095(role of ordinary variables in the familiar programming languages like FORTRAN, C, or)A
108 564 :M
-.099(Pascal. As with all variables in GaussFit, the variables declared in this statement are)A
108 576 :M
-.101(typed real, but they may also carry derivative information.)A
108 600 :M
-.132(A variable may be given a preset value in the declaration by writing an equals sign)A
108 612 :M
.254 .025(followed by its value, e.g.,)J
126 637 :M
f9_12 sf
.109(variable)A
f8_12 sf
.419 .042( pi = 3.141592654;)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
72 664.24 -.24 .24 215.24 664 .24 72 664 @a
72 690 :M
f0_10 sf
(3)S
90 693 :M
f0_12 sf
-.094(Such an object is an element of the cotangent bundle of a manifold. GaussFit does all of its)A
90 705 :M
-.14(calculations in the cotangent bundle that is appropriate to the particular least squares)A
90 717 :M
-.049(problem being solved.)A
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(Malmaison; page: 19 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(19)S
144 81 :M
f2_12 sf
1.667(4.1.1.1)A
198 81 :M
.404(Arrays)A
144 106 :M
f0_12 sf
-.019(Multiply-dimensioned arrays of type )A
f9_12 sf
-.027(variable)A
f0_12 sf
-.017( are permitted. If a variable is)A
144 119 :M
-.013(declared in a )A
f9_12 sf
-.021(variable)A
f0_12 sf
-.014( statement, it may have up to four dimensions specified)A
144 131 :M
-.08(by enclosing the size of the array in square brackets following its name. Thus one)A
144 143 :M
-.164(may write)A
162 168 :M
f9_12 sf
-.028(variable)A
f8_12 sf
-.029( u, v[5], w[2,3], x[3,4,6], z[2,3,3,4];)A
144 192 :M
f0_12 sf
-.13(to declare an array with five elements named)A
f8_12 sf
-.192( v)A
f0_12 sf
-.13(, a variable named)A
f8_12 sf
-.192( u,)A
f0_12 sf
-.156( a two)A
144 205 :M
-.103(dimensional array named )A
f8_12 sf
-.143(v)A
f0_12 sf
-.06(,)A
f8_12 sf
-.143( )A
f0_12 sf
-.099(a three dimensional array named )A
f8_12 sf
-.143(x)A
f0_12 sf
-.06(,)A
f8_12 sf
-.143( )A
f0_12 sf
-.107(and a four)A
144 218 :M
-.089(dimensional array named )A
f8_12 sf
-.124(z)A
f0_12 sf
-.052(.)A
f8_12 sf
-.124( )A
f0_12 sf
-.08( As in C, the first element of the array has the index 0.)A
144 231 :M
-.087(Thus, the above declaration reserves space for)A
f8_12 sf
-.13( v[0], v[1], v[2])A
f0_12 sf
-.054(,)A
f8_12 sf
-.162( v[3])A
144 244 :M
f0_12 sf
-.156(and)A
f8_12 sf
-.194( v[4])A
f0_12 sf
-.12(; and )A
f8_12 sf
-.199(w[0,0], w[0,1],w[0,2], w[1,0],w[1,1],w[1,2],)A
144 256 :M
f0_12 sf
(etc.)S
144 280 :M
-.088(Arrays with more than four dimensions are not permitted in the present version.)A
126 304 :M
f2_12 sf
1.75(4.1.2)A
162 304 :M
.546(Observations)A
126 328 :M
f0_12 sf
-.076(Any reduction using GaussFit will involve )A
f4_12 sf
-.078(observations)A
f0_12 sf
-.07(, that is, quantities which are)A
126 340 :M
-.062(not known perfectly because they are observed and subject to random errors. GaussFit)A
126 352 :M
-.131(keeps such quantities in )A
f4_12 sf
-.124(data files)A
f0_12 sf
-.135(, which are listed in the environment file maintained)A
126 364 :M
-.022(by the program.)A
126 388 :M
-.095(The observations in the data files may have any names \(except for GaussFit reserved)A
126 400 :M
-.114(words\). They are made available to the program by declaring them in an)A
126 413 :M
f9_12 sf
.062(observation)A
f8_12 sf
.057 .006( )J
f0_12 sf
.151 .015(declaration. Thus, if we were fitting a straight line to some data,)J
126 425 :M
-.093(and the )A
f4_12 sf
-.104(y)A
f8_12 sf
-.14( )A
f0_12 sf
-.095(coordinate were subject to error, we would need to include a declaration of)A
126 437 :M
-.14(the form)A
144 462 :M
f9_12 sf
.587(observation)A
f8_12 sf
1.469 .147( y;)J
126 485 :M
f0_12 sf
(in our program.)S
126 509 :M
-.114(One of the convenient features of GaussFit is that one can correctly handle the case of)A
126 521 :M
-.122(more than one observation per equation of condition simply by declaring all the)A
126 534 :M
.275 .027(observations in an)J
f8_12 sf
.078 .008( )J
f9_12 sf
.086(observation)A
f8_12 sf
.078 .008( )J
f0_12 sf
.264 .026(statement and then using them. GaussFit)J
126 546 :M
-.112(automatically sets up the appropriate least squares problem. This is important because)A
126 558 :M
-.108(as Lybanon [Ly84] has documented, there is much misinformation in the literature)A
126 570 :M
-.069(about how this kind of problem is should be treated, and the best procedure is not)A
126 582 :M
.309 .031(widely known.)J
126 606 :M
f2_12 sf
1.75(4.1.3)A
162 606 :M
.301(Parameters)A
126 630 :M
f0_12 sf
-.103(A model usually depends on several )A
f4_12 sf
-.112(parameters)A
f0_12 sf
-.1(, whose values are to be estimated. For)A
126 642 :M
-.123(example, in the simple case of fitting a straight line to data, the parameters are the slope)A
126 654 :M
-.124(and intercept of the line. In other cases the parameters may include physical parameters)A
126 666 :M
-.098(as well as \322nuisance parameters\323 whose values are of no intrinsic interest but which)A
126 678 :M
-.102(must be included in the model.)A
126 702 :M
-.118(All parameters have an initial value, which must be supplied by the user in the)A
126 714 :M
-.088(corresponding parameter file \(see below\). If no initial value is given, it will be assumed)A
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(Malmaison; page: 20 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(20)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
-.126(to be zero. After each iteration of the reduction algorithm, the values of all parameters)A
108 93 :M
-.102(are updated to reflect the improved solution. Thus at any point in the reduction, the)A
108 105 :M
-.11(values of the parameters will represent the best values known to the program at that)A
108 117 :M
-.055(moment.)A
126 141 :M
f2_12 sf
1.667(4.1.3.1)A
180 141 :M
2.707 .271(Global Parameters)J
126 166 :M
f0_12 sf
.014 .001(GaussFit contains a special statement, the)J
f8_12 sf
( )S
f9_12 sf
(parameter)S
f8_12 sf
( )S
f0_12 sf
.013 .001(statement, to notify the)J
126 178 :M
-.12(compiler that parameters are being declared. Some parameters, which we will call)A
126 190 :M
f4_12 sf
-.135(global parameters,)A
f0_12 sf
-.127( can appear in any equation of condition. If we were fitting a)A
126 202 :M
-.079(straight line )A
f4_12 sf
-.099(y)A
f0_12 sf
-.079( = )A
f4_12 sf
-.111(a)A
f0_12 sf
-.079( + )A
f4_12 sf
-.105(bx)A
f0_12 sf
-.087( to some data, for example, the intercept )A
f4_12 sf
-.111(a)A
f0_12 sf
-.087( and slope )A
f4_12 sf
-.111(b)A
f0_12 sf
-.095( of the)A
126 214 :M
-.125(line are global parameters. We would declare them with the statement.)A
144 239 :M
f9_12 sf
.402(parameter)A
f8_12 sf
.964 .096( a, b;)J
126 262 :M
f0_12 sf
-.09(The current values of global parameters are kept in the parameter file \(see \2443.2.2\).)A
126 286 :M
f2_12 sf
1.667(4.1.3.2)A
180 286 :M
2.733 .273(Indexed Parameters)J
126 310 :M
f0_12 sf
-.081(GaussFit allows parameters to be subscripted, corresponding to the fact that data)A
126 322 :M
-.087(may be broken into groups of related data. For example, there may be some global)A
126 334 :M
-.11(parameters common to all data sets, and other parameters which vary from data set)A
126 346 :M
-.104(to data set. A typical example in astronomy would be measurements of position on)A
126 358 :M
-.113(a photographic plate. Each photographic plate has a corresponding set of )A
f4_12 sf
-.141(plate)A
126 370 :M
-.136(constants)A
f0_12 sf
-.13( that are used to transform the measurements on the plate into a coordinate)A
126 382 :M
-.083(system common to all plates. In geodesy, to give another example, parameters)A
126 394 :M
-.095(which vary from set to set might be the station coordinates.  Parameters may also be)A
126 406 :M
-.111(indexed to themselves and not linked to the data set, such as a multi-dimensional)A
126 418 :M
-.095(parameter set describing quaternion rotations or surface-fitting splines.)A
126 443 :M
.011 .001(Indexed parameters, like global parameters, are declared in a)J
f8_12 sf
( )S
f9_12 sf
(parameter)S
126 455 :M
f0_12 sf
-.079(statement. Parameters may have up  to four dimensions.  The index column is)A
126 467 :M
-.109(specified by putting its name in square brackets after the name of the parameter. For)A
126 479 :M
-.157(example, the statement)A
144 504 :M
f9_12 sf
-.011(parameter)A
f8_12 sf
-.011( alpha[star], beta[star], gamma[q1,q2];)A
126 528 :M
f0_12 sf
-.129(declares that)A
f8_12 sf
-.2( alpha )A
f0_12 sf
-.161(and)A
f8_12 sf
-.2( beta )A
f0_12 sf
-.146(are indexed parameters with index column)A
126 541 :M
f8_12 sf
-.155(star)A
f4_12 sf
-.065(,)A
f0_12 sf
-.11( and)A
f8_12 sf
-.155( gamma )A
f0_12 sf
-.109(is a 2-dimensional indexed parameter with index columns)A
f8_12 sf
-.233( q1)A
126 554 :M
f0_12 sf
-.128(and)A
f8_12 sf
-.16( q2)A
f4_12 sf
-.067(.  )A
f0_12 sf
-.107(The  index column must be present in the parameter file, but it can be)A
126 566 :M
-.133(either linked \(by index\) to the data or indexed in the parameter file only as an)A
126 578 :M
-.124(independent parameter.)A
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(Malmaison; page: 21 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(21)S
144 81 :M
-.108(Parameters can  be used explicitly, and this will probably be the default condition of)A
144 93 :M
-.107(GaussFit in future releases.  The declaration in the model must contain the  indices)A
144 105 :M
-.107(name, but in the body of the model  the indices can be provided by the index name)A
144 117 :M
-.154(or an integer value or a declared variable \(the declared variable will be truncated to)A
144 129 :M
-.121(produce the index\) :)A
162 154 :M
f9_12 sf
.021(parameter)A
f8_12 sf
.112 .011( xi[pos], eta[pos], quat[q1,q2];)J
162 166 :M
f9_12 sf
.417(variable)A
f8_12 sf
1.49 .149( cnt;)J
162 178 :M
-.204(x = xi[pos] + eta[2] + quat[q1,4];)A
162 190 :M
-.207(x2 = xi[cnt] + eta[cnt];)A
144 225 :M
f0_12 sf
-.108(Every dimension  in the declaration of the parameter, if addressed explicitly, must)A
144 237 :M
-.142(be addressed completely    Explicit and implicit use of parameters cannot be mixed)A
144 249 :M
-.075(for one parameter.)A
162 274 :M
f9_12 sf
.162(parameter)A
f8_12 sf
1.035 .104( bspline[x,y,z];)J
144 297 :M
f0_12 sf
-.114(For the above declaration of bspline, this is an implicit use of the parameter:)A
162 322 :M
f8_12 sf
-.21(loc = a * bspline;)A
144 345 :M
f0_12 sf
-.142(These are explicit uses:)A
162 370 :M
f8_12 sf
-.207(loc = a * bspline[1,2,3];)A
162 382 :M
-.207(loc = a * bspline[x,y,z];)A
144 405 :M
f0_12 sf
-.123(This is an incorrect use \(incomplete declaration of dimensions \):)A
162 430 :M
f8_12 sf
-.207(loc = a * bspline[1,2];)A
144 453 :M
f0_12 sf
-.093(The index of an indexed parameter can be suppressed when it is used. This implicit)A
144 465 :M
-.113(use of the parameter can apply to multiply-dimensioned arrays, but only if all levels)A
144 477 :M
-.12(of the dimension indices are included  in both the data files and the parameter files.)A
144 489 :M
-.098(The actual index can then be supplied when the corresponding data set is read in.)A
144 501 :M
-.072(Thus we could write)A
162 526 :M
f8_12 sf
-.205(u = alpha*x + beta*y + gamma;)A
144 549 :M
f0_12 sf
-.163(rather than)A
162 574 :M
f8_12 sf
-.202(u = alpha[star]*x + beta[star]*y + gamma[q1,q2];)A
144 598 :M
f0_12 sf
-.099(GaussFit knows from the active data line what the current values of)A
f8_12 sf
-.168( star,q1)A
144 611 :M
f0_12 sf
-.092(and)A
f8_12 sf
-.115( q2 )A
f0_12 sf
-.075(are, and fetches the appropriate values of)A
f8_12 sf
-.115( alpha)A
f4_12 sf
(,)S
f8_12 sf
-.115( beta )A
f0_12 sf
-.092(and)A
f8_12 sf
-.115( gamma)A
f4_12 sf
(.)S
f0_9 sf
0 -3 rm
(4)S
0 3 rm
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 640.24 -.24 .24 233.24 640 .24 90 640 @a
90 665 :M
(4)S
108 668 :M
f0_12 sf
-.067(However, the index may be supplied explicitly by the user if desired. This is most useful)A
108 680 :M
-.104(when calculating constraints connecting global parameters. If an index is supplied by the)A
108 692 :M
-.075(user, it overrides the value of the index obtained from the data file. Thus, if we write)A
108 705 :M
f8_12 sf
-.16(alpha[5])A
f0_12 sf
-.1(, and the value of )A
f8_12 sf
-.16(star)A
f0_12 sf
-.099( found in the data file for the current data line is 3, the)A
108 717 :M
-.1(index 5 will be used instead of 3 when looking up the value in the parameter table.)A
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(Malmaison; page: 22 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(22)S
388 57 :M
-.03(GaussFit User\325s Manual)A
126 81 :M
f4_12 sf
-.172(If more than one indexing parameter appears in a problem, it is a good idea to put)A
126 93 :M
-.104(the most rapidly varying one first in the declarations. This will improve the)A
126 105 :M
-.151(efficiency of triangularization. For example, if each plate had many stars, and each)A
126 117 :M
-.178(plate appeared in its own file, then the star index parameter varies most rapidly and)A
126 129 :M
-.13(those variables depending on it should be declared first.)A
108 177 :M
f2_12 sf
1.75(4.1.4)A
144 177 :M
.115(Data)A
108 201 :M
f0_12 sf
-.128(Frequently it is necessary to do a calculation in which certain data to be read from the)A
108 213 :M
-.097(data file are known with such high accuracy that they can be considered error-free. This)A
108 225 :M
-.089(is the most common case, for example, when fitting a straight line to data. We usually)A
108 237 :M
-.076(assume that the )A
f4_12 sf
-.085(y)A
f0_12 sf
-.072( coordinate has all the error, while the )A
f4_12 sf
-.085(x)A
f0_12 sf
-.075( coordinate is error-free. To)A
108 250 :M
-.04(declare error-free data, we use the)A
f8_12 sf
-.062( )A
f9_12 sf
-.062(data)A
f8_12 sf
-.062( )A
f0_12 sf
-.039(declaration. For example, in fitting )A
f4_12 sf
(y)S
f0_12 sf
-.036( = )A
f4_12 sf
-.051(a)A
f0_12 sf
-.084( +)A
108 262 :M
f4_12 sf
-.048(bx)A
f0_12 sf
-.04(, where )A
f4_12 sf
(x)S
f0_12 sf
-.04( is error-free, we will need the declaration)A
126 287 :M
f9_12 sf
.373(data)A
f8_12 sf
.933 .093( x;)J
108 311 :M
f0_12 sf
-.113(This will cause the value of)A
f8_12 sf
-.172( x )A
f0_12 sf
-.112(to be read from the data file as a real number, free of)A
108 323 :M
-.072(error. \(GaussFit accomplishes this by suppressing the derivative information associated)A
108 336 :M
.035(with)A
f8_12 sf
.078 .008( x)J
f0_12 sf
(.\))S
108 360 :M
-.077(To handle the more general case where )A
f4_12 sf
-.082(both)A
f0_12 sf
( )S
f4_12 sf
-.082(x)A
f0_12 sf
-.071( and )A
f4_12 sf
-.082(y)A
f0_12 sf
-.07( are in error, it is necessary and)A
108 373 :M
.105 .011(sufficient to declare )J
f4_12 sf
.03(both)A
f0_12 sf
.088 .009( variables in an)J
f8_12 sf
( )S
f9_12 sf
.04(observation)A
f8_12 sf
( )S
f0_12 sf
.03(statement.)A
108 397 :M
f2_12 sf
1.75(4.1.5)A
144 397 :M
.584(Constants)A
108 421 :M
f0_12 sf
-.085(There may be occasions when we need the value of a parameter but wish to suppress)A
108 433 :M
-.118(the partial derivative information. An example of this is when the model uses a)A
108 445 :M
-.103(parameter required by the model)A
f2_12 sf
-.061( )A
f0_12 sf
-.097(that is found in the parameter file, but we do not want)A
108 457 :M
-.102(to solve for its value. To read a parameter from the parameter file and suppress the)A
108 470 :M
-.015(derivative information, we use the)A
f8_12 sf
( )S
f9_12 sf
-.022(constant)A
f8_12 sf
( )S
f0_12 sf
-.016(declaration. A constant may be)A
108 482 :M
-.092(subscripted and contain up to four indices, just like a parameter. The only difference)A
108 494 :M
-.136(between a constant and a parameter is the fact that no derivatives are calculated, so that)A
108 506 :M
-.115(the equations of condition do not depend differentially on the particular quantity, and)A
108 518 :M
-.108(therefore the value of the constant will not be solved for and will not change from)A
108 530 :M
-.15(iteration to iteration.)A
126 555 :M
f9_12 sf
.03(constant)A
f8_12 sf
.178 .018( rho, gamma[index1,index2];)J
108 579 :M
f0_12 sf
-.006(Constant values may be declared only for the )A
f9_12 sf
-.009(variable)A
f0_12 sf
-.006( data type.  This may be)A
108 591 :M
-.128(done either within a function as a simple assignment statement or in the declaration for)A
108 603 :M
-.039(the variable as in \(e.g.\))A
126 628 :M
f9_12 sf
.109(variable)A
f8_12 sf
.419 .042( pi = 3.141592654;)J
108 651 :M
f0_12 sf
-.061(Unary plus and minus signs are supported for constant declarations regardless of where)A
108 663 :M
-.114(they are declared.)A
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(Malmaison; page: 23 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(23)S
126 81 :M
f2_12 sf
2(4.2)A
162 81 :M
2.695 .27(General Syntactic Rules for Statements)J
126 105 :M
f0_12 sf
-.116(Statements are defined as allowable syntax structures which are neither declarations nor)A
126 117 :M
-.093(function definitions.  These include things as simple as assignment statements and any)A
126 130 :M
1.027 .103(of the allowable control structures \(e.g. )J
f9_12 sf
.394(while\(\))A
f0_12 sf
.164(,)A
f9_12 sf
1.314 .131( if\(\))J
f0_12 sf
.164(,)A
f9_12 sf
1.314 .131( do\(\))J
f0_12 sf
.164(,)A
f9_12 sf
1.478 .148( for\(\))J
f0_12 sf
(,)S
126 142 :M
.204(etc.\).)A
126 166 :M
-.107(Statements may be nested so that, for instance, a simple or complex statement may be)A
126 178 :M
-.072(contained within an if-else expression or in the body of a loop.)A
126 202 :M
-.091(A \324block\325 is said to be a set of statements contained within a pair of braces.  This is)A
126 214 :M
-.057(most often seen in the body of a loop or in an if-else expression, such as:)A
144 239 :M
f9_12 sf
-.118(if)A
f8_12 sf
-.124(\( <logical expression>\))A
144 251 :M
({)S
198 251 :M
-.207(/* beginning of block */)A
162 263 :M
-.215(<statement_1>)A
162 275 :M
-.215(<statement_2>)A
162 287 :M
-.215(<statement_3>)A
144 299 :M
-.209(}/* end of block */)A
126 322 :M
f0_12 sf
-.055(However, although less commonly used, a block may be used in the body of a function)A
126 334 :M
-.095(\(which is also a \324block\325\) to separate code as in:)A
144 359 :M
f8_12 sf
-.227(userfn\(\))A
144 371 :M
-.204({/* beginning of function block*/)A
162 383 :M
-.215(<statement_1>)A
162 395 :M
-.204({/* beginning of statement block */)A
198 407 :M
-.215(<statement_2>)A
198 419 :M
-.215(<statement_3>)A
162 431 :M
-.205(}/* end of statement block */)A
144 443 :M
-.206(}/* end of function block */)A
126 466 :M
f0_12 sf
-.123(Statement blocks may not contain their own variable declarations.)A
108 490 :M
f2_12 sf
2(4.3)A
162 490 :M
3.793 .379(Assignment Statements)J
108 514 :M
f0_12 sf
-.129(The form of an assignment statement is similar to that in C:)A
126 539 :M
f8_12 sf
-.206(<variable> = <expression>;)A
108 563 :M
f0_12 sf
-.015(where)A
f8_12 sf
-.018( <variable> )A
f0_12 sf
-.012(has been declared in a)A
f8_12 sf
( )S
f9_12 sf
-.018(variable)A
f8_12 sf
( )S
f0_12 sf
-.013(statement, and)A
108 576 :M
f8_12 sf
-.187(<expression> )A
f0_12 sf
-.124(is an arithmetic expression involving the usual arithmetic operators as)A
108 588 :M
-.063(well as possible function calls.)A
126 612 :M
f2_12 sf
1.75(4.3.1)A
162 612 :M
2.205 .221(Arithmetic Operators)J
126 637 :M
f0_12 sf
-.056(GaussFit supports the usual arithmetic operators)A
f8_12 sf
-.084( +)A
f0_12 sf
(,)S
f8_12 sf
-.084( -)A
f0_12 sf
(,)S
f8_12 sf
-.084( * )A
f0_12 sf
-.068(and)A
f8_12 sf
-.084( / )A
f0_12 sf
-.056(to signify addition,)A
126 650 :M
-.096(subtraction, multiplication and division, as well as an exponentiation operator)A
f8_12 sf
-.147( ^ )A
f0_12 sf
-.149(used)A
126 662 :M
-.103(to raise an expression to an )A
f4_12 sf
-.108(integer)A
f0_12 sf
-.109(  power. The result of applying an arithmetic)A
126 674 :M
-.09(operator to two operands is an expression involving both the value of the result and all)A
126 686 :M
-.076(the partial derivatives of the result.  Parentheses may be used to group expressions to)A
126 698 :M
-.106(force a desired order of evaluation that may differ from the standard precedence rules.)A
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(Malmaison; page: 24 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(24)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
-.105(The precedence for the arithmetic operators is the same as in FORTRAN.  Namely,)A
108 94 :M
-.059(exponentiation \()A
f9_12 sf
-.086(^)A
f0_12 sf
-.052(\) first, multiplication\()A
f9_12 sf
-.086(*)A
f0_12 sf
-.055(\) and division \()A
f9_12 sf
-.086(/)A
f0_12 sf
-.053(\) next, and lastly addition \()A
f9_12 sf
-.086(+)A
f0_12 sf
(\))S
108 107 :M
-.076(and subtraction \()A
f9_12 sf
-.115(-)A
f0_12 sf
-.077(\) evaluated from left to right.  Grouping by parentheses will override)A
108 119 :M
-.099(this order as the enclosed expressions will be evaluated first and the result will then)A
108 131 :M
-.014(used in the expression.)A
108 155 :M
f2_12 sf
1.75(4.3.2)A
144 155 :M
2.134 .213(Logical  and Relational Operators)J
108 180 :M
f0_12 sf
-.065(GaussFit supports the logical operators that appear in C conditional statements, \324)A
f9_12 sf
-.099(&&)A
f0_12 sf
(\325)S
108 193 :M
-.059(for logical )A
f4_12 sf
-.08(and)A
f0_12 sf
-.045(, \324)A
f9_12 sf
-.096(||)A
f0_12 sf
-.057(\325 for logical )A
f4_12 sf
-.071(or)A
f0_12 sf
-.058(, and \324)A
f9_12 sf
-.096(!)A
f0_12 sf
-.057(\325 for logical )A
f4_12 sf
-.061(not.)A
f0_12 sf
-.063(  Evaluation is from left to)A
108 205 :M
-.072(right unless expressions are grouped by parentheses in which case the enclosed)A
108 217 :M
-.074(expression is evaluated first and the result used for further evaluation.  By definition,)A
108 230 :M
f9_12 sf
(false)S
f8_12 sf
( )S
f0_12 sf
(is zero and)S
f8_12 sf
( )S
f9_12 sf
(true)S
f8_12 sf
( )S
f0_12 sf
.005 .001(is anything different from zero. If a logical operator or a)J
108 243 :M
-.061(built-in function returns the value)A
f8_12 sf
-.095( )A
f9_12 sf
-.095(true)A
f0_12 sf
-.062(, it will be normalized to the standard value 1.)A
108 267 :M
-.087(Relational operators also follow C syntax and are as follows:)A
-1 -1 142 283 1 1 141 282 @b
-1 -1 142 283 1 1 141 282 @b
142 283 -1 1 416 282 1 142 282 @a
-1 -1 417 283 1 1 416 282 @b
-1 -1 417 283 1 1 416 282 @b
-1 -1 142 293 1 1 141 283 @b
-1 -1 417 293 1 1 416 283 @b
352 302 :M
f2_12 sf
.226(Fortran)A
-1 -1 142 305 1 1 141 293 @b
-1 -1 417 305 1 1 416 293 @b
154 314 :M
.715(GaussFit)A
344 314 :M
.519(equivalent)A
-1 -1 142 317 1 1 141 305 @b
-1 -1 417 317 1 1 416 305 @b
-1 -1 142 318 1 1 141 317 @b
142 318 -1 1 416 317 1 142 317 @a
-1 -1 417 318 1 1 416 317 @b
-1 -1 142 340 1 1 141 318 @b
-1 -1 417 340 1 1 416 318 @b
171 350 :M
f8_12 sf
(<)S
234 350 :M
f0_12 sf
-.082(less than)A
360 350 :M
f8_12 sf
-.264(.lt.)A
-1 -1 142 353 1 1 141 340 @b
-1 -1 417 353 1 1 416 340 @b
171 363 :M
(>)S
234 363 :M
f0_12 sf
-.178(greater than)A
360 363 :M
f8_12 sf
-.264(.gt.)A
-1 -1 142 366 1 1 141 353 @b
-1 -1 417 366 1 1 416 353 @b
171 376 :M
-.397(==)A
234 376 :M
f0_12 sf
-.247(equal)A
360 376 :M
f8_12 sf
-.264(.eq.)A
-1 -1 142 379 1 1 141 366 @b
-1 -1 417 379 1 1 416 366 @b
171 389 :M
-.397(!=)A
234 389 :M
f0_12 sf
-.165(not equal)A
360 389 :M
f8_12 sf
-.264(.ne.)A
-1 -1 142 392 1 1 141 379 @b
-1 -1 417 392 1 1 416 379 @b
171 402 :M
-.397(<=)A
234 402 :M
f0_12 sf
-.096(less than or equal)A
360 402 :M
f8_12 sf
-.264(.le.)A
-1 -1 142 405 1 1 141 392 @b
-1 -1 417 405 1 1 416 392 @b
171 415 :M
-.397(>=)A
234 415 :M
f0_12 sf
-.147(greater than or equal)A
360 415 :M
f8_12 sf
-.264(.ge.)A
-1 -1 142 418 1 1 141 405 @b
-1 -1 417 418 1 1 416 405 @b
171 428 :M
-.397(&&)A
234 428 :M
f0_12 sf
-.198(logical and)A
360 428 :M
f8_12 sf
-.248(.and.)A
-1 -1 142 431 1 1 141 418 @b
-1 -1 417 431 1 1 416 418 @b
171 441 :M
-.397(||)A
234 441 :M
f0_12 sf
-.183(logical or)A
360 441 :M
f8_12 sf
-.264(.or.)A
-1 -1 142 444 1 1 141 431 @b
-1 -1 417 444 1 1 416 431 @b
171 454 :M
(!)S
234 454 :M
f0_12 sf
-.199(logical not)A
360 454 :M
f8_12 sf
-.248(.not.)A
-1 -1 142 457 1 1 141 444 @b
-1 -1 417 457 1 1 416 444 @b
-1 -1 142 470 1 1 141 469 @b
-1 -1 142 470 1 1 141 469 @b
142 470 -1 1 416 469 1 142 469 @a
-1 -1 417 470 1 1 416 469 @b
-1 -1 417 470 1 1 416 469 @b
-1 -1 142 469 1 1 141 457 @b
-1 -1 417 469 1 1 416 457 @b
108 515 :M
f0_12 sf
-.144(There is no theoretical limit to the complexity of the expressions that may be created but)A
108 527 :M
-.111(it is wise to follow the standard precaution of making the statement readable.)A
90 551 :M
f2_12 sf
2(4.4)A
144 551 :M
3.45 .345(Conditional Statements)J
90 575 :M
f0_12 sf
-.11(A logical expression is one in which any of the logical or  relational operators  are used to)A
90 587 :M
-.076(evaluate a logical expression \(i.e. an expression in which the result is either true or false\).)A
90 599 :M
-.096(The form of a logical test in GaussFit is the same as in C:)A
108 624 :M
f9_12 sf
-.118(if)A
f8_12 sf
-.124( \(<logical expression>\))A
126 636 :M
-.218(<statement>)A
90 660 :M
f0_12 sf
-.127(where)A
f8_12 sf
-.156( <statement> )A
f0_12 sf
-.107(can be a simple expression terminated by a semicolon, or a)A
90 672 :M
-.04(compound expression enclosed in braces. GaussFit also supports logical tests of the form.)A
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(Malmaison; page: 25 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(25)S
126 82 :M
f9_12 sf
-.118(if)A
f8_12 sf
-.124( \(<logical expression>\))A
162 94 :M
-.215(<statement_1>)A
126 106 :M
f9_12 sf
.024(else)A
f8_12 sf
.146 .015( <statement_2>)J
108 130 :M
f0_12 sf
-.077(As in other languages, if the logical expression should prove true, )A
f8_12 sf
-.118(<statement_1> )A
f0_12 sf
-.131(is)A
108 143 :M
-.103(evaluated, otherwise)A
f8_12 sf
-.15( <statement_2> )A
f0_12 sf
-.104(is evaluated.)A
108 168 :M
-.029(Since the expressions that are allowable in the )A
f9_12 sf
-.044(if\(\))A
f0_12 sf
-.031( statement may themselves be)A
f9_12 sf
-.055( if\(\))A
108 181 :M
f0_12 sf
-.041(statements,  we should understand how the nested)A
f9_12 sf
-.06( )A
f2_12 sf
(\324)S
f9_12 sf
-.06(if)A
f0_12 sf
-.039(\325 statement is interpreted by the)A
108 194 :M
-.056(compiler.  In general and unless include in a separate block, an \324)A
f9_12 sf
-.087(else)A
f0_12 sf
-.06(\325 statement will)A
108 207 :M
-.048(associate with the nearest previous \324)A
f9_12 sf
-.074(if)A
f0_12 sf
-.048(\325 statement.  That is to say,)A
126 232 :M
f9_12 sf
-.115(if)A
f8_12 sf
-.12(\(<logical expression>\))A
378 232 :M
-.209(/* Example 4.4.1 */)A
162 244 :M
-.218(<statement>)A
126 256 :M
f9_12 sf
.178 .018(else if)J
f8_12 sf
.306 .031(\(<logical expression>\))J
162 268 :M
-.218(<statement>)A
126 280 :M
f9_12 sf
1.069(else)A
162 292 :M
f8_12 sf
-.218(<statement>)A
108 315 :M
f0_12 sf
-.115(could also be written)A
126 340 :M
f9_12 sf
-.121(if)A
f8_12 sf
-.127( \(<logical expression>\){)A
414 340 :M
-.211(/* Example 4.4.2)A
126 352 :M
-.397(*/)A
162 364 :M
-.218(<statement>)A
126 376 :M
.373(})A
f9_12 sf
.373(else)A
f8_12 sf
.679 .068( {)J
162 388 :M
f9_12 sf
-.124(if)A
f8_12 sf
-.129( \(<logical expression>\) {)A
198 400 :M
-.218(<statement>)A
162 412 :M
.503 .05(} )J
f9_12 sf
.302(else)A
f8_12 sf
.549 .055( {)J
198 424 :M
-.218(<statement>)A
162 436 :M
(})S
126 448 :M
(})S
108 471 :M
f0_12 sf
-.112(with identical results.  It is a common error in all programming languages to incorrectly)A
108 484 :M
-.02(nest  )A
f9_12 sf
-.034(if\(\) )A
f0_12 sf
-.022( statements and the user should be careful how this is done if he is not)A
108 496 :M
-.059(planning to enclose the statement in a separate block \(as in Ex. 4.4.2\).)A
108 520 :M
f2_12 sf
2(4.5)A
162 520 :M
3.588 .359(Looping Statements)J
108 544 :M
f0_12 sf
-.072(GaussFit supports the C-like looping statements)A
126 569 :M
f9_12 sf
-.115(for)A
f8_12 sf
-.118(\(<initialize>;<test>;<increment>\))A
144 581 :M
-.218(<statement>)A
126 605 :M
f9_12 sf
.08(while)A
f8_12 sf
.086(\(<condition>\))A
144 617 :M
-.218(<statement>)A
126 641 :M
f9_12 sf
(do)S
f8_12 sf
( <statement> )S
f9_12 sf
(until)S
f8_12 sf
( \(<condition>\);)S
126 665 :M
f9_12 sf
(do)S
f8_12 sf
( <statement> )S
f9_12 sf
(while)S
f8_12 sf
( \(<condition>\);)S
126 689 :M
f9_12 sf
.045(loop)A
f8_12 sf
.177 .018( <statement> )J
f9_12 sf
.045(until)A
f8_12 sf
.281 .028( \(<condition>\);)J
126 713 :M
f9_12 sf
.045(loop)A
f8_12 sf
.177 .018( <statement> )J
f9_12 sf
.045(while)A
f8_12 sf
.281 .028( \(<condition>\);)J
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(Malmaison; page: 26 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(26)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 81 :M
-.175(and the loop-terminating statement:)A
108 106 :M
f9_12 sf
.635(break)A
f8_12 sf
(;)S
108 129 :M
f2_12 sf
1.75(4.5.1)A
144 129 :M
3.496 .35(While Loops)J
108 154 :M
f0_12 sf
.31 .031(The syntax of a)J
f8_12 sf
.123 .012( )J
f9_12 sf
.601 .06(while\(\) )J
f0_12 sf
.343 .034(loop is as follows:)J
126 179 :M
f9_12 sf
-.013(while)A
f8_12 sf
-.014(\(<logical expression>\))A
144 191 :M
-.218(<statement>)A
108 215 :M
f0_12 sf
-.154(where)A
f8_12 sf
-.189( <logical expression> )A
f0_12 sf
-.125(can be either a logical expression returning a)A
108 228 :M
-.003(true/false result or a function call returning a true/false result \(e.g. the)A
f9_12 sf
( import\(\))S
108 241 :M
f0_12 sf
-.115(function\) and)A
f8_12 sf
-.168( <statement> )A
f0_12 sf
-.113(can be either a simple expression or a statement block.)A
108 253 :M
-.094(The logical expression is evaluated first and if true the body of the loop is executed.  If)A
108 265 :M
-.069(the expression proves false then the loop is skipped entirely.)A
108 289 :M
-.098(If the condition being evaluated needs to be updated, then it should be done in the body)A
108 301 :M
-.076(of the loop.  For example, if the loop is checking a counting variable value, as in)A
126 326 :M
f8_12 sf
-.238(i = 0;)A
126 338 :M
f9_12 sf
.114(while)A
f8_12 sf
.251 .025( \(i <= 5\) {)J
144 350 :M
-.218(<statement>)A
144 362 :M
-.22(i = i + 1;)A
126 374 :M
(})S
108 398 :M
f0_12 sf
-.073(the variable)A
f8_12 sf
-.113( i )A
f0_12 sf
-.075(needs to be updated \(e.g. as shown\) or else the loop will continue)A
108 410 :M
-.099(infinitely.)A
108 435 :M
.031 .003(The most common use of the)J
f9_12 sf
.038 .004( while\(\) )J
f0_12 sf
.033 .003(loop is in the following example:)J
126 460 :M
f9_12 sf
.449(while)A
f8_12 sf
.449(\()A
f9_12 sf
.449(import)A
f8_12 sf
1.603 .16(\(\)\) {)J
144 472 :M
f9_12 sf
.177(export)A
f8_12 sf
.196(\(.......\);)A
126 484 :M
(})S
108 507 :M
f0_12 sf
-.067(In this case, and indeed for all cases in which a function is used to check the loop, no)A
108 520 :M
-.019(increment is needed since the returned value from)A
f9_12 sf
-.027( import\(\) )A
f0_12 sf
-.018(will decide if the)A
108 532 :M
-.063(loop continues.  One caution, however, if the loop is conditioned on a user-defined)A
108 544 :M
-.092(function, care should be taken that the user\325s function will return a false \(zero\))A
108 556 :M
-.119(eventually to avoid an infinite loop.)A
108 580 :M
f2_12 sf
1.75(4.5.2)A
144 580 :M
3.334 .333(For Loops)J
108 605 :M
f0_12 sf
.267 .027(The syntax of the)J
f9_12 sf
.28 .028( for\(\) )J
f0_12 sf
.274 .027(loop is as follows:)J
126 630 :M
f9_12 sf
-.121(for)A
f8_12 sf
-.125( \(<initialize>; <test>; <increment>\))A
144 642 :M
-.218(<statement>)A
108 666 :M
f0_12 sf
-.186(where)A
f8_12 sf
-.229( <initialize> )A
f0_12 sf
-.153(in a non-terminated assignment statement that initializes a)A
108 679 :M
-.106(counting variable,)A
f8_12 sf
-.158( <test> )A
f0_12 sf
-.104(is a logical expression which tests the value of the)A
108 691 :M
-.146(variable against a specified limit, and increment is either a null statement or an)A
108 703 :M
-.13(assignment statement which either decrements or increments the counting variable.  A)A
108 715 :M
-.077(standard example of this is as follows:)A
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(Malmaison; page: 27 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(27)S
144 82 :M
f9_12 sf
-.055(for)A
f8_12 sf
-.059( \(i=0; i<5; i=i+1\))A
162 94 :M
-.218(<statement>)A
126 118 :M
f0_12 sf
-.14(This example will execute)A
f8_12 sf
-.2( <statement> )A
f0_12 sf
-.141(five times.)A
126 143 :M
-.141(The loop is initialized with the)A
f8_12 sf
-.222( <initialize> )A
f0_12 sf
-.148(statement \()A
f8_12 sf
-.222(i=0)A
f0_12 sf
-.156(\) and then the)A
126 156 :M
f8_12 sf
-.112(<test> )A
f0_12 sf
-.075(statement \()A
f8_12 sf
-.112(i<5)A
f0_12 sf
-.073(\) is performed.  If true, the body of the loop is performed and)A
126 169 :M
-.088(then the)A
f8_12 sf
-.133( <increment> )A
f0_12 sf
-.088(is performed. For C users, note that the incrementation is)A
126 182 :M
-.122(accomplished by the assignment )A
f8_12 sf
-.171(i = i + 1)A
f0_12 sf
-.113( and not the more familiar )A
f8_12 sf
-.171(i++)A
f0_12 sf
-.122(.   The)A
126 195 :M
f8_12 sf
-.154(<test> )A
f0_12 sf
-.102(is again executed and if true the loop continues. The user should trace)A
126 207 :M
-.134(through the execution of this example to convince himself that indeed the loop executes)A
126 219 :M
-.065(five times.)A
126 244 :M
-.114(A null)A
f8_12 sf
-.162( <initialize> )A
f0_12 sf
-.13(and)A
f8_12 sf
-.162( <increment> )A
f0_12 sf
-.109(expression is allowed for this)A
126 257 :M
-.085(statement.  It should be kept in mind, however, that the)A
f8_12 sf
-.129( <test> )A
f0_12 sf
-.098(must eventually)A
126 270 :M
-.079(prove true for this loop to properly exit.  The)A
f8_12 sf
-.125( <test> )A
f0_12 sf
-.09(expression may also be a)A
126 282 :M
-.101(function call.)A
126 306 :M
-.132(This statement is similar to the Fortran DO loop construct with the sole difference that)A
126 318 :M
-.123(the increment may be stated explicitly and the loop may be zero indexed. To show the)A
126 330 :M
-.131(comparison:)A
-1 -1 142 346 1 1 141 345 @b
-1 -1 142 346 1 1 141 345 @b
142 346 -1 1 542 345 1 142 345 @a
-1 -1 543 346 1 1 542 345 @b
-1 -1 543 346 1 1 542 345 @b
-1 -1 142 358 1 1 141 346 @b
-1 -1 543 358 1 1 542 346 @b
-1 -1 334 358 1 1 333 345 @b
162 367 :M
f2_12 sf
2.687 .269(GaussFit  Example)J
385 367 :M
2.094 .209(Fortran Example)J
-1 -1 142 370 1 1 141 358 @b
-1 -1 543 370 1 1 542 358 @b
-1 -1 334 370 1 1 333 357 @b
-1 -1 142 371 1 1 141 370 @b
142 371 -1 1 542 370 1 142 370 @a
-1 -1 543 371 1 1 542 370 @b
-1 -1 142 395 1 1 141 371 @b
-1 -1 543 395 1 1 542 371 @b
-1 -1 334 395 1 1 333 382 @b
144 405 :M
f9_12 sf
-.073(for)A
f8_12 sf
-.077(\(i=0; i<5; i = i + 1\))A
342 405 :M
-.208(       do 10 i =1,5,1)A
-1 -1 142 407 1 1 141 395 @b
-1 -1 543 407 1 1 542 395 @b
-1 -1 334 407 1 1 333 394 @b
189 417 :M
-.218(<statement>)A
378 417 :M
-.211(      <statement>)A
-1 -1 142 419 1 1 141 407 @b
-1 -1 543 419 1 1 542 407 @b
-1 -1 334 419 1 1 333 406 @b
342 429 :M
-.212(10     continue)A
-1 -1 142 431 1 1 141 419 @b
-1 -1 543 431 1 1 542 419 @b
-1 -1 334 431 1 1 333 418 @b
-1 -1 142 444 1 1 141 443 @b
-1 -1 142 444 1 1 141 443 @b
142 444 -1 1 542 443 1 142 443 @a
-1 -1 543 444 1 1 542 443 @b
-1 -1 543 444 1 1 542 443 @b
-1 -1 142 443 1 1 141 431 @b
-1 -1 543 443 1 1 542 431 @b
-1 -1 334 444 1 1 333 430 @b
126 465 :M
f0_12 sf
-.098(Both of these loops will execute five times but  it should be noted that the GaussFit)A
126 477 :M
-.098(example is zero indexed \(not by necessity\) while the Fortran example is one indexed.)A
126 489 :M
-.094(This is an important consideration when accessing vector variables.)A
126 513 :M
f2_12 sf
1.75(4.5.3)A
162 513 :M
4.403 .44(Do/Loop-While Loops)J
126 537 :M
f0_12 sf
-.061(The syntax for the do/loop-while\(\) loop is:.)A
139 562 :M
f9_12 sf
1.604(do)A
171 574 :M
f8_12 sf
-.218(<statement>)A
139 586 :M
f9_12 sf
-.02(while)A
f8_12 sf
-.021(\(<logical expression>\);)A
139 610 :M
-.397(or)A
139 634 :M
f9_12 sf
.068(loop)A
f8_12 sf
0 12 rm
.075(<statement>)A
0 -12 rm
139 658 :M
f9_12 sf
-.02(while)A
f8_12 sf
-.021(\(<logical expression>\);)A
126 682 :M
f0_12 sf
-.159(where)A
f8_12 sf
-.195( <statement>  )A
f0_12 sf
-.136(is either a simple statement or a compound statement and)A
126 695 :M
f8_12 sf
-.217(<logical expression> )A
f0_12 sf
-.139(is a relational/logical expression or function call the)A
126 707 :M
-.066(result of which is either true or false.)A
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(Malmaison; page: 28 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(28)S
388 57 :M
-.03(GaussFit User\325s Manual)A
108 81 :M
-.079(This loop will evaluate at least once since the test condition is at the bottom of the loop.)A
108 94 :M
6.601 .66(The )J
f9_12 sf
3.072(do)A
f0_12 sf
1.423(/)A
f9_12 sf
3.072(loop)A
f0_12 sf
1.704(-)A
f9_12 sf
3.072(while\(\))A
f0_12 sf
8.515 .851( expression will continue while the)J
108 107 :M
f8_12 sf
-.149(<logical\312expression> )A
f0_12 sf
-.097(is true.)A
-1 -1 106 123 1 1 105 122 @b
-1 -1 106 123 1 1 105 122 @b
106 123 -1 1 524 122 1 106 122 @a
-1 -1 525 123 1 1 524 122 @b
-1 -1 525 123 1 1 524 122 @b
-1 -1 106 135 1 1 105 123 @b
-1 -1 525 135 1 1 524 123 @b
-1 -1 293 135 1 1 292 122 @b
126 144 :M
f2_12 sf
3.47 .347(GaussFit Example)J
324 144 :M
2.094 .209(Fortran Example)J
-1 -1 106 147 1 1 105 135 @b
-1 -1 525 147 1 1 524 135 @b
-1 -1 293 147 1 1 292 134 @b
-1 -1 106 148 1 1 105 147 @b
106 148 -1 1 524 147 1 106 147 @a
-1 -1 525 148 1 1 524 147 @b
-1 -1 106 172 1 1 105 148 @b
-1 -1 525 172 1 1 524 148 @b
-1 -1 293 172 1 1 292 159 @b
108 182 :M
f9_12 sf
1.003 .1(  do)J
f8_12 sf
({)S
306 182 :M
-.213( 10   continue)A
-1 -1 106 184 1 1 105 172 @b
-1 -1 525 184 1 1 524 172 @b
-1 -1 293 184 1 1 292 171 @b
126 194 :M
-.218(<statement>)A
306 194 :M
-.21(        <statement)A
-1 -1 106 196 1 1 105 184 @b
-1 -1 525 196 1 1 524 184 @b
-1 -1 293 196 1 1 292 183 @b
108 206 :M
(} )S
f9_12 sf
.01(while)A
f8_12 sf
.066 .007(\(<logical expr>\);)J
306 206 :M
-.206(      if\(<log expr>\) goto 10)A
-1 -1 106 208 1 1 105 196 @b
-1 -1 525 208 1 1 524 196 @b
-1 -1 293 208 1 1 292 195 @b
-1 -1 106 221 1 1 105 220 @b
-1 -1 106 221 1 1 105 220 @b
106 221 -1 1 524 220 1 106 220 @a
-1 -1 525 221 1 1 524 220 @b
-1 -1 525 221 1 1 524 220 @b
-1 -1 106 220 1 1 105 208 @b
-1 -1 525 220 1 1 524 208 @b
-1 -1 293 221 1 1 292 207 @b
108 242 :M
f2_12 sf
1.75(4.5.4)A
144 242 :M
4.642 .464(Do/Loop-Until Loops)J
108 266 :M
f0_12 sf
-.094(The syntax for the do/loop-until\(\) loop is:)A
153 291 :M
f9_12 sf
1.604(do)A
184 303 :M
f8_12 sf
-.218(<statement>)A
153 315 :M
f9_12 sf
-.02(until)A
f8_12 sf
-.021(\(<logical expression>\);)A
153 339 :M
-.397(or)A
153 363 :M
f9_12 sf
1.069(loop)A
184 375 :M
f8_12 sf
-.218(<statement>)A
153 387 :M
f9_12 sf
-.02(until)A
f8_12 sf
-.021(\(<logical expression>\);)A
108 411 :M
f0_12 sf
-.158(where)A
f8_12 sf
-.194( <statement> )A
f0_12 sf
-.134( is either a simple statement or a compound statement and)A
108 424 :M
f8_12 sf
-.212(<logical expression>)A
f0_12 sf
-.134( is a relational/logical expression or function call the result)A
108 436 :M
-.06(of which is either true or false.)A
108 460 :M
-.123(This loop will evaluate at least once since the test condition is at the bottom of the loop.)A
108 473 :M
.092(The)A
f9_12 sf
.246 .025( do)J
f0_12 sf
(/)S
f9_12 sf
.106(loop-until\(\))A
f0_12 sf
.283 .028( expression will continue until the)J
f8_12 sf
.532 .053( <logical)J
108 486 :M
-.07(expression> )A
f0_12 sf
-.041(is true\(i.e. as long as it is false\).)A
-1 -1 115 502 1 1 114 501 @b
-1 -1 115 502 1 1 114 501 @b
115 502 -1 1 524 501 1 115 501 @a
-1 -1 525 502 1 1 524 501 @b
-1 -1 525 502 1 1 524 501 @b
-1 -1 115 514 1 1 114 502 @b
-1 -1 525 514 1 1 524 502 @b
-1 -1 311 514 1 1 310 501 @b
135 523 :M
f2_12 sf
3.47 .347(GaussFit Example)J
378 523 :M
2.094 .209(Fortran Example)J
-1 -1 115 526 1 1 114 514 @b
-1 -1 525 526 1 1 524 514 @b
-1 -1 311 526 1 1 310 513 @b
-1 -1 115 527 1 1 114 526 @b
115 527 -1 1 524 526 1 115 526 @a
-1 -1 525 527 1 1 524 526 @b
-1 -1 115 551 1 1 114 527 @b
-1 -1 525 551 1 1 524 527 @b
-1 -1 311 551 1 1 310 538 @b
135 561 :M
f9_12 sf
.302(do)A
f8_12 sf
.549 .055( {)J
324 561 :M
-.213( 10   continue)A
-1 -1 115 563 1 1 114 551 @b
-1 -1 525 563 1 1 524 551 @b
-1 -1 311 563 1 1 310 550 @b
135 573 :M
-.218(<statement>)A
324 573 :M
-.207(            <statement>)A
-1 -1 115 575 1 1 114 563 @b
-1 -1 525 575 1 1 524 563 @b
-1 -1 311 575 1 1 310 562 @b
117 585 :M
(} )S
f9_12 sf
.01(until)A
f8_12 sf
.066 .007(\(<logical expr>\);)J
324 585 :M
-.206(      if\(.not. <log. expr>\))A
-1 -1 115 587 1 1 114 575 @b
-1 -1 525 587 1 1 524 575 @b
-1 -1 311 587 1 1 310 574 @b
396 597 :M
-.231(goto 10)A
-1 -1 115 599 1 1 114 587 @b
-1 -1 525 599 1 1 524 587 @b
-1 -1 311 599 1 1 310 586 @b
-1 -1 115 612 1 1 114 611 @b
-1 -1 115 612 1 1 114 611 @b
115 612 -1 1 524 611 1 115 611 @a
-1 -1 525 612 1 1 524 611 @b
-1 -1 525 612 1 1 524 611 @b
-1 -1 115 611 1 1 114 599 @b
-1 -1 525 611 1 1 524 599 @b
-1 -1 311 612 1 1 310 598 @b
108 633 :M
f2_12 sf
1.75(4.5.5)A
144 633 :M
.418(Break)A
108 658 :M
f0_12 sf
-.064(The \324)A
f9_12 sf
-.089(break)A
f0_12 sf
-.057(\325 statement is used to terminate a loop prematurely.  It is similar to using a)A
108 671 :M
-.087(goto statement in Fortran to exit a DO loop.  Most often it will be used in an \324)A
f9_12 sf
-.134(if)A
f0_12 sf
(\325)S
108 683 :M
-.099(expression to conditionally exit a loop as follows:)A
endp
%%Page: 29 29
%%BeginPageSetup
initializepage
(Malmaison; page: 29 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(29)S
-1 -1 142 72 1 1 141 71 @b
-1 -1 142 72 1 1 141 71 @b
142 72 -1 1 542 71 1 142 71 @a
-1 -1 543 72 1 1 542 71 @b
-1 -1 543 72 1 1 542 71 @b
-1 -1 142 84 1 1 141 72 @b
-1 -1 543 84 1 1 542 72 @b
-1 -1 316 84 1 1 315 71 @b
157 93 :M
f2_12 sf
3.47 .347(GaussFit Example)J
376 93 :M
2.094 .209(Fortran Example)J
-1 -1 142 96 1 1 141 84 @b
-1 -1 543 96 1 1 542 84 @b
-1 -1 316 96 1 1 315 83 @b
-1 -1 142 97 1 1 141 96 @b
142 97 -1 1 542 96 1 142 96 @a
-1 -1 543 97 1 1 542 96 @b
-1 -1 142 121 1 1 141 97 @b
-1 -1 543 121 1 1 542 97 @b
-1 -1 316 121 1 1 315 108 @b
360 131 :M
f8_12 sf
-.248(i = 0)A
-1 -1 142 133 1 1 141 121 @b
-1 -1 543 133 1 1 542 121 @b
-1 -1 316 133 1 1 315 120 @b
157 143 :M
-.238(i = 0;)A
360 143 :M
-.207(if\(not. import\(\)\)goto 20)A
-1 -1 142 145 1 1 141 133 @b
-1 -1 543 145 1 1 542 133 @b
-1 -1 316 145 1 1 315 132 @b
157 155 :M
f9_12 sf
.449(while)A
f8_12 sf
.449(\()A
f9_12 sf
.449(import)A
f8_12 sf
1.603 .16(\(\)\) {)J
324 155 :M
-.397(10)A
360 155 :M
-.227(continue)A
-1 -1 142 157 1 1 141 145 @b
-1 -1 543 157 1 1 542 145 @b
-1 -1 316 157 1 1 315 144 @b
175 167 :M
.257 .026(if\(i == 5\) )J
f9_12 sf
.096(break)A
f8_12 sf
(;)S
360 167 :M
-.209(if\(i .eq. 5\) goto 20)A
-1 -1 142 169 1 1 141 157 @b
-1 -1 543 169 1 1 542 157 @b
-1 -1 316 169 1 1 315 156 @b
175 179 :M
f9_12 sf
.177(export)A
f8_12 sf
.196(\(.......\);)A
360 179 :M
-.209(call export\(......\))A
-1 -1 142 181 1 1 141 169 @b
-1 -1 543 181 1 1 542 169 @b
-1 -1 316 181 1 1 315 168 @b
175 191 :M
-.22(i = i + 1;)A
360 191 :M
-.223(i = i + 1)A
-1 -1 142 193 1 1 141 181 @b
-1 -1 543 193 1 1 542 181 @b
-1 -1 316 193 1 1 315 180 @b
175 203 :M
(})S
360 203 :M
-.209(if\(import\(\)\) goto 10)A
-1 -1 142 205 1 1 141 193 @b
-1 -1 543 205 1 1 542 193 @b
-1 -1 316 205 1 1 315 192 @b
324 215 :M
-.397(20)A
360 215 :M
-.227(continue)A
-1 -1 142 217 1 1 141 205 @b
-1 -1 543 217 1 1 542 205 @b
-1 -1 316 217 1 1 315 204 @b
-1 -1 142 230 1 1 141 229 @b
-1 -1 142 230 1 1 141 229 @b
142 230 -1 1 542 229 1 142 229 @a
-1 -1 543 230 1 1 542 229 @b
-1 -1 543 230 1 1 542 229 @b
-1 -1 142 229 1 1 141 217 @b
-1 -1 543 229 1 1 542 217 @b
-1 -1 316 230 1 1 315 216 @b
144 251 :M
f0_12 sf
-.123(In this case the loop will terminate  after five iterations regardless of the returned)A
144 264 :M
.113 .011(value of the)J
f9_12 sf
.153 .015( import\(\) )J
f0_12 sf
.111 .011(function.  The break command may be used for any of)J
144 276 :M
-.074(the loop structures we have seen.  It is an effective way of aborting a loop when an)A
144 288 :M
-.015(error is discovered.)A
108 312 :M
f2_12 sf
2(4.6)A
162 312 :M
.667(Functions)A
108 336 :M
f0_12 sf
-.1(The structure of a model file is similar to that of a normal C program, and also to a Fortran)A
108 348 :M
-.098(program to a lesser extent.  A generic example is as follows:)A
126 373 :M
f8_12 sf
-.213(<declarations>)A
558 373 :M
-.204(/* Global variable declarations */)A
126 385 :M
-.213(<declarations>)A
126 409 :M
-.238(main\(\))A
558 409 :M
-.203(/* main\(\) function - must be present */)A
126 421 :M
({)S
666 421 :M
-.204(/* begin main\(\) function block */)A
144 433 :M
-.209(<local declarations>)A
295 433 :M
-.204(/* Local declarations \(optional\) */)A
144 457 :M
-.218(<statement>)A
267 457 :M
-.203(/* program statements - usually loop */)A
144 469 :M
-.218(<statement>)A
330 469 :M
-.205(/* of import\(\) and export\(\) */)A
126 481 :M
(})S
323 481 :M
-.205(/* end main\(\) function block */)A
126 505 :M
-.213(<declarations>)A
253 505 :M
-.203(/* More \(optional\) global declarations */)A
126 529 :M
-.227(userfn\(\))A
594 529 :M
-.204(/* User defined function \(optional\) */)A
126 541 :M
({)S
295 541 :M
-.204(/* begin userfn\(\) function block */)A
144 553 :M
-.202(<local declarations>/* Local declarations \(optional\) */)A
144 577 :M
-.218(<statement>)A
365 577 :M
-.207(/* program statements  */)A
144 589 :M
-.213(return <value>)A
260 589 :M
-.203(/* return a value to calling function */)A
126 601 :M
(})S
309 601 :M
-.204(/* end userfn\(\) function block */)A
108 624 :M
f0_12 sf
-.073(The pattern of user defined functions may continue as long as needed.  In general, most of)A
108 636 :M
-.142(the global declarations will be placed at the top  of the model file followed by the main)A
108 648 :M
-.096(function and then the user defined functions.  Models may be split up into separate files and)A
108 660 :M
-.092(then recombined with the include statement \(see \2444.8\).)A
108 684 :M
-.128(There is no requirement for where data are read in and later exported but in general the)A
108 697 :M
f8_12 sf
-.116(main\(\) )A
f0_12 sf
-.074(function will include a )A
f9_12 sf
-.116(while)A
f0_12 sf
-.076(\(\) loop to import the data and then perhaps a call)A
108 710 :M
-.09(to )A
f8_12 sf
-.158(userfn\(\) )A
f0_12 sf
-.105(which will use the data to construct an equation of condition to be exported.)A
endp
%%Page: 30 30
%%BeginPageSetup
initializepage
(Malmaison; page: 30 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(30)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 82 :M
-.065(Every model in GaussFit must define at least one function,)A
f8_12 sf
-.096( main\(\))A
f0_12 sf
-.062(, just as in C.  The)A
90 95 :M
-.107(function)A
f8_12 sf
-.155( main\(\) )A
f0_12 sf
-.097(will be the first one executed.  If there is no function)A
f8_12 sf
-.155( main\(\) )A
f0_12 sf
-.122(a run-)A
90 107 :M
-.089(time error will result.)A
108 131 :M
f2_12 sf
1.75(4.6.1)A
144 131 :M
4.635 .464(User-defined Functions)J
108 155 :M
f0_12 sf
-.067(GaussFit allows the user to define his own functions. These can return either a value or)A
108 167 :M
-.091(an array of values. The syntax is similar to that of a C function:)A
126 192 :M
f8_12 sf
-.208(fname\(<argument list>\))A
126 216 :M
({)S
144 216 :M
-.205(<optional local declarations>)A
144 228 :M
-.218(<statement>)A
144 240 :M
-.218(<statement>)A
144 252 :M
(\311)S
144 264 :M
f9_12 sf
(return)S
f8_12 sf
( <value to be returned>;)S
126 276 :M
(})S
108 300 :M
f0_12 sf
-.153(where)A
f8_12 sf
-.188( <fname> )A
f0_12 sf
-.123(is the function name, )A
f8_12 sf
-.188(<argument list> )A
f0_12 sf
-.142(is a comma delimited)A
108 312 :M
-.105(list of variables that were passed to the function from the calling routine,)A
108 325 :M
f8_12 sf
-.156(<statement> )A
f0_12 sf
-.11(and )A
f8_12 sf
-.156(<declarations>)A
f0_12 sf
-.107( are as we have seen them, and)A
f8_12 sf
-.182( <value)A
108 338 :M
-.227(to be returned> )A
f0_12 sf
-.146(is a variable name \(either scalar or vector\) declared in either the)A
108 350 :M
-.117(argument list or local or global declarations.)A
108 374 :M
-.074(The arguments in a GaussFit function are passed )A
f4_12 sf
-.076(by value)A
f0_12 sf
-.075(, and the argument  count in)A
108 386 :M
-.147(the function definition must match the count in the call statement.  Argument list)A
108 398 :M
-.142(variables are declared locally automatically and so there is no need for their type to be)A
108 410 :M
-.105(explicitly stated as in done in other languages.)A
108 434 :M
-.099(The pass by value of the arguments means that only a copy of the argument is sent to)A
108 446 :M
-.084(the function, not the argument itself.  No matter what the function does, it cannot)A
108 458 :M
-.105(change the value of an argument as it appear in the main program.  If it is necessary to)A
108 470 :M
-.115(change the value of a variable from within a function, the the variable should be)A
108 482 :M
-.108(declared in the global declarations section of the program, that is, prior to the definition)A
108 494 :M
(of any functions.)S
108 519 :M
-.055(The keyword)A
f8_12 sf
-.068( )A
f9_12 sf
-.068(return)A
f8_12 sf
-.068( )A
f0_12 sf
-.043(tells GaussFit the value that is to be returned to the calling)A
108 531 :M
-.107(function. The value returned may be either a single datum or an entire array.)A
108 555 :M
f2_12 sf
1.75(4.6.2)A
144 555 :M
4.075 .408(Built-in Functions)J
108 580 :M
f0_12 sf
.498 .05(GaussFit supports the following standard built-in functions:)J
f8_12 sf
.136 .014( )J
f9_12 sf
.15(abs)A
f0_12 sf
.104 .01(, )J
f9_12 sf
.15(trunc,)A
f8_12 sf
.136 .014( )J
f9_12 sf
.15(sqrt)A
f0_12 sf
(,)S
108 593 :M
f9_12 sf
.645(sin)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(cos)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(tan)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(asin)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(acos)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(atan)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(log10)A
f0_12 sf
.269(,)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(log)A
f8_12 sf
.586 .059( )J
f0_12 sf
1.586 .159(\(base )J
f4_12 sf
.477(e)A
f0_12 sf
.313(\),)A
f8_12 sf
.586 .059( )J
f9_12 sf
.645(exp)A
f0_12 sf
(,)S
108 606 :M
f9_12 sf
.925(trunc)A
f0_12 sf
(.)S
108 631 :M
.141 .014(An important built-in function is the parameterless function)J
f8_12 sf
( )S
f9_12 sf
.046(triangularize)A
f8_12 sf
.046(\(\))A
f0_12 sf
(.)S
108 643 :M
-.124(When this function is called, GaussFit will attempt to triangularize the matrix of the)A
108 655 :M
-.047(equations of condition using Householder transformations. This has two useful)A
108 667 :M
-.066(functions: first, it reduces the amount of space being used, which allows larger)A
108 679 :M
-.097(problems to be solved in limited space by breaking the input into \322chunks\323, and)A
108 691 :M
-.1(second, it may speed the execution of a program by reducing the order of the matrix)A
108 703 :M
-.108(that has to be triangularized at each stage in the calculation. However, this function is)A
endp
%%Page: 31 31
%%BeginPageSetup
initializepage
(Malmaison; page: 31 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(31)S
126 81 :M
-.098(included only for completeness. The user will usually find it more convenient to use the)A
126 94 :M
f9_12 sf
.366(triang)A
f8_12 sf
.333 .033( )J
f0_12 sf
1.372 .137(keyword \(see \2443.1.1.2\).)J
108 118 :M
f2_12 sf
2(4.7)A
162 118 :M
1.329 .133(Input and Output)J
108 142 :M
f0_12 sf
-.09(GaussFit does not have input and output statements in the traditional sense. \322Input\323 to a)A
108 154 :M
-.106(GaussFit program means the making available to the program of the values of)A
108 166 :M
-.093(observations, parameters, and data. Since the environment file contains the names of all the)A
108 178 :M
-.115(data and parameter files known to the program, \322input\323 means cycling through the declared)A
108 190 :M
-.139(data files, reading the information from them one observation \(line\) at a time until all data)A
108 202 :M
-.081(lines have been read.)A
108 227 :M
-.044(Each input line is read in by the parameterless function)A
f8_12 sf
-.067( )A
f9_12 sf
-.067(import)A
f8_12 sf
-.067(\(\))A
f0_12 sf
-.048(. When this function)A
108 239 :M
-.101(is called, GaussFit determines the location of the next line of data that has not been read,)A
108 251 :M
-.109(and attempts to read it. It associates the values it reads with the variables of type)A
108 264 :M
f9_12 sf
.102(observation)A
f8_12 sf
.093 .009( )J
f0_12 sf
.082(and)A
f8_12 sf
.093 .009( )J
f9_12 sf
.102(data)A
f8_12 sf
.093 .009( )J
f0_12 sf
.243 .024(that have been declared. It then returns with the value 1,)J
108 277 :M
-.067(which can be tested by a)A
f8_12 sf
-.099( )A
f9_12 sf
-.099(while)A
f8_12 sf
-.099( )A
f0_12 sf
-.066(statement in the program. If the attempt to fetch a new)A
108 290 :M
-.015(line of data fails,)A
f8_12 sf
( )S
f9_12 sf
-.026(import)A
f8_12 sf
-.026(\(\) )A
f0_12 sf
-.018(returns the value 0. This is normally used by the program)A
108 302 :M
-.113(to indicate the completion of the task of forming the equations of condition.)A
108 326 :M
-.077(Therefore, a typical program in GaussFit has the following form:)A
126 351 :M
f8_12 sf
-.208(<global declarations>)A
126 363 :M
f9_12 sf
.302(main)A
f8_12 sf
.928 .093(\(\) {)J
144 375 :M
f9_12 sf
.535(while)A
f8_12 sf
.535(\()A
f9_12 sf
.535(import)A
f8_12 sf
.803(\(\)\))A
162 387 :M
-.204(<calculate equations of condition>)A
126 399 :M
(})S
108 422 :M
f0_12 sf
-.133(This program cycles through each line of data in all of the declared data files, calculating)A
108 434 :M
-.108(equations of condition corresponding to each line. The program terminates when all the)A
108 446 :M
-.089(data have been read, and execution then is turned over to the least squares or robust)A
108 458 :M
-.126(estimation algorithm that the user has selected.)A
108 482 :M
-.111(When calculating equations of condition that involve indexed parameters, GaussFit)A
108 494 :M
-.113(automatically supplies the subscripts of these parameters based on information in the)A
108 507 :M
f9_12 sf
.057(data)A
f8_12 sf
.051 .005( )J
f0_12 sf
.104 .01(file as well as in the)J
f8_12 sf
.051 .005( )J
f9_12 sf
.057(parameter)A
f8_12 sf
.051 .005( )J
f0_12 sf
.144 .014(file. When the subscript is omitted from an)J
108 520 :M
-.067(indexed parameter, the value of the index that is used is the one found in the)A
f8_12 sf
-.102( )A
f9_12 sf
-.102(data)A
f8_12 sf
-.102( )A
f0_12 sf
-.076(file)A
108 532 :M
-.113(for the current data line. The index can be overridden if the user explicitly supplies a)A
108 544 :M
-.065(subscript. For example, consider the following code fragment:)A
126 569 :M
f9_12 sf
.275(parameter)A
f8_12 sf
1.45 .145( a[plate];)J
126 581 :M
f9_12 sf
.587(observation)A
f8_12 sf
1.469 .147( x;)J
126 593 :M
f9_12 sf
.165(data)A
f8_12 sf
.724 .072( plate;)J
126 605 :M
(\311)S
126 617 :M
-.209(u = a[plate+1] - x;)A
126 629 :M
(\311)S
108 653 :M
f0_12 sf
-.111(In this example, if the current value of)A
f8_12 sf
-.173( plate )A
f0_12 sf
-.113(is 5, then the parameter)A
f8_12 sf
-.173( a )A
f0_12 sf
-.118(that will be)A
108 666 :M
-.1(used in this equation of condition is)A
f8_12 sf
-.156( a[6].)A
f0_12 sf
-.106( If the subscript had been omitted from the)A
108 679 :M
-.067(assignment statement,)A
f8_12 sf
-.096( a[5] )A
f0_12 sf
-.073(would have been used.)A
108 704 :M
-.053(The)A
f8_12 sf
-.061( )A
f9_12 sf
-.061(export)A
f8_12 sf
-.061(\(\) )A
f0_12 sf
-.041(statement is the equivalent of an output statement for GaussFit. The)A
108 716 :M
-.093(purpose of the program written in GaussFit is to calculate equations of condition for the)A
endp
%%Page: 32 32
%%BeginPageSetup
initializepage
(Malmaison; page: 32 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(32)S
388 57 :M
-.03(GaussFit User\325s Manual)A
90 82 :M
-.029(least squares reduction. The)A
f8_12 sf
( )S
f9_12 sf
-.044(export)A
f8_12 sf
-.044(\(\) )A
f0_12 sf
-.032(statement sends the computed equations of)A
90 94 :M
-.093(condition to the least squares or robust estimation algorithm that is built into GaussFit. To)A
90 106 :M
-.105(complete the above program, we would have for example:)A
108 131 :M
f8_12 sf
-.208(<global declarations>)A
108 143 :M
f9_12 sf
.302(main)A
f8_12 sf
.928 .093(\(\) {)J
126 155 :M
f9_12 sf
.449(while)A
f8_12 sf
.449(\()A
f9_12 sf
.449(import)A
f8_12 sf
1.603 .16(\(\)\) {)J
144 167 :M
-.204(<calculate equations of condition>)A
144 179 :M
f9_12 sf
.016(export)A
f8_12 sf
.103 .01(\(<calculated value)J
0 2 rm
(1)S
0 -2 rm
(>\);)S
144 192 :M
f9_12 sf
.016(export)A
f8_12 sf
.103 .01(\(<calculated value)J
0 2 rm
(2)S
0 -2 rm
(>\);)S
126 205 :M
(})S
108 217 :M
(})S
90 240 :M
f0_12 sf
-.15(Notice in this example that the program may calculate more than one simultaneous equation)A
90 252 :M
-.087(of condition. This is typical for example where there may be independent )A
f4_12 sf
-.095(x)A
f0_12 sf
-.083( and )A
f4_12 sf
-.095(y)A
f0_12 sf
-.097( equations)A
90 264 :M
-.111(of condition. If more than one equation of condition is calculated from a given data line, it)A
90 276 :M
-.079(is essential that they be independent \(i.e., the Jacobian determinant must be of full rank\),)A
90 288 :M
-.071(otherwise some matrices that GaussFit computes will be singular. Up to four simultaneous)A
90 300 :M
-.109(equations of condition in up to four independent observational variables may be exported in)A
90 313 :M
.321 .032(this manner.  The)J
f8_12 sf
.117 .012( )J
f9_12 sf
.129(exportconstraint)A
f8_12 sf
.298 .03(\(\) )J
f0_12 sf
.321 .032(function is used to enforce an exact)J
90 325 :M
-.099(relationship that does not involve observations among the parameters of the problem. As)A
90 337 :M
-.103(with equations of condition, one calculates an expression equal to the constraint to be)A
90 350 :M
.348 .035(enforced, and then exports it as an argument to the)J
f8_12 sf
.132 .013( )J
f9_12 sf
.146(exportconstraint)A
f8_12 sf
.291(\(\))A
90 362 :M
f0_12 sf
-.05(function. Thus, in a linear fit we may force the line )A
f4_12 sf
-.058(y)A
f0_12 sf
-.046( = )A
f4_12 sf
-.062(ax)A
f0_12 sf
-.046( + )A
f4_12 sf
-.065(b)A
f0_12 sf
-.052( to go through the point \(0,1\))A
90 374 :M
-.107(by enforcing the constraint )A
f4_12 sf
-.136(b)A
f0_12 sf
-.111( = 1; This is done by executing the statement)A
108 399 :M
f9_12 sf
.529(exportconstraint)A
f8_12 sf
.635(\(b-1\);)A
90 422 :M
f0_12 sf
-.133(exactly once during the execution of the program \(usually the constraints are collected)A
90 434 :M
-.118(together and executed either at the start or at the end of the program\325s execution\).)A
90 458 :M
f2_12 sf
2(4.8)A
144 458 :M
2.833 .283(Include Statement)J
90 482 :M
f0_12 sf
-.075(As in C, the user may include code from separate files in his program. The syntax is)A
108 507 :M
f9_12 sf
.223(#include)A
f8_12 sf
1.226 .123( "filename")J
90 531 :M
f0_12 sf
-.158(where)A
f8_12 sf
-.194( filename )A
f0_12 sf
-.129(is the name of the file to be included. The included file may contain)A
90 543 :M
-.106(it\325s own set of global declarations but care should be taken that global definitions do not)A
90 555 :M
-.119(overlap between the main model file and the included file.This allows one to build up a)A
90 567 :M
-.079(library of subroutines for specialized tasks, and then to include the desired subroutines in)A
90 579 :M
-.063(the main program as desired. An example is shown in the double star example \(\2447.3\).)A
90 603 :M
f2_12 sf
2(4.9)A
144 603 :M
4.056 .406(Debugging Aids)J
90 627 :M
f0_12 sf
-.086(GaussFit provides some basic debugging aids in the form of a trace that can be turned on)A
90 639 :M
-.075(and off. When the trace is turned on, GaussFit will provide output of the calculated results)A
90 651 :M
-.128(as each program line is executed. The format of the trace statement is)A
108 676 :M
f9_12 sf
.66(#t)A
f7_12 sf
(n)S
90 700 :M
f0_12 sf
-.009(where )A
f7_12 sf
(n)S
f0_12 sf
-.008( is one of the integers 0, 1, 2, or 3, according to the Table 1.)A
endp
%%Page: 33 33
%%BeginPageSetup
initializepage
(Malmaison; page: 33 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 57 :M
f0_12 sf
-.03(GaussFit User\325s Manual)A
480 57 :M
(33)S
126 106 :M
f7_12 sf
(n)S
162 106 :M
f2_12 sf
.669(Result)A
-1 -1 124 97 1 1 123 96 @b
-1 -1 124 97 1 1 123 96 @b
124 97 -1 1 488 96 1 124 96 @a
-1 -1 489 97 1 1 488 96 @b
-1 -1 489 97 1 1 488 96 @b
-1 -1 124 109 1 1 123 97 @b
-1 -1 489 109 1 1 488 97 @b
-1 -1 154 109 1 1 153 96 @b
135 131 :M
f0_12 sf
(0)S
162 131 :M
(No trace.)S
-1 -1 124 110 1 1 123 109 @b
124 110 -1 1 488 109 1 124 109 @a
-1 -1 489 110 1 1 488 109 @b
-1 -1 124 134 1 1 123 110 @b
-1 -1 489 134 1 1 488 110 @b
-1 -1 154 134 1 1 153 121 @b
135 143 :M
(1)S
162 143 :M
-.123(Trace the value of every assignment statement.)A
-1 -1 124 146 1 1 123 134 @b
-1 -1 489 146 1 1 488 134 @b
-1 -1 154 146 1 1 153 133 @b
135 155 :M
(2)S
162 155 :M
-.146(Trace the value of every arithmetic operation and function call.)A
-1 -1 124 158 1 1 123 146 @b
-1 -1 489 158 1 1 488 146 @b
-1 -1 154 158 1 1 153 145 @b
135 167 :M
(3)S
162 167 :M
-.056(As with 2, but print the derivatives also.)A
-1 -1 124 171 1 1 123 170 @b
-1 -1 124 171 1 1 123 170 @b
124 171 -1 1 488 170 1 124 170 @a
-1 -1 489 171 1 1 488 170 @b
-1 -1 489 171 1 1 488 170 @b
-1 -1 124 170 1 1 123 158 @b
-1 -1 489 170 1 1 488 158 @b
-1 -1 154 171 1 1 153 157 @b
248 192 :M
-.137(Table 1: Results of Trace Levels)A
108 216 :M
-.134(The trace statement is an )A
f4_12 sf
-.14(executable statement.)A
f0_12 sf
-.138( This means that tracing will be turned on or)A
108 228 :M
-.091(off as the program encounters such a statement. This makes it possible to use a small value)A
108 240 :M
-.095(of )A
f7_12 sf
-.146(n)A
f0_12 sf
-.105( to locate the general area in the program which is causing the problem, and then to)A
108 252 :M
-.081(zero in on the error by choosing a larger value of )A
f7_12 sf
-.116(n)A
f0_12 sf
-.083( and doing a detailed trace. Also, those)A
108 264 :M
-.12(who are curious about how the derivative calculations are done can use the level 3 trace on)A
108 276 :M
-.122(a portion of the program and watch the \322cotangent bundle machine\323 in action.)A
108 300 :M
-.116(The results of all tracing activity will be found in the result file.)A
endp
%%Page: 34 34
%%BeginPageSetup
initializepage
(Malmaison; page: 34 of 34)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
108 57 :M
f0_12 sf
(34)S
388 57 :M
-.03(GaussFit User\325s Manual)A
72 93 :M
f2_12 sf
3(5.)A
108 93 :M
.78(Results)A
72 117 :M
f0_12 sf
-.092(The results of a reduction using GaussFit are recorded in the data files, the parameter file, the)A
72 129 :M
-.122(environment file and the result file. The residuals  in the data files will be updated after every)A
72 141 :M
-.127(iteration. The parameters in the parameter file which have been solved for will be updated after)A
72 153 :M
-.111(the successful completion of the reduction. The original parameters will be replaced.   Certain)A
72 165 :M
-.073(values \(such as sigma and scale\) are recorded in the environment file for future use \(i.e., if the)A
72 177 :M
-.097(program is rerun on the same data but with a different reduction method\), and are also recorded)A
72 189 :M
-.115(in the result file. Finally the result file contains the main results. At the present time it is very)A
72 201 :M
-.077(verbose and not elegantly formatted. However, it contains, in this order: partial)A
72 213 :M
-.119(triangularizations of the matrix \(if requested by the prmat keyword\); certain results of the)A
72 225 :M
-.146(iteration; the changes in the parameters, iteration by iteration; and the correlation  matrix of the)A
72 237 :M
-.122(reduction \(including a covariance column\(sigma\)\), in a matrix format \(if requested by the prmat)A
72 249 :M
.551 .055(keyword\).  See \2446.5.)J
endp
%%Trailer
end		% md
%%EOF
